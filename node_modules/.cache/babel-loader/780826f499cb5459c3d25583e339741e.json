{"ast":null,"code":"// Snap.svg 0.4.0\n// \n// Copyright (c) 2013 – 2015 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// \n// build: 2015-04-07\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// ┌────────────────────────────────────────────────────────────┐ \\\\\n// │ Eve 0.4.2 - JavaScript Events Library                      │ \\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\n(function (glob) {\n  var version = \"0.4.2\",\n      has = \"hasOwnProperty\",\n      separator = /[\\.\\/]/,\n      comaseparator = /\\s*,\\s*/,\n      wildcard = \"*\",\n      fun = function () {},\n      numsort = function (a, b) {\n    return a - b;\n  },\n      current_event,\n      stop,\n      events = {\n    n: {}\n  },\n      firstDefined = function () {\n    for (var i = 0, ii = this.length; i < ii; i++) {\n      if (typeof this[i] != \"undefined\") {\n        return this[i];\n      }\n    }\n  },\n      lastDefined = function () {\n    var i = this.length;\n\n    while (--i) {\n      if (typeof this[i] != \"undefined\") {\n        return this[i];\n      }\n    }\n  },\n\n  /*\\\n   * eve\n   [ method ]\n    * Fires event with given `name`, given scope and other parameters.\n    > Arguments\n    - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n   - scope (object) context for the event handlers\n   - varargs (...) the rest of arguments will be sent to event handlers\n    = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n  \\*/\n  eve = function (name, scope) {\n    name = String(name);\n    var e = events,\n        oldstop = stop,\n        args = Array.prototype.slice.call(arguments, 2),\n        listeners = eve.listeners(name),\n        z = 0,\n        f = false,\n        l,\n        indexed = [],\n        queue = {},\n        out = [],\n        ce = current_event,\n        errors = [];\n    out.firstDefined = firstDefined;\n    out.lastDefined = lastDefined;\n    current_event = name;\n    stop = 0;\n\n    for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n      indexed.push(listeners[i].zIndex);\n\n      if (listeners[i].zIndex < 0) {\n        queue[listeners[i].zIndex] = listeners[i];\n      }\n    }\n\n    indexed.sort(numsort);\n\n    while (indexed[z] < 0) {\n      l = queue[indexed[z++]];\n      out.push(l.apply(scope, args));\n\n      if (stop) {\n        stop = oldstop;\n        return out;\n      }\n    }\n\n    for (i = 0; i < ii; i++) {\n      l = listeners[i];\n\n      if (\"zIndex\" in l) {\n        if (l.zIndex == indexed[z]) {\n          out.push(l.apply(scope, args));\n\n          if (stop) {\n            break;\n          }\n\n          do {\n            z++;\n            l = queue[indexed[z]];\n            l && out.push(l.apply(scope, args));\n\n            if (stop) {\n              break;\n            }\n          } while (l);\n        } else {\n          queue[l.zIndex] = l;\n        }\n      } else {\n        out.push(l.apply(scope, args));\n\n        if (stop) {\n          break;\n        }\n      }\n    }\n\n    stop = oldstop;\n    current_event = ce;\n    return out;\n  }; // Undocumented. Debug only.\n\n\n  eve._events = events;\n  /*\\\n   * eve.listeners\n   [ method ]\n    * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n    > Arguments\n    - name (string) name of the event, dot (`.`) or slash (`/`) separated\n    = (array) array of event handlers\n  \\*/\n\n  eve.listeners = function (name) {\n    var names = name.split(separator),\n        e = events,\n        item,\n        items,\n        k,\n        i,\n        ii,\n        j,\n        jj,\n        nes,\n        es = [e],\n        out = [];\n\n    for (i = 0, ii = names.length; i < ii; i++) {\n      nes = [];\n\n      for (j = 0, jj = es.length; j < jj; j++) {\n        e = es[j].n;\n        items = [e[names[i]], e[wildcard]];\n        k = 2;\n\n        while (k--) {\n          item = items[k];\n\n          if (item) {\n            nes.push(item);\n            out = out.concat(item.f || []);\n          }\n        }\n      }\n\n      es = nes;\n    }\n\n    return out;\n  };\n  /*\\\n   * eve.on\n   [ method ]\n   **\n   * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n   | eve.on(\"*.under.*\", f);\n   | eve(\"mouse.under.floor\"); // triggers f\n   * Use @eve to trigger the listener.\n   **\n   > Arguments\n   **\n   - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n   - f (function) event handler function\n   **\n   = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment. \n   > Example:\n   | eve.on(\"mouse\", eatIt)(2);\n   | eve.on(\"mouse\", scream);\n   | eve.on(\"mouse\", catchIt)(1);\n   * This will ensure that `catchIt` function will be called before `eatIt`.\n   *\n   * If you want to put your handler before non-indexed handlers, specify a negative value.\n   * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n  \\*/\n\n\n  eve.on = function (name, f) {\n    name = String(name);\n\n    if (typeof f != \"function\") {\n      return function () {};\n    }\n\n    var names = name.split(comaseparator);\n\n    for (var i = 0, ii = names.length; i < ii; i++) {\n      (function (name) {\n        var names = name.split(separator),\n            e = events,\n            exist;\n\n        for (var i = 0, ii = names.length; i < ii; i++) {\n          e = e.n;\n          e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {\n            n: {}\n          });\n        }\n\n        e.f = e.f || [];\n\n        for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n          exist = true;\n          break;\n        }\n\n        !exist && e.f.push(f);\n      })(names[i]);\n    }\n\n    return function (zIndex) {\n      if (+zIndex == +zIndex) {\n        f.zIndex = +zIndex;\n      }\n    };\n  };\n  /*\\\n   * eve.f\n   [ method ]\n   **\n   * Returns function that will fire given event with optional arguments.\n   * Arguments that will be passed to the result function will be also\n   * concated to the list of final arguments.\n   | el.onclick = eve.f(\"click\", 1, 2);\n   | eve.on(\"click\", function (a, b, c) {\n   |     console.log(a, b, c); // 1, 2, [event object]\n   | });\n   > Arguments\n   - event (string) event name\n   - varargs (…) and any other arguments\n   = (function) possible event handler function\n  \\*/\n\n\n  eve.f = function (event) {\n    var attrs = [].slice.call(arguments, 1);\n    return function () {\n      eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n    };\n  };\n  /*\\\n   * eve.stop\n   [ method ]\n   **\n   * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n  \\*/\n\n\n  eve.stop = function () {\n    stop = 1;\n  };\n  /*\\\n   * eve.nt\n   [ method ]\n   **\n   * Could be used inside event handler to figure out actual name of the event.\n   **\n   > Arguments\n   **\n   - subname (string) #optional subname of the event\n   **\n   = (string) name of the event, if `subname` is not specified\n   * or\n   = (boolean) `true`, if current event’s name contains `subname`\n  \\*/\n\n\n  eve.nt = function (subname) {\n    if (subname) {\n      return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(current_event);\n    }\n\n    return current_event;\n  };\n  /*\\\n   * eve.nts\n   [ method ]\n   **\n   * Could be used inside event handler to figure out actual name of the event.\n   **\n   **\n   = (array) names of the event\n  \\*/\n\n\n  eve.nts = function () {\n    return current_event.split(separator);\n  };\n  /*\\\n   * eve.off\n   [ method ]\n   **\n   * Removes given function from the list of event listeners assigned to given name.\n   * If no arguments specified all the events will be cleared.\n   **\n   > Arguments\n   **\n   - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n   - f (function) event handler function\n  \\*/\n\n  /*\\\n   * eve.unbind\n   [ method ]\n   **\n   * See @eve.off\n  \\*/\n\n\n  eve.off = eve.unbind = function (name, f) {\n    if (!name) {\n      eve._events = events = {\n        n: {}\n      };\n      return;\n    }\n\n    var names = name.split(comaseparator);\n\n    if (names.length > 1) {\n      for (var i = 0, ii = names.length; i < ii; i++) {\n        eve.off(names[i], f);\n      }\n\n      return;\n    }\n\n    names = name.split(separator);\n    var e,\n        key,\n        splice,\n        i,\n        ii,\n        j,\n        jj,\n        cur = [events];\n\n    for (i = 0, ii = names.length; i < ii; i++) {\n      for (j = 0; j < cur.length; j += splice.length - 2) {\n        splice = [j, 1];\n        e = cur[j].n;\n\n        if (names[i] != wildcard) {\n          if (e[names[i]]) {\n            splice.push(e[names[i]]);\n          }\n        } else {\n          for (key in e) if (e[has](key)) {\n            splice.push(e[key]);\n          }\n        }\n\n        cur.splice.apply(cur, splice);\n      }\n    }\n\n    for (i = 0, ii = cur.length; i < ii; i++) {\n      e = cur[i];\n\n      while (e.n) {\n        if (f) {\n          if (e.f) {\n            for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n              e.f.splice(j, 1);\n              break;\n            }\n\n            !e.f.length && delete e.f;\n          }\n\n          for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n            var funcs = e.n[key].f;\n\n            for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n              funcs.splice(j, 1);\n              break;\n            }\n\n            !funcs.length && delete e.n[key].f;\n          }\n        } else {\n          delete e.f;\n\n          for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n            delete e.n[key].f;\n          }\n        }\n\n        e = e.n;\n      }\n    }\n  };\n  /*\\\n   * eve.once\n   [ method ]\n   **\n   * Binds given event handler with a given name to only run once then unbind itself.\n   | eve.once(\"login\", f);\n   | eve(\"login\"); // triggers f\n   | eve(\"login\"); // no listeners\n   * Use @eve to trigger the listener.\n   **\n   > Arguments\n   **\n   - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n   - f (function) event handler function\n   **\n   = (function) same return function as @eve.on\n  \\*/\n\n\n  eve.once = function (name, f) {\n    var f2 = function () {\n      eve.unbind(name, f2);\n      return f.apply(this, arguments);\n    };\n\n    return eve.on(name, f2);\n  };\n  /*\\\n   * eve.version\n   [ property (string) ]\n   **\n   * Current version of the library.\n  \\*/\n\n\n  eve.version = version;\n\n  eve.toString = function () {\n    return \"You are running Eve \" + version;\n  };\n\n  typeof module != \"undefined\" && module.exports ? module.exports = eve : typeof define === \"function\" && define.amd ? define(\"eve\", [], function () {\n    return eve;\n  }) : glob.eve = eve;\n})(this);\n\n(function (glob, factory) {\n  // AMD support\n  if (typeof define == \"function\" && define.amd) {\n    // Define as an anonymous module\n    define([\"eve\"], function (eve) {\n      return factory(glob, eve);\n    });\n  } else if (typeof exports != 'undefined') {\n    // Next for Node.js or CommonJS\n    var eve = require('eve');\n\n    module.exports = factory(glob, eve);\n  } else {\n    // Browser globals (glob is window)\n    // Snap adds itself to window\n    factory(glob, glob.eve);\n  }\n})(window || this, function (window, eve) {\n  // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n  // \n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  // \n  // http://www.apache.org/licenses/LICENSE-2.0\n  // \n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n  var mina = function (eve) {\n    var animations = {},\n        requestAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n      setTimeout(callback, 16);\n    },\n        isArray = Array.isArray || function (a) {\n      return a instanceof Array || Object.prototype.toString.call(a) == \"[object Array]\";\n    },\n        idgen = 0,\n        idprefix = \"M\" + (+new Date()).toString(36),\n        ID = function () {\n      return idprefix + (idgen++).toString(36);\n    },\n        diff = function (a, b, A, B) {\n      if (isArray(a)) {\n        res = [];\n\n        for (var i = 0, ii = a.length; i < ii; i++) {\n          res[i] = diff(a[i], b, A[i], B);\n        }\n\n        return res;\n      }\n\n      var dif = (A - a) / (B - b);\n      return function (bb) {\n        return a + dif * (bb - b);\n      };\n    },\n        timer = Date.now || function () {\n      return +new Date();\n    },\n        sta = function (val) {\n      var a = this;\n\n      if (val == null) {\n        return a.s;\n      }\n\n      var ds = a.s - val;\n      a.b += a.dur * ds;\n      a.B += a.dur * ds;\n      a.s = val;\n    },\n        speed = function (val) {\n      var a = this;\n\n      if (val == null) {\n        return a.spd;\n      }\n\n      a.spd = val;\n    },\n        duration = function (val) {\n      var a = this;\n\n      if (val == null) {\n        return a.dur;\n      }\n\n      a.s = a.s * val / a.dur;\n      a.dur = val;\n    },\n        stopit = function () {\n      var a = this;\n      delete animations[a.id];\n      a.update();\n      eve(\"mina.stop.\" + a.id, a);\n    },\n        pause = function () {\n      var a = this;\n\n      if (a.pdif) {\n        return;\n      }\n\n      delete animations[a.id];\n      a.update();\n      a.pdif = a.get() - a.b;\n    },\n        resume = function () {\n      var a = this;\n\n      if (!a.pdif) {\n        return;\n      }\n\n      a.b = a.get() - a.pdif;\n      delete a.pdif;\n      animations[a.id] = a;\n    },\n        update = function () {\n      var a = this,\n          res;\n\n      if (isArray(a.start)) {\n        res = [];\n\n        for (var j = 0, jj = a.start.length; j < jj; j++) {\n          res[j] = +a.start[j] + (a.end[j] - a.start[j]) * a.easing(a.s);\n        }\n      } else {\n        res = +a.start + (a.end - a.start) * a.easing(a.s);\n      }\n\n      a.set(res);\n    },\n        frame = function () {\n      var len = 0;\n\n      for (var i in animations) if (animations.hasOwnProperty(i)) {\n        var a = animations[i],\n            b = a.get(),\n            res;\n        len++;\n        a.s = (b - a.b) / (a.dur / a.spd);\n\n        if (a.s >= 1) {\n          delete animations[i];\n          a.s = 1;\n          len--;\n\n          (function (a) {\n            setTimeout(function () {\n              eve(\"mina.finish.\" + a.id, a);\n            });\n          })(a);\n        }\n\n        a.update();\n      }\n\n      len && requestAnimFrame(frame);\n    },\n\n    /*\\\n     * mina\n     [ method ]\n     **\n     * Generic animation of numbers\n     **\n     - a (number) start _slave_ number\n     - A (number) end _slave_ number\n     - b (number) start _master_ number (start time in general case)\n     - B (number) end _master_ number (end time in gereal case)\n     - get (function) getter of _master_ number (see @mina.time)\n     - set (function) setter of _slave_ number\n     - easing (function) #optional easing function, default is @mina.linear\n     = (object) animation descriptor\n     o {\n     o         id (string) animation id,\n     o         start (number) start _slave_ number,\n     o         end (number) end _slave_ number,\n     o         b (number) start _master_ number,\n     o         s (number) animation status (0..1),\n     o         dur (number) animation duration,\n     o         spd (number) animation speed,\n     o         get (function) getter of _master_ number (see @mina.time),\n     o         set (function) setter of _slave_ number,\n     o         easing (function) easing function, default is @mina.linear,\n     o         status (function) status getter/setter,\n     o         speed (function) speed getter/setter,\n     o         duration (function) duration getter/setter,\n     o         stop (function) animation stopper\n     o         pause (function) pauses the animation\n     o         resume (function) resumes the animation\n     o         update (function) calles setter with the right value of the animation\n     o }\n    \\*/\n    mina = function (a, A, b, B, get, set, easing) {\n      var anim = {\n        id: ID(),\n        start: a,\n        end: A,\n        b: b,\n        s: 0,\n        dur: B - b,\n        spd: 1,\n        get: get,\n        set: set,\n        easing: easing || mina.linear,\n        status: sta,\n        speed: speed,\n        duration: duration,\n        stop: stopit,\n        pause: pause,\n        resume: resume,\n        update: update\n      };\n      animations[anim.id] = anim;\n      var len = 0,\n          i;\n\n      for (i in animations) if (animations.hasOwnProperty(i)) {\n        len++;\n\n        if (len == 2) {\n          break;\n        }\n      }\n\n      len == 1 && requestAnimFrame(frame);\n      return anim;\n    };\n    /*\\\n     * mina.time\n     [ method ]\n     **\n     * Returns the current time. Equivalent to:\n     | function () {\n     |     return (new Date).getTime();\n     | }\n    \\*/\n\n\n    mina.time = timer;\n    /*\\\n     * mina.getById\n     [ method ]\n     **\n     * Returns an animation by its id\n     - id (string) animation's id\n     = (object) See @mina\n    \\*/\n\n    mina.getById = function (id) {\n      return animations[id] || null;\n    };\n    /*\\\n     * mina.linear\n     [ method ]\n     **\n     * Default linear easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n\n\n    mina.linear = function (n) {\n      return n;\n    };\n    /*\\\n     * mina.easeout\n     [ method ]\n     **\n     * Easeout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n\n\n    mina.easeout = function (n) {\n      return Math.pow(n, 1.7);\n    };\n    /*\\\n     * mina.easein\n     [ method ]\n     **\n     * Easein easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n\n\n    mina.easein = function (n) {\n      return Math.pow(n, .48);\n    };\n    /*\\\n     * mina.easeinout\n     [ method ]\n     **\n     * Easeinout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n\n\n    mina.easeinout = function (n) {\n      if (n == 1) {\n        return 1;\n      }\n\n      if (n == 0) {\n        return 0;\n      }\n\n      var q = .48 - n / 1.04,\n          Q = Math.sqrt(.1734 + q * q),\n          x = Q - q,\n          X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n          y = -Q - q,\n          Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n          t = X + Y + .5;\n      return (1 - t) * 3 * t * t + t * t * t;\n    };\n    /*\\\n     * mina.backin\n     [ method ]\n     **\n     * Backin easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n\n\n    mina.backin = function (n) {\n      if (n == 1) {\n        return 1;\n      }\n\n      var s = 1.70158;\n      return n * n * ((s + 1) * n - s);\n    };\n    /*\\\n     * mina.backout\n     [ method ]\n     **\n     * Backout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n\n\n    mina.backout = function (n) {\n      if (n == 0) {\n        return 0;\n      }\n\n      n = n - 1;\n      var s = 1.70158;\n      return n * n * ((s + 1) * n + s) + 1;\n    };\n    /*\\\n     * mina.elastic\n     [ method ]\n     **\n     * Elastic easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n\n\n    mina.elastic = function (n) {\n      if (n == !!n) {\n        return n;\n      }\n\n      return Math.pow(2, -10 * n) * Math.sin((n - .075) * (2 * Math.PI) / .3) + 1;\n    };\n    /*\\\n     * mina.bounce\n     [ method ]\n     **\n     * Bounce easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n\n\n    mina.bounce = function (n) {\n      var s = 7.5625,\n          p = 2.75,\n          l;\n\n      if (n < 1 / p) {\n        l = s * n * n;\n      } else {\n        if (n < 2 / p) {\n          n -= 1.5 / p;\n          l = s * n * n + .75;\n        } else {\n          if (n < 2.5 / p) {\n            n -= 2.25 / p;\n            l = s * n * n + .9375;\n          } else {\n            n -= 2.625 / p;\n            l = s * n * n + .984375;\n          }\n        }\n      }\n\n      return l;\n    };\n\n    window.mina = mina;\n    return mina;\n  }(typeof eve == \"undefined\" ? function () {} : eve); // Copyright (c) 2013 - 2015 Adobe Systems Incorporated. All rights reserved.\n  // \n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  // \n  // http://www.apache.org/licenses/LICENSE-2.0\n  // \n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n\n\n  var Snap = function (root) {\n    Snap.version = \"0.4.0\";\n    /*\\\n     * Snap\n     [ method ]\n     **\n     * Creates a drawing surface or wraps existing SVG element.\n     **\n     - width (number|string) width of surface\n     - height (number|string) height of surface\n     * or\n     - DOM (SVGElement) element to be wrapped into Snap structure\n     * or\n     - array (array) array of elements (will return set of elements)\n     * or\n     - query (string) CSS query selector\n     = (object) @Element\n    \\*/\n\n    function Snap(w, h) {\n      if (w) {\n        if (w.nodeType) {\n          return wrap(w);\n        }\n\n        if (is(w, \"array\") && Snap.set) {\n          return Snap.set.apply(Snap, w);\n        }\n\n        if (w instanceof Element) {\n          return w;\n        }\n\n        if (h == null) {\n          w = glob.doc.querySelector(String(w));\n          return wrap(w);\n        }\n      }\n\n      w = w == null ? \"100%\" : w;\n      h = h == null ? \"100%\" : h;\n      return new Paper(w, h);\n    }\n\n    Snap.toString = function () {\n      return \"Snap v\" + this.version;\n    };\n\n    Snap._ = {};\n    var glob = {\n      win: root.window,\n      doc: root.window.document\n    };\n    Snap._.glob = glob;\n\n    var has = \"hasOwnProperty\",\n        Str = String,\n        toFloat = parseFloat,\n        toInt = parseInt,\n        math = Math,\n        mmax = math.max,\n        mmin = math.min,\n        abs = math.abs,\n        pow = math.pow,\n        PI = math.PI,\n        round = math.round,\n        E = \"\",\n        S = \" \",\n        objectToString = Object.prototype.toString,\n        ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n        colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n        bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n        reURLValue = /^url\\(#?([^)]+)\\)$/,\n        separator = Snap._.separator = /[,\\s]+/,\n        whitespace = /[\\s]/g,\n        commaSpaces = /[\\s]*,[\\s]*/,\n        hsrg = {\n      hs: 1,\n      rg: 1\n    },\n        pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n        tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n        pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\\\d+)?)[\\s]*,?[\\s]*/ig,\n        idgen = 0,\n        idprefix = \"S\" + (+new Date()).toString(36),\n        ID = function (el) {\n      return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n    },\n        xlink = \"http://www.w3.org/1999/xlink\",\n        xmlns = \"http://www.w3.org/2000/svg\",\n        hub = {},\n        URL = Snap.url = function (url) {\n      return \"url('#\" + url + \"')\";\n    };\n\n    function $(el, attr) {\n      if (attr) {\n        if (el == \"#text\") {\n          el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n        }\n\n        if (el == \"#comment\") {\n          el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n        }\n\n        if (typeof el == \"string\") {\n          el = $(el);\n        }\n\n        if (typeof attr == \"string\") {\n          if (el.nodeType == 1) {\n            if (attr.substring(0, 6) == \"xlink:\") {\n              return el.getAttributeNS(xlink, attr.substring(6));\n            }\n\n            if (attr.substring(0, 4) == \"xml:\") {\n              return el.getAttributeNS(xmlns, attr.substring(4));\n            }\n\n            return el.getAttribute(attr);\n          } else if (attr == \"text\") {\n            return el.nodeValue;\n          } else {\n            return null;\n          }\n        }\n\n        if (el.nodeType == 1) {\n          for (var key in attr) if (attr[has](key)) {\n            var val = Str(attr[key]);\n\n            if (val) {\n              if (key.substring(0, 6) == \"xlink:\") {\n                el.setAttributeNS(xlink, key.substring(6), val);\n              } else if (key.substring(0, 4) == \"xml:\") {\n                el.setAttributeNS(xmlns, key.substring(4), val);\n              } else {\n                el.setAttribute(key, val);\n              }\n            } else {\n              el.removeAttribute(key);\n            }\n          }\n        } else if (\"text\" in attr) {\n          el.nodeValue = attr.text;\n        }\n      } else {\n        el = glob.doc.createElementNS(xmlns, el);\n      }\n\n      return el;\n    }\n\n    Snap._.$ = $;\n    Snap._.id = ID;\n\n    function getAttrs(el) {\n      var attrs = el.attributes,\n          name,\n          out = {};\n\n      for (var i = 0; i < attrs.length; i++) {\n        if (attrs[i].namespaceURI == xlink) {\n          name = \"xlink:\";\n        } else {\n          name = \"\";\n        }\n\n        name += attrs[i].name;\n        out[name] = attrs[i].textContent;\n      }\n\n      return out;\n    }\n\n    function is(o, type) {\n      type = Str.prototype.toLowerCase.call(type);\n\n      if (type == \"finite\") {\n        return isFinite(o);\n      }\n\n      if (type == \"array\" && (o instanceof Array || Array.isArray && Array.isArray(o))) {\n        return true;\n      }\n\n      return type == \"null\" && o === null || type == typeof o && o !== null || type == \"object\" && o === Object(o) || objectToString.call(o).slice(8, -1).toLowerCase() == type;\n    }\n    /*\\\n     * Snap.format\n     [ method ]\n     **\n     * Replaces construction of type `{<name>}` to the corresponding argument\n     **\n     - token (string) string to format\n     - json (object) object which properties are used as a replacement\n     = (string) formatted string\n     > Usage\n     | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n     | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n     |     x: 10,\n     |     y: 20,\n     |     dim: {\n     |         width: 40,\n     |         height: 50,\n     |         \"negative width\": -40\n     |     }\n     | }));\n    \\*/\n\n\n    Snap.format = function () {\n      var tokenRegex = /\\{([^\\}]+)\\}/g,\n          objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g,\n          // matches .xxxxx or [\"xxxxx\"] to run over object properties\n      replacer = function (all, key, obj) {\n        var res = obj;\n        key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n          name = name || quotedName;\n\n          if (res) {\n            if (name in res) {\n              res = res[name];\n            }\n\n            typeof res == \"function\" && isFunc && (res = res());\n          }\n        });\n        res = (res == null || res == obj ? all : res) + \"\";\n        return res;\n      };\n\n      return function (str, obj) {\n        return Str(str).replace(tokenRegex, function (all, key) {\n          return replacer(all, key, obj);\n        });\n      };\n    }();\n\n    function clone(obj) {\n      if (typeof obj == \"function\" || Object(obj) !== obj) {\n        return obj;\n      }\n\n      var res = new obj.constructor();\n\n      for (var key in obj) if (obj[has](key)) {\n        res[key] = clone(obj[key]);\n      }\n\n      return res;\n    }\n\n    Snap._.clone = clone;\n\n    function repush(array, item) {\n      for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n        return array.push(array.splice(i, 1)[0]);\n      }\n    }\n\n    function cacher(f, scope, postprocessor) {\n      function newf() {\n        var arg = Array.prototype.slice.call(arguments, 0),\n            args = arg.join(\"\\u2400\"),\n            cache = newf.cache = newf.cache || {},\n            count = newf.count = newf.count || [];\n\n        if (cache[has](args)) {\n          repush(count, args);\n          return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n\n        count.length >= 1e3 && delete cache[count.shift()];\n        count.push(args);\n        cache[args] = f.apply(scope, arg);\n        return postprocessor ? postprocessor(cache[args]) : cache[args];\n      }\n\n      return newf;\n    }\n\n    Snap._.cacher = cacher;\n\n    function angle(x1, y1, x2, y2, x3, y3) {\n      if (x3 == null) {\n        var x = x1 - x2,\n            y = y1 - y2;\n\n        if (!x && !y) {\n          return 0;\n        }\n\n        return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n      } else {\n        return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n      }\n    }\n\n    function rad(deg) {\n      return deg % 360 * PI / 180;\n    }\n\n    function deg(rad) {\n      return rad * 180 / PI % 360;\n    }\n\n    function x_y() {\n      return this.x + S + this.y;\n    }\n\n    function x_y_w_h() {\n      return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n    }\n    /*\\\n     * Snap.rad\n     [ method ]\n     **\n     * Transform angle to radians\n     - deg (number) angle in degrees\n     = (number) angle in radians\n    \\*/\n\n\n    Snap.rad = rad;\n    /*\\\n     * Snap.deg\n     [ method ]\n     **\n     * Transform angle to degrees\n     - rad (number) angle in radians\n     = (number) angle in degrees\n    \\*/\n\n    Snap.deg = deg;\n    /*\\\n     * Snap.sin\n     [ method ]\n     **\n     * Equivalent to `Math.sin()` only works with degrees, not radians.\n     - angle (number) angle in degrees\n     = (number) sin\n    \\*/\n\n    Snap.sin = function (angle) {\n      return math.sin(Snap.rad(angle));\n    };\n    /*\\\n     * Snap.tan\n     [ method ]\n     **\n     * Equivalent to `Math.tan()` only works with degrees, not radians.\n     - angle (number) angle in degrees\n     = (number) tan\n    \\*/\n\n\n    Snap.tan = function (angle) {\n      return math.tan(Snap.rad(angle));\n    };\n    /*\\\n     * Snap.cos\n     [ method ]\n     **\n     * Equivalent to `Math.cos()` only works with degrees, not radians.\n     - angle (number) angle in degrees\n     = (number) cos\n    \\*/\n\n\n    Snap.cos = function (angle) {\n      return math.cos(Snap.rad(angle));\n    };\n    /*\\\n     * Snap.asin\n     [ method ]\n     **\n     * Equivalent to `Math.asin()` only works with degrees, not radians.\n     - num (number) value\n     = (number) asin in degrees\n    \\*/\n\n\n    Snap.asin = function (num) {\n      return Snap.deg(math.asin(num));\n    };\n    /*\\\n     * Snap.acos\n     [ method ]\n     **\n     * Equivalent to `Math.acos()` only works with degrees, not radians.\n     - num (number) value\n     = (number) acos in degrees\n    \\*/\n\n\n    Snap.acos = function (num) {\n      return Snap.deg(math.acos(num));\n    };\n    /*\\\n     * Snap.atan\n     [ method ]\n     **\n     * Equivalent to `Math.atan()` only works with degrees, not radians.\n     - num (number) value\n     = (number) atan in degrees\n    \\*/\n\n\n    Snap.atan = function (num) {\n      return Snap.deg(math.atan(num));\n    };\n    /*\\\n     * Snap.atan2\n     [ method ]\n     **\n     * Equivalent to `Math.atan2()` only works with degrees, not radians.\n     - num (number) value\n     = (number) atan2 in degrees\n    \\*/\n\n\n    Snap.atan2 = function (num) {\n      return Snap.deg(math.atan2(num));\n    };\n    /*\\\n     * Snap.angle\n     [ method ]\n     **\n     * Returns an angle between two or three points\n     > Parameters\n     - x1 (number) x coord of first point\n     - y1 (number) y coord of first point\n     - x2 (number) x coord of second point\n     - y2 (number) y coord of second point\n     - x3 (number) #optional x coord of third point\n     - y3 (number) #optional y coord of third point\n     = (number) angle in degrees\n    \\*/\n\n\n    Snap.angle = angle;\n    /*\\\n     * Snap.len\n     [ method ]\n     **\n     * Returns distance between two points\n     > Parameters\n     - x1 (number) x coord of first point\n     - y1 (number) y coord of first point\n     - x2 (number) x coord of second point\n     - y2 (number) y coord of second point\n     = (number) distance\n    \\*/\n\n    Snap.len = function (x1, y1, x2, y2) {\n      return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n    };\n    /*\\\n     * Snap.len2\n     [ method ]\n     **\n     * Returns squared distance between two points\n     > Parameters\n     - x1 (number) x coord of first point\n     - y1 (number) y coord of first point\n     - x2 (number) x coord of second point\n     - y2 (number) y coord of second point\n     = (number) distance\n    \\*/\n\n\n    Snap.len2 = function (x1, y1, x2, y2) {\n      return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n    };\n    /*\\\n     * Snap.closestPoint\n     [ method ]\n     **\n     * Returns closest point to a given one on a given path.\n     > Parameters\n     - path (Element) path element\n     - x (number) x coord of a point\n     - y (number) y coord of a point\n     = (object) in format\n     {\n        x (number) x coord of the point on the path\n        y (number) y coord of the point on the path\n        length (number) length of the path to the point\n        distance (number) distance from the given point to the path\n     }\n    \\*/\n    // Copied from http://bl.ocks.org/mbostock/8027637\n\n\n    Snap.closestPoint = function (path, x, y) {\n      function distance2(p) {\n        var dx = p.x - x,\n            dy = p.y - y;\n        return dx * dx + dy * dy;\n      }\n\n      var pathNode = path.node,\n          pathLength = pathNode.getTotalLength(),\n          precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n          best,\n          bestLength,\n          bestDistance = Infinity; // linear scan for coarse approximation\n\n      for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n        if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n          best = scan, bestLength = scanLength, bestDistance = scanDistance;\n        }\n      } // binary search for precise estimate\n\n\n      precision *= .5;\n\n      while (precision > .5) {\n        var before, after, beforeLength, afterLength, beforeDistance, afterDistance;\n\n        if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n          best = before, bestLength = beforeLength, bestDistance = beforeDistance;\n        } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n          best = after, bestLength = afterLength, bestDistance = afterDistance;\n        } else {\n          precision *= .5;\n        }\n      }\n\n      best = {\n        x: best.x,\n        y: best.y,\n        length: bestLength,\n        distance: Math.sqrt(bestDistance)\n      };\n      return best;\n    };\n    /*\\\n     * Snap.is\n     [ method ]\n     **\n     * Handy replacement for the `typeof` operator\n     - o (…) any object or primitive\n     - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n     = (boolean) `true` if given value is of given type\n    \\*/\n\n\n    Snap.is = is;\n    /*\\\n     * Snap.snapTo\n     [ method ]\n     **\n     * Snaps given value to given grid\n     - values (array|number) given array of values or step of the grid\n     - value (number) value to adjust\n     - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n     = (number) adjusted value\n    \\*/\n\n    Snap.snapTo = function (values, value, tolerance) {\n      tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n\n      if (is(values, \"array\")) {\n        var i = values.length;\n\n        while (i--) if (abs(values[i] - value) <= tolerance) {\n          return values[i];\n        }\n      } else {\n        values = +values;\n        var rem = value % values;\n\n        if (rem < tolerance) {\n          return value - rem;\n        }\n\n        if (rem > values - tolerance) {\n          return value - rem + values;\n        }\n      }\n\n      return value;\n    }; // Colour\n\n    /*\\\n     * Snap.getRGB\n     [ method ]\n     **\n     * Parses color string as RGB object\n     - color (string) color string in one of the following formats:\n     # <ul>\n     #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n     #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n     #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n     #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n     #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n     #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n     #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n     #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n     #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n     #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n     #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n     #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n     #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n     #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n     #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n     # </ul>\n     * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n     = (object) RGB object in the following format:\n     o {\n     o     r (number) red,\n     o     g (number) green,\n     o     b (number) blue,\n     o     hex (string) color in HTML/CSS format: #••••••,\n     o     error (boolean) true if string can't be parsed\n     o }\n    \\*/\n\n\n    Snap.getRGB = cacher(function (colour) {\n      if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n        return {\n          r: -1,\n          g: -1,\n          b: -1,\n          hex: \"none\",\n          error: 1,\n          toString: rgbtoString\n        };\n      }\n\n      if (colour == \"none\") {\n        return {\n          r: -1,\n          g: -1,\n          b: -1,\n          hex: \"none\",\n          toString: rgbtoString\n        };\n      }\n\n      !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n\n      if (!colour) {\n        return {\n          r: -1,\n          g: -1,\n          b: -1,\n          hex: \"none\",\n          error: 1,\n          toString: rgbtoString\n        };\n      }\n\n      var res,\n          red,\n          green,\n          blue,\n          opacity,\n          t,\n          values,\n          rgb = colour.match(colourRegExp);\n\n      if (rgb) {\n        if (rgb[2]) {\n          blue = toInt(rgb[2].substring(5), 16);\n          green = toInt(rgb[2].substring(3, 5), 16);\n          red = toInt(rgb[2].substring(1, 3), 16);\n        }\n\n        if (rgb[3]) {\n          blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n          green = toInt((t = rgb[3].charAt(2)) + t, 16);\n          red = toInt((t = rgb[3].charAt(1)) + t, 16);\n        }\n\n        if (rgb[4]) {\n          values = rgb[4].split(commaSpaces);\n          red = toFloat(values[0]);\n          values[0].slice(-1) == \"%\" && (red *= 2.55);\n          green = toFloat(values[1]);\n          values[1].slice(-1) == \"%\" && (green *= 2.55);\n          blue = toFloat(values[2]);\n          values[2].slice(-1) == \"%\" && (blue *= 2.55);\n          rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n          values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        }\n\n        if (rgb[5]) {\n          values = rgb[5].split(commaSpaces);\n          red = toFloat(values[0]);\n          values[0].slice(-1) == \"%\" && (red /= 100);\n          green = toFloat(values[1]);\n          values[1].slice(-1) == \"%\" && (green /= 100);\n          blue = toFloat(values[2]);\n          values[2].slice(-1) == \"%\" && (blue /= 100);\n          (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n          rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n          values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n          return Snap.hsb2rgb(red, green, blue, opacity);\n        }\n\n        if (rgb[6]) {\n          values = rgb[6].split(commaSpaces);\n          red = toFloat(values[0]);\n          values[0].slice(-1) == \"%\" && (red /= 100);\n          green = toFloat(values[1]);\n          values[1].slice(-1) == \"%\" && (green /= 100);\n          blue = toFloat(values[2]);\n          values[2].slice(-1) == \"%\" && (blue /= 100);\n          (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n          rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n          values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n          return Snap.hsl2rgb(red, green, blue, opacity);\n        }\n\n        red = mmin(math.round(red), 255);\n        green = mmin(math.round(green), 255);\n        blue = mmin(math.round(blue), 255);\n        opacity = mmin(mmax(opacity, 0), 1);\n        rgb = {\n          r: red,\n          g: green,\n          b: blue,\n          toString: rgbtoString\n        };\n        rgb.hex = \"#\" + (16777216 | blue | green << 8 | red << 16).toString(16).slice(1);\n        rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n        return rgb;\n      }\n\n      return {\n        r: -1,\n        g: -1,\n        b: -1,\n        hex: \"none\",\n        error: 1,\n        toString: rgbtoString\n      };\n    }, Snap);\n    /*\\\n     * Snap.hsb\n     [ method ]\n     **\n     * Converts HSB values to a hex representation of the color\n     - h (number) hue\n     - s (number) saturation\n     - b (number) value or brightness\n     = (string) hex representation of the color\n    \\*/\n\n    Snap.hsb = cacher(function (h, s, b) {\n      return Snap.hsb2rgb(h, s, b).hex;\n    });\n    /*\\\n     * Snap.hsl\n     [ method ]\n     **\n     * Converts HSL values to a hex representation of the color\n     - h (number) hue\n     - s (number) saturation\n     - l (number) luminosity\n     = (string) hex representation of the color\n    \\*/\n\n    Snap.hsl = cacher(function (h, s, l) {\n      return Snap.hsl2rgb(h, s, l).hex;\n    });\n    /*\\\n     * Snap.rgb\n     [ method ]\n     **\n     * Converts RGB values to a hex representation of the color\n     - r (number) red\n     - g (number) green\n     - b (number) blue\n     = (string) hex representation of the color\n    \\*/\n\n    Snap.rgb = cacher(function (r, g, b, o) {\n      if (is(o, \"finite\")) {\n        var round = math.round;\n        return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n      }\n\n      return \"#\" + (16777216 | b | g << 8 | r << 16).toString(16).slice(1);\n    });\n\n    var toHex = function (color) {\n      var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n          red = \"rgb(255, 0, 0)\";\n      toHex = cacher(function (color) {\n        if (color.toLowerCase() == \"red\") {\n          return red;\n        }\n\n        i.style.color = red;\n        i.style.color = color;\n        var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n        return out == red ? null : out;\n      });\n      return toHex(color);\n    },\n        hsbtoString = function () {\n      return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n    },\n        hsltoString = function () {\n      return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n    },\n        rgbtoString = function () {\n      return this.opacity == 1 || this.opacity == null ? this.hex : \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n    },\n        prepareRGB = function (r, g, b) {\n      if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n        b = r.b;\n        g = r.g;\n        r = r.r;\n      }\n\n      if (g == null && is(r, string)) {\n        var clr = Snap.getRGB(r);\n        r = clr.r;\n        g = clr.g;\n        b = clr.b;\n      }\n\n      if (r > 1 || g > 1 || b > 1) {\n        r /= 255;\n        g /= 255;\n        b /= 255;\n      }\n\n      return [r, g, b];\n    },\n        packageRGB = function (r, g, b, o) {\n      r = math.round(r * 255);\n      g = math.round(g * 255);\n      b = math.round(b * 255);\n      var rgb = {\n        r: r,\n        g: g,\n        b: b,\n        opacity: is(o, \"finite\") ? o : 1,\n        hex: Snap.rgb(r, g, b),\n        toString: rgbtoString\n      };\n      is(o, \"finite\") && (rgb.opacity = o);\n      return rgb;\n    };\n    /*\\\n     * Snap.color\n     [ method ]\n     **\n     * Parses the color string and returns an object featuring the color's component values\n     - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n     = (object) Combined RGB/HSB object in the following format:\n     o {\n     o     r (number) red,\n     o     g (number) green,\n     o     b (number) blue,\n     o     hex (string) color in HTML/CSS format: #••••••,\n     o     error (boolean) `true` if string can't be parsed,\n     o     h (number) hue,\n     o     s (number) saturation,\n     o     v (number) value (brightness),\n     o     l (number) lightness\n     o }\n    \\*/\n\n\n    Snap.color = function (clr) {\n      var rgb;\n\n      if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n        rgb = Snap.hsb2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n      } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n        rgb = Snap.hsl2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n      } else {\n        if (is(clr, \"string\")) {\n          clr = Snap.getRGB(clr);\n        }\n\n        if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n          rgb = Snap.rgb2hsl(clr);\n          clr.h = rgb.h;\n          clr.s = rgb.s;\n          clr.l = rgb.l;\n          rgb = Snap.rgb2hsb(clr);\n          clr.v = rgb.b;\n        } else {\n          clr = {\n            hex: \"none\"\n          };\n          clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n          clr.error = 1;\n        }\n      }\n\n      clr.toString = rgbtoString;\n      return clr;\n    };\n    /*\\\n     * Snap.hsb2rgb\n     [ method ]\n     **\n     * Converts HSB values to an RGB object\n     - h (number) hue\n     - s (number) saturation\n     - v (number) value or brightness\n     = (object) RGB object in the following format:\n     o {\n     o     r (number) red,\n     o     g (number) green,\n     o     b (number) blue,\n     o     hex (string) color in HTML/CSS format: #••••••\n     o }\n    \\*/\n\n\n    Snap.hsb2rgb = function (h, s, v, o) {\n      if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n        v = h.b;\n        s = h.s;\n        o = h.o;\n        h = h.h;\n      }\n\n      h *= 360;\n      var R, G, B, X, C;\n      h = h % 360 / 60;\n      C = v * s;\n      X = C * (1 - abs(h % 2 - 1));\n      R = G = B = v - C;\n      h = ~~h;\n      R += [C, X, 0, 0, X, C][h];\n      G += [X, C, C, X, 0, 0][h];\n      B += [0, 0, X, C, C, X][h];\n      return packageRGB(R, G, B, o);\n    };\n    /*\\\n     * Snap.hsl2rgb\n     [ method ]\n     **\n     * Converts HSL values to an RGB object\n     - h (number) hue\n     - s (number) saturation\n     - l (number) luminosity\n     = (object) RGB object in the following format:\n     o {\n     o     r (number) red,\n     o     g (number) green,\n     o     b (number) blue,\n     o     hex (string) color in HTML/CSS format: #••••••\n     o }\n    \\*/\n\n\n    Snap.hsl2rgb = function (h, s, l, o) {\n      if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n      }\n\n      if (h > 1 || s > 1 || l > 1) {\n        h /= 360;\n        s /= 100;\n        l /= 100;\n      }\n\n      h *= 360;\n      var R, G, B, X, C;\n      h = h % 360 / 60;\n      C = 2 * s * (l < .5 ? l : 1 - l);\n      X = C * (1 - abs(h % 2 - 1));\n      R = G = B = l - C / 2;\n      h = ~~h;\n      R += [C, X, 0, 0, X, C][h];\n      G += [X, C, C, X, 0, 0][h];\n      B += [0, 0, X, C, C, X][h];\n      return packageRGB(R, G, B, o);\n    };\n    /*\\\n     * Snap.rgb2hsb\n     [ method ]\n     **\n     * Converts RGB values to an HSB object\n     - r (number) red\n     - g (number) green\n     - b (number) blue\n     = (object) HSB object in the following format:\n     o {\n     o     h (number) hue,\n     o     s (number) saturation,\n     o     b (number) brightness\n     o }\n    \\*/\n\n\n    Snap.rgb2hsb = function (r, g, b) {\n      b = prepareRGB(r, g, b);\n      r = b[0];\n      g = b[1];\n      b = b[2];\n      var H, S, V, C;\n      V = mmax(r, g, b);\n      C = V - mmin(r, g, b);\n      H = C == 0 ? null : V == r ? (g - b) / C : V == g ? (b - r) / C + 2 : (r - g) / C + 4;\n      H = (H + 360) % 6 * 60 / 360;\n      S = C == 0 ? 0 : C / V;\n      return {\n        h: H,\n        s: S,\n        b: V,\n        toString: hsbtoString\n      };\n    };\n    /*\\\n     * Snap.rgb2hsl\n     [ method ]\n     **\n     * Converts RGB values to an HSL object\n     - r (number) red\n     - g (number) green\n     - b (number) blue\n     = (object) HSL object in the following format:\n     o {\n     o     h (number) hue,\n     o     s (number) saturation,\n     o     l (number) luminosity\n     o }\n    \\*/\n\n\n    Snap.rgb2hsl = function (r, g, b) {\n      b = prepareRGB(r, g, b);\n      r = b[0];\n      g = b[1];\n      b = b[2];\n      var H, S, L, M, m, C;\n      M = mmax(r, g, b);\n      m = mmin(r, g, b);\n      C = M - m;\n      H = C == 0 ? null : M == r ? (g - b) / C : M == g ? (b - r) / C + 2 : (r - g) / C + 4;\n      H = (H + 360) % 6 * 60 / 360;\n      L = (M + m) / 2;\n      S = C == 0 ? 0 : L < .5 ? C / (2 * L) : C / (2 - 2 * L);\n      return {\n        h: H,\n        s: S,\n        l: L,\n        toString: hsltoString\n      };\n    }; // Transformations\n\n    /*\\\n     * Snap.parsePathString\n     [ method ]\n     **\n     * Utility method\n     **\n     * Parses given path string into an array of arrays of path segments\n     - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n     = (array) array of segments\n    \\*/\n\n\n    Snap.parsePathString = function (pathString) {\n      if (!pathString) {\n        return null;\n      }\n\n      var pth = Snap.path(pathString);\n\n      if (pth.arr) {\n        return Snap.path.clone(pth.arr);\n      }\n\n      var paramCounts = {\n        a: 7,\n        c: 6,\n        o: 2,\n        h: 1,\n        l: 2,\n        m: 2,\n        r: 4,\n        q: 4,\n        s: 4,\n        t: 2,\n        v: 1,\n        u: 3,\n        z: 0\n      },\n          data = [];\n\n      if (is(pathString, \"array\") && is(pathString[0], \"array\")) {\n        // rough assumption\n        data = Snap.path.clone(pathString);\n      }\n\n      if (!data.length) {\n        Str(pathString).replace(pathCommand, function (a, b, c) {\n          var params = [],\n              name = b.toLowerCase();\n          c.replace(pathValues, function (a, b) {\n            b && params.push(+b);\n          });\n\n          if (name == \"m\" && params.length > 2) {\n            data.push([b].concat(params.splice(0, 2)));\n            name = \"l\";\n            b = b == \"m\" ? \"l\" : \"L\";\n          }\n\n          if (name == \"o\" && params.length == 1) {\n            data.push([b, params[0]]);\n          }\n\n          if (name == \"r\") {\n            data.push([b].concat(params));\n          } else while (params.length >= paramCounts[name]) {\n            data.push([b].concat(params.splice(0, paramCounts[name])));\n\n            if (!paramCounts[name]) {\n              break;\n            }\n          }\n        });\n      }\n\n      data.toString = Snap.path.toString;\n      pth.arr = Snap.path.clone(data);\n      return data;\n    };\n    /*\\\n     * Snap.parseTransformString\n     [ method ]\n     **\n     * Utility method\n     **\n     * Parses given transform string into an array of transformations\n     - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n     = (array) array of transformations\n    \\*/\n\n\n    var parseTransformString = Snap.parseTransformString = function (TString) {\n      if (!TString) {\n        return null;\n      }\n\n      var paramCounts = {\n        r: 3,\n        s: 4,\n        t: 2,\n        m: 6\n      },\n          data = [];\n\n      if (is(TString, \"array\") && is(TString[0], \"array\")) {\n        // rough assumption\n        data = Snap.path.clone(TString);\n      }\n\n      if (!data.length) {\n        Str(TString).replace(tCommand, function (a, b, c) {\n          var params = [],\n              name = b.toLowerCase();\n          c.replace(pathValues, function (a, b) {\n            b && params.push(+b);\n          });\n          data.push([b].concat(params));\n        });\n      }\n\n      data.toString = Snap.path.toString;\n      return data;\n    };\n\n    function svgTransform2string(tstr) {\n      var res = [];\n      tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n        params = params.split(/\\s*,\\s*|\\s+/);\n\n        if (name == \"rotate\" && params.length == 1) {\n          params.push(0, 0);\n        }\n\n        if (name == \"scale\") {\n          if (params.length > 2) {\n            params = params.slice(0, 2);\n          } else if (params.length == 2) {\n            params.push(0, 0);\n          }\n\n          if (params.length == 1) {\n            params.push(params[0], 0, 0);\n          }\n        }\n\n        if (name == \"skewX\") {\n          res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n        } else if (name == \"skewY\") {\n          res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n        } else {\n          res.push([name.charAt(0)].concat(params));\n        }\n\n        return all;\n      });\n      return res;\n    }\n\n    Snap._.svgTransform2string = svgTransform2string;\n    Snap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\n\n    function transform2matrix(tstr, bbox) {\n      var tdata = parseTransformString(tstr),\n          m = new Snap.Matrix();\n\n      if (tdata) {\n        for (var i = 0, ii = tdata.length; i < ii; i++) {\n          var t = tdata[i],\n              tlen = t.length,\n              command = Str(t[0]).toLowerCase(),\n              absolute = t[0] != command,\n              inver = absolute ? m.invert() : 0,\n              x1,\n              y1,\n              x2,\n              y2,\n              bb;\n\n          if (command == \"t\" && tlen == 2) {\n            m.translate(t[1], 0);\n          } else if (command == \"t\" && tlen == 3) {\n            if (absolute) {\n              x1 = inver.x(0, 0);\n              y1 = inver.y(0, 0);\n              x2 = inver.x(t[1], t[2]);\n              y2 = inver.y(t[1], t[2]);\n              m.translate(x2 - x1, y2 - y1);\n            } else {\n              m.translate(t[1], t[2]);\n            }\n          } else if (command == \"r\") {\n            if (tlen == 2) {\n              bb = bb || bbox;\n              m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n            } else if (tlen == 4) {\n              if (absolute) {\n                x2 = inver.x(t[2], t[3]);\n                y2 = inver.y(t[2], t[3]);\n                m.rotate(t[1], x2, y2);\n              } else {\n                m.rotate(t[1], t[2], t[3]);\n              }\n            }\n          } else if (command == \"s\") {\n            if (tlen == 2 || tlen == 3) {\n              bb = bb || bbox;\n              m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n            } else if (tlen == 4) {\n              if (absolute) {\n                x2 = inver.x(t[2], t[3]);\n                y2 = inver.y(t[2], t[3]);\n                m.scale(t[1], t[1], x2, y2);\n              } else {\n                m.scale(t[1], t[1], t[2], t[3]);\n              }\n            } else if (tlen == 5) {\n              if (absolute) {\n                x2 = inver.x(t[3], t[4]);\n                y2 = inver.y(t[3], t[4]);\n                m.scale(t[1], t[2], x2, y2);\n              } else {\n                m.scale(t[1], t[2], t[3], t[4]);\n              }\n            }\n          } else if (command == \"m\" && tlen == 7) {\n            m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n          }\n        }\n      }\n\n      return m;\n    }\n\n    Snap._.transform2matrix = transform2matrix;\n    Snap._unit2px = unit2px;\n    var contains = glob.doc.contains || glob.doc.compareDocumentPosition ? function (a, b) {\n      var adown = a.nodeType == 9 ? a.documentElement : a,\n          bup = b && b.parentNode;\n      return a == bup || !!(bup && bup.nodeType == 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));\n    } : function (a, b) {\n      if (b) {\n        while (b) {\n          b = b.parentNode;\n\n          if (b == a) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    };\n\n    function getSomeDefs(el) {\n      var p = el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || el.node.parentNode && wrap(el.node.parentNode) || Snap.select(\"svg\") || Snap(0, 0),\n          pdefs = p.select(\"defs\"),\n          defs = pdefs == null ? false : pdefs.node;\n\n      if (!defs) {\n        defs = make(\"defs\", p.node).node;\n      }\n\n      return defs;\n    }\n\n    function getSomeSVG(el) {\n      return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n    }\n\n    Snap._.getSomeDefs = getSomeDefs;\n    Snap._.getSomeSVG = getSomeSVG;\n\n    function unit2px(el, name, value) {\n      var svg = getSomeSVG(el).node,\n          out = {},\n          mgr = svg.querySelector(\".svg---mgr\");\n\n      if (!mgr) {\n        mgr = $(\"rect\");\n        $(mgr, {\n          x: -9e9,\n          y: -9e9,\n          width: 10,\n          height: 10,\n          \"class\": \"svg---mgr\",\n          fill: \"none\"\n        });\n        svg.appendChild(mgr);\n      }\n\n      function getW(val) {\n        if (val == null) {\n          return E;\n        }\n\n        if (val == +val) {\n          return val;\n        }\n\n        $(mgr, {\n          width: val\n        });\n\n        try {\n          return mgr.getBBox().width;\n        } catch (e) {\n          return 0;\n        }\n      }\n\n      function getH(val) {\n        if (val == null) {\n          return E;\n        }\n\n        if (val == +val) {\n          return val;\n        }\n\n        $(mgr, {\n          height: val\n        });\n\n        try {\n          return mgr.getBBox().height;\n        } catch (e) {\n          return 0;\n        }\n      }\n\n      function set(nam, f) {\n        if (name == null) {\n          out[nam] = f(el.attr(nam) || 0);\n        } else if (nam == name) {\n          out = f(value == null ? el.attr(nam) || 0 : value);\n        }\n      }\n\n      switch (el.type) {\n        case \"rect\":\n          set(\"rx\", getW);\n          set(\"ry\", getH);\n\n        case \"image\":\n          set(\"width\", getW);\n          set(\"height\", getH);\n\n        case \"text\":\n          set(\"x\", getW);\n          set(\"y\", getH);\n          break;\n\n        case \"circle\":\n          set(\"cx\", getW);\n          set(\"cy\", getH);\n          set(\"r\", getW);\n          break;\n\n        case \"ellipse\":\n          set(\"cx\", getW);\n          set(\"cy\", getH);\n          set(\"rx\", getW);\n          set(\"ry\", getH);\n          break;\n\n        case \"line\":\n          set(\"x1\", getW);\n          set(\"x2\", getW);\n          set(\"y1\", getH);\n          set(\"y2\", getH);\n          break;\n\n        case \"marker\":\n          set(\"refX\", getW);\n          set(\"markerWidth\", getW);\n          set(\"refY\", getH);\n          set(\"markerHeight\", getH);\n          break;\n\n        case \"radialGradient\":\n          set(\"fx\", getW);\n          set(\"fy\", getH);\n          break;\n\n        case \"tspan\":\n          set(\"dx\", getW);\n          set(\"dy\", getH);\n          break;\n\n        default:\n          set(name, getW);\n      }\n\n      svg.removeChild(mgr);\n      return out;\n    }\n    /*\\\n     * Snap.select\n     [ method ]\n     **\n     * Wraps a DOM element specified by CSS selector as @Element\n     - query (string) CSS selector of the element\n     = (Element) the current element\n    \\*/\n\n\n    Snap.select = function (query) {\n      query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n      return wrap(glob.doc.querySelector(query));\n    };\n    /*\\\n     * Snap.selectAll\n     [ method ]\n     **\n     * Wraps DOM elements specified by CSS selector as set or array of @Element\n     - query (string) CSS selector of the element\n     = (Element) the current element\n    \\*/\n\n\n    Snap.selectAll = function (query) {\n      var nodelist = glob.doc.querySelectorAll(query),\n          set = (Snap.set || Array)();\n\n      for (var i = 0; i < nodelist.length; i++) {\n        set.push(wrap(nodelist[i]));\n      }\n\n      return set;\n    };\n\n    function add2group(list) {\n      if (!is(list, \"array\")) {\n        list = Array.prototype.slice.call(arguments, 0);\n      }\n\n      var i = 0,\n          j = 0,\n          node = this.node;\n\n      while (this[i]) delete this[i++];\n\n      for (i = 0; i < list.length; i++) {\n        if (list[i].type == \"set\") {\n          list[i].forEach(function (el) {\n            node.appendChild(el.node);\n          });\n        } else {\n          node.appendChild(list[i].node);\n        }\n      }\n\n      var children = node.childNodes;\n\n      for (i = 0; i < children.length; i++) {\n        this[j++] = wrap(children[i]);\n      }\n\n      return this;\n    } // Hub garbage collector every 10s\n\n\n    setInterval(function () {\n      for (var key in hub) if (hub[has](key)) {\n        var el = hub[key],\n            node = el.node;\n\n        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n          delete hub[key];\n        }\n      }\n    }, 1e4);\n\n    function Element(el) {\n      if (el.snap in hub) {\n        return hub[el.snap];\n      }\n\n      var svg;\n\n      try {\n        svg = el.ownerSVGElement;\n      } catch (e) {}\n      /*\\\n       * Element.node\n       [ property (object) ]\n       **\n       * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n       > Usage\n       | // draw a circle at coordinate 10,10 with radius of 10\n       | var c = paper.circle(10, 10, 10);\n       | c.node.onclick = function () {\n       |     c.attr(\"fill\", \"red\");\n       | };\n      \\*/\n\n\n      this.node = el;\n\n      if (svg) {\n        this.paper = new Paper(svg);\n      }\n      /*\\\n       * Element.type\n       [ property (string) ]\n       **\n       * SVG tag name of the given element.\n      \\*/\n\n\n      this.type = el.tagName || el.nodeName;\n      var id = this.id = ID(this);\n      this.anims = {};\n      this._ = {\n        transform: []\n      };\n      el.snap = id;\n      hub[id] = this;\n\n      if (this.type == \"g\") {\n        this.add = add2group;\n      }\n\n      if (this.type in {\n        g: 1,\n        mask: 1,\n        pattern: 1,\n        symbol: 1\n      }) {\n        for (var method in Paper.prototype) if (Paper.prototype[has](method)) {\n          this[method] = Paper.prototype[method];\n        }\n      }\n    }\n    /*\\\n      * Element.attr\n      [ method ]\n      **\n      * Gets or sets given attributes of the element.\n      **\n      - params (object) contains key-value pairs of attributes you want to set\n      * or\n      - param (string) name of the attribute\n      = (Element) the current element\n      * or\n      = (string) value of attribute\n      > Usage\n      | el.attr({\n      |     fill: \"#fc0\",\n      |     stroke: \"#000\",\n      |     strokeWidth: 2, // CamelCase...\n      |     \"fill-opacity\": 0.5, // or dash-separated names\n      |     width: \"*=2\" // prefixed values\n      | });\n      | console.log(el.attr(\"fill\")); // #fc0\n      * Prefixed values in format `\"+=10\"` supported. All four operations\n      * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n      * and `-`: `\"+=2em\"`.\n     \\*/\n\n\n    Element.prototype.attr = function (params, value) {\n      var el = this,\n          node = el.node;\n\n      if (!params) {\n        if (node.nodeType != 1) {\n          return {\n            text: node.nodeValue\n          };\n        }\n\n        var attr = node.attributes,\n            out = {};\n\n        for (var i = 0, ii = attr.length; i < ii; i++) {\n          out[attr[i].nodeName] = attr[i].nodeValue;\n        }\n\n        return out;\n      }\n\n      if (is(params, \"string\")) {\n        if (arguments.length > 1) {\n          var json = {};\n          json[params] = value;\n          params = json;\n        } else {\n          return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n        }\n      }\n\n      for (var att in params) {\n        if (params[has](att)) {\n          eve(\"snap.util.attr.\" + att, el, params[att]);\n        }\n      }\n\n      return el;\n    };\n    /*\\\n     * Snap.parse\n     [ method ]\n     **\n     * Parses SVG fragment and converts it into a @Fragment\n     **\n     - svg (string) SVG string\n     = (Fragment) the @Fragment\n    \\*/\n\n\n    Snap.parse = function (svg) {\n      var f = glob.doc.createDocumentFragment(),\n          full = true,\n          div = glob.doc.createElement(\"div\");\n      svg = Str(svg);\n\n      if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n        svg = \"<svg>\" + svg + \"</svg>\";\n        full = false;\n      }\n\n      div.innerHTML = svg;\n      svg = div.getElementsByTagName(\"svg\")[0];\n\n      if (svg) {\n        if (full) {\n          f = svg;\n        } else {\n          while (svg.firstChild) {\n            f.appendChild(svg.firstChild);\n          }\n        }\n      }\n\n      return new Fragment(f);\n    };\n\n    function Fragment(frag) {\n      this.node = frag;\n    }\n    /*\\\n     * Snap.fragment\n     [ method ]\n     **\n     * Creates a DOM fragment from a given list of elements or strings\n     **\n     - varargs (…) SVG string\n     = (Fragment) the @Fragment\n    \\*/\n\n\n    Snap.fragment = function () {\n      var args = Array.prototype.slice.call(arguments, 0),\n          f = glob.doc.createDocumentFragment();\n\n      for (var i = 0, ii = args.length; i < ii; i++) {\n        var item = args[i];\n\n        if (item.node && item.node.nodeType) {\n          f.appendChild(item.node);\n        }\n\n        if (item.nodeType) {\n          f.appendChild(item);\n        }\n\n        if (typeof item == \"string\") {\n          f.appendChild(Snap.parse(item).node);\n        }\n      }\n\n      return new Fragment(f);\n    };\n\n    function make(name, parent) {\n      var res = $(name);\n      parent.appendChild(res);\n      var el = wrap(res);\n      return el;\n    }\n\n    function Paper(w, h) {\n      var res,\n          desc,\n          defs,\n          proto = Paper.prototype;\n\n      if (w && w.tagName == \"svg\") {\n        if (w.snap in hub) {\n          return hub[w.snap];\n        }\n\n        var doc = w.ownerDocument;\n        res = new Element(w);\n        desc = w.getElementsByTagName(\"desc\")[0];\n        defs = w.getElementsByTagName(\"defs\")[0];\n\n        if (!desc) {\n          desc = $(\"desc\");\n          desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n          res.node.appendChild(desc);\n        }\n\n        if (!defs) {\n          defs = $(\"defs\");\n          res.node.appendChild(defs);\n        }\n\n        res.defs = defs;\n\n        for (var key in proto) if (proto[has](key)) {\n          res[key] = proto[key];\n        }\n\n        res.paper = res.root = res;\n      } else {\n        res = make(\"svg\", glob.doc.body);\n        $(res.node, {\n          height: h,\n          version: 1.1,\n          width: w,\n          xmlns: xmlns\n        });\n      }\n\n      return res;\n    }\n\n    function wrap(dom) {\n      if (!dom) {\n        return dom;\n      }\n\n      if (dom instanceof Element || dom instanceof Fragment) {\n        return dom;\n      }\n\n      if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n        return new Paper(dom);\n      }\n\n      if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n        return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n      }\n\n      return new Element(dom);\n    }\n\n    Snap._.make = make;\n    Snap._.wrap = wrap;\n    /*\\\n     * Paper.el\n     [ method ]\n     **\n     * Creates an element on paper with a given name and no attributes\n     **\n     - name (string) tag name\n     - attr (object) attributes\n     = (Element) the current element\n     > Usage\n     | var c = paper.circle(10, 10, 10); // is the same as...\n     | var c = paper.el(\"circle\").attr({\n     |     cx: 10,\n     |     cy: 10,\n     |     r: 10\n     | });\n     | // and the same as\n     | var c = paper.el(\"circle\", {\n     |     cx: 10,\n     |     cy: 10,\n     |     r: 10\n     | });\n    \\*/\n\n    Paper.prototype.el = function (name, attr) {\n      var el = make(name, this.node);\n      attr && el.attr(attr);\n      return el;\n    };\n    /*\\\n     * Element.children\n     [ method ]\n     **\n     * Returns array of all the children of the element.\n     = (array) array of Elements\n    \\*/\n\n\n    Element.prototype.children = function () {\n      var out = [],\n          ch = this.node.childNodes;\n\n      for (var i = 0, ii = ch.length; i < ii; i++) {\n        out[i] = Snap(ch[i]);\n      }\n\n      return out;\n    };\n\n    function jsonFiller(root, o) {\n      for (var i = 0, ii = root.length; i < ii; i++) {\n        var item = {\n          type: root[i].type,\n          attr: root[i].attr()\n        },\n            children = root[i].children();\n        o.push(item);\n\n        if (children.length) {\n          jsonFiller(children, item.childNodes = []);\n        }\n      }\n    }\n    /*\\\n     * Element.toJSON\n     [ method ]\n     **\n     * Returns object representation of the given element and all its children.\n     = (object) in format\n     o {\n     o     type (string) this.type,\n     o     attr (object) attributes map,\n     o     childNodes (array) optional array of children in the same format\n     o }\n    \\*/\n\n\n    Element.prototype.toJSON = function () {\n      var out = [];\n      jsonFiller([this], out);\n      return out[0];\n    }; // default\n\n\n    eve.on(\"snap.util.getattr\", function () {\n      var att = eve.nt();\n      att = att.substring(att.lastIndexOf(\".\") + 1);\n      var css = att.replace(/[A-Z]/g, function (letter) {\n        return \"-\" + letter.toLowerCase();\n      });\n\n      if (cssAttr[has](css)) {\n        return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n      } else {\n        return $(this.node, att);\n      }\n    });\n    var cssAttr = {\n      \"alignment-baseline\": 0,\n      \"baseline-shift\": 0,\n      \"clip\": 0,\n      \"clip-path\": 0,\n      \"clip-rule\": 0,\n      \"color\": 0,\n      \"color-interpolation\": 0,\n      \"color-interpolation-filters\": 0,\n      \"color-profile\": 0,\n      \"color-rendering\": 0,\n      \"cursor\": 0,\n      \"direction\": 0,\n      \"display\": 0,\n      \"dominant-baseline\": 0,\n      \"enable-background\": 0,\n      \"fill\": 0,\n      \"fill-opacity\": 0,\n      \"fill-rule\": 0,\n      \"filter\": 0,\n      \"flood-color\": 0,\n      \"flood-opacity\": 0,\n      \"font\": 0,\n      \"font-family\": 0,\n      \"font-size\": 0,\n      \"font-size-adjust\": 0,\n      \"font-stretch\": 0,\n      \"font-style\": 0,\n      \"font-variant\": 0,\n      \"font-weight\": 0,\n      \"glyph-orientation-horizontal\": 0,\n      \"glyph-orientation-vertical\": 0,\n      \"image-rendering\": 0,\n      \"kerning\": 0,\n      \"letter-spacing\": 0,\n      \"lighting-color\": 0,\n      \"marker\": 0,\n      \"marker-end\": 0,\n      \"marker-mid\": 0,\n      \"marker-start\": 0,\n      \"mask\": 0,\n      \"opacity\": 0,\n      \"overflow\": 0,\n      \"pointer-events\": 0,\n      \"shape-rendering\": 0,\n      \"stop-color\": 0,\n      \"stop-opacity\": 0,\n      \"stroke\": 0,\n      \"stroke-dasharray\": 0,\n      \"stroke-dashoffset\": 0,\n      \"stroke-linecap\": 0,\n      \"stroke-linejoin\": 0,\n      \"stroke-miterlimit\": 0,\n      \"stroke-opacity\": 0,\n      \"stroke-width\": 0,\n      \"text-anchor\": 0,\n      \"text-decoration\": 0,\n      \"text-rendering\": 0,\n      \"unicode-bidi\": 0,\n      \"visibility\": 0,\n      \"word-spacing\": 0,\n      \"writing-mode\": 0\n    };\n    eve.on(\"snap.util.attr\", function (value) {\n      var att = eve.nt(),\n          attr = {};\n      att = att.substring(att.lastIndexOf(\".\") + 1);\n      attr[att] = value;\n      var style = att.replace(/-(\\w)/gi, function (all, letter) {\n        return letter.toUpperCase();\n      }),\n          css = att.replace(/[A-Z]/g, function (letter) {\n        return \"-\" + letter.toLowerCase();\n      });\n\n      if (cssAttr[has](css)) {\n        this.node.style[style] = value == null ? E : value;\n      } else {\n        $(this.node, attr);\n      }\n    });\n\n    (function (proto) {})(Paper.prototype); // simple ajax\n\n    /*\\\n     * Snap.ajax\n     [ method ]\n     **\n     * Simple implementation of Ajax\n     **\n     - url (string) URL\n     - postData (object|string) data for post request\n     - callback (function) callback\n     - scope (object) #optional scope of callback\n     * or\n     - url (string) URL\n     - callback (function) callback\n     - scope (object) #optional scope of callback\n     = (XMLHttpRequest) the XMLHttpRequest object, just in case\n    \\*/\n\n\n    Snap.ajax = function (url, postData, callback, scope) {\n      var req = new XMLHttpRequest(),\n          id = ID();\n\n      if (req) {\n        if (is(postData, \"function\")) {\n          scope = callback;\n          callback = postData;\n          postData = null;\n        } else if (is(postData, \"object\")) {\n          var pd = [];\n\n          for (var key in postData) if (postData.hasOwnProperty(key)) {\n            pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n          }\n\n          postData = pd.join(\"&\");\n        }\n\n        req.open(postData ? \"POST\" : \"GET\", url, true);\n\n        if (postData) {\n          req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n          req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        }\n\n        if (callback) {\n          eve.once(\"snap.ajax.\" + id + \".0\", callback);\n          eve.once(\"snap.ajax.\" + id + \".200\", callback);\n          eve.once(\"snap.ajax.\" + id + \".304\", callback);\n        }\n\n        req.onreadystatechange = function () {\n          if (req.readyState != 4) return;\n          eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n        };\n\n        if (req.readyState == 4) {\n          return req;\n        }\n\n        req.send(postData);\n        return req;\n      }\n    };\n    /*\\\n     * Snap.load\n     [ method ]\n     **\n     * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n     **\n     - url (string) URL\n     - callback (function) callback\n     - scope (object) #optional scope of callback\n    \\*/\n\n\n    Snap.load = function (url, callback, scope) {\n      Snap.ajax(url, function (req) {\n        var f = Snap.parse(req.responseText);\n        scope ? callback.call(scope, f) : callback(f);\n      });\n    };\n\n    var getOffset = function (elem) {\n      var box = elem.getBoundingClientRect(),\n          doc = elem.ownerDocument,\n          body = doc.body,\n          docElem = doc.documentElement,\n          clientTop = docElem.clientTop || body.clientTop || 0,\n          clientLeft = docElem.clientLeft || body.clientLeft || 0,\n          top = box.top + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop) - clientTop,\n          left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n      return {\n        y: top,\n        x: left\n      };\n    };\n    /*\\\n     * Snap.getElementByPoint\n     [ method ]\n     **\n     * Returns you topmost element under given point.\n     **\n     = (object) Snap element object\n     - x (number) x coordinate from the top left corner of the window\n     - y (number) y coordinate from the top left corner of the window\n     > Usage\n     | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n    \\*/\n\n\n    Snap.getElementByPoint = function (x, y) {\n      var paper = this,\n          svg = paper.canvas,\n          target = glob.doc.elementFromPoint(x, y);\n\n      if (glob.win.opera && target.tagName == \"svg\") {\n        var so = getOffset(target),\n            sr = target.createSVGRect();\n        sr.x = x - so.x;\n        sr.y = y - so.y;\n        sr.width = sr.height = 1;\n        var hits = target.getIntersectionList(sr, null);\n\n        if (hits.length) {\n          target = hits[hits.length - 1];\n        }\n      }\n\n      if (!target) {\n        return null;\n      }\n\n      return wrap(target);\n    };\n    /*\\\n     * Snap.plugin\n     [ method ]\n     **\n     * Let you write plugins. You pass in a function with five arguments, like this:\n     | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n     |     Snap.newmethod = function () {};\n     |     Element.prototype.newmethod = function () {};\n     |     Paper.prototype.newmethod = function () {};\n     | });\n     * Inside the function you have access to all main objects (and their\n     * prototypes). This allow you to extend anything you want.\n     **\n     - f (function) your plugin body\n    \\*/\n\n\n    Snap.plugin = function (f) {\n      f(Snap, Element, Paper, glob, Fragment);\n    };\n\n    glob.win.Snap = Snap;\n    return Snap;\n  }(window || this); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n\n\n  Snap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        unit2px = Snap._unit2px,\n        $ = Snap._.$,\n        make = Snap._.make,\n        getSomeDefs = Snap._.getSomeDefs,\n        has = \"hasOwnProperty\",\n        wrap = Snap._.wrap;\n    /*\\\n     * Element.getBBox\n     [ method ]\n     **\n     * Returns the bounding box descriptor for the given element\n     **\n     = (object) bounding box descriptor:\n     o {\n     o     cx: (number) x of the center,\n     o     cy: (number) x of the center,\n     o     h: (number) height,\n     o     height: (number) height,\n     o     path: (string) path command for the box,\n     o     r0: (number) radius of a circle that fully encloses the box,\n     o     r1: (number) radius of the smallest circle that can be enclosed,\n     o     r2: (number) radius of the largest circle that can be enclosed,\n     o     vb: (string) box as a viewbox command,\n     o     w: (number) width,\n     o     width: (number) width,\n     o     x2: (number) x of the right side,\n     o     x: (number) x of the left side,\n     o     y2: (number) y of the bottom edge,\n     o     y: (number) y of the top edge\n     o }\n    \\*/\n\n    elproto.getBBox = function (isWithoutTransform) {\n      if (!Snap.Matrix || !Snap.path) {\n        return this.node.getBBox();\n      }\n\n      var el = this,\n          m = new Snap.Matrix();\n\n      if (el.removed) {\n        return Snap._.box();\n      }\n\n      while (el.type == \"use\") {\n        if (!isWithoutTransform) {\n          m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n        }\n\n        if (el.original) {\n          el = el.original;\n        } else {\n          var href = el.attr(\"xlink:href\");\n          el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n        }\n      }\n\n      var _ = el._,\n          pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n\n      try {\n        if (isWithoutTransform) {\n          _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n          return Snap._.box(_.bboxwt);\n        } else {\n          el.realPath = pathfinder(el);\n          el.matrix = el.transform().localMatrix;\n          _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n          return Snap._.box(_.bbox);\n        }\n      } catch (e) {\n        // Firefox doesn’t give you bbox of hidden element\n        return Snap._.box();\n      }\n    };\n\n    var propString = function () {\n      return this.string;\n    };\n\n    function extractTransform(el, tstr) {\n      if (tstr == null) {\n        var doReturn = true;\n\n        if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n          tstr = el.node.getAttribute(\"gradientTransform\");\n        } else if (el.type == \"pattern\") {\n          tstr = el.node.getAttribute(\"patternTransform\");\n        } else {\n          tstr = el.node.getAttribute(\"transform\");\n        }\n\n        if (!tstr) {\n          return new Snap.Matrix();\n        }\n\n        tstr = Snap._.svgTransform2string(tstr);\n      } else {\n        if (!Snap._.rgTransform.test(tstr)) {\n          tstr = Snap._.svgTransform2string(tstr);\n        } else {\n          tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || E);\n        }\n\n        if (is(tstr, \"array\")) {\n          tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n        }\n\n        el._.transform = tstr;\n      }\n\n      var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n\n      if (doReturn) {\n        return m;\n      } else {\n        el.matrix = m;\n      }\n    }\n    /*\\\n     * Element.transform\n     [ method ]\n     **\n     * Gets or sets transformation of the element\n     **\n     - tstr (string) transform string in Snap or SVG format\n     = (Element) the current element\n     * or\n     = (object) transformation descriptor:\n     o {\n     o     string (string) transform string,\n     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n     o     localMatrix (Matrix) matrix of transformations applied only to the element,\n     o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n     o     global (string) global transformation as string,\n     o     local (string) local transformation as string,\n     o     toString (function) returns `string` property\n     o }\n    \\*/\n\n\n    elproto.transform = function (tstr) {\n      var _ = this._;\n\n      if (tstr == null) {\n        var papa = this,\n            global = new Snap.Matrix(this.node.getCTM()),\n            local = extractTransform(this),\n            ms = [local],\n            m = new Snap.Matrix(),\n            i,\n            localString = local.toTransformString(),\n            string = Str(local) == Str(this.matrix) ? Str(_.transform) : localString;\n\n        while (papa.type != \"svg\" && (papa = papa.parent())) {\n          ms.push(extractTransform(papa));\n        }\n\n        i = ms.length;\n\n        while (i--) {\n          m.add(ms[i]);\n        }\n\n        return {\n          string: string,\n          globalMatrix: global,\n          totalMatrix: m,\n          localMatrix: local,\n          diffMatrix: global.clone().add(local.invert()),\n          global: global.toTransformString(),\n          total: m.toTransformString(),\n          local: localString,\n          toString: propString\n        };\n      }\n\n      if (tstr instanceof Snap.Matrix) {\n        this.matrix = tstr;\n        this._.transform = tstr.toTransformString();\n      } else {\n        extractTransform(this, tstr);\n      }\n\n      if (this.node) {\n        if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n          $(this.node, {\n            gradientTransform: this.matrix\n          });\n        } else if (this.type == \"pattern\") {\n          $(this.node, {\n            patternTransform: this.matrix\n          });\n        } else {\n          $(this.node, {\n            transform: this.matrix\n          });\n        }\n      }\n\n      return this;\n    };\n    /*\\\n     * Element.parent\n     [ method ]\n     **\n     * Returns the element's parent\n     **\n     = (Element) the parent element\n    \\*/\n\n\n    elproto.parent = function () {\n      return wrap(this.node.parentNode);\n    };\n    /*\\\n     * Element.append\n     [ method ]\n     **\n     * Appends the given element to current one\n     **\n     - el (Element|Set) element to append\n     = (Element) the parent element\n    \\*/\n\n    /*\\\n     * Element.add\n     [ method ]\n     **\n     * See @Element.append\n    \\*/\n\n\n    elproto.append = elproto.add = function (el) {\n      if (el) {\n        if (el.type == \"set\") {\n          var it = this;\n          el.forEach(function (el) {\n            it.add(el);\n          });\n          return this;\n        }\n\n        el = wrap(el);\n        this.node.appendChild(el.node);\n        el.paper = this.paper;\n      }\n\n      return this;\n    };\n    /*\\\n     * Element.appendTo\n     [ method ]\n     **\n     * Appends the current element to the given one\n     **\n     - el (Element) parent element to append to\n     = (Element) the child element\n    \\*/\n\n\n    elproto.appendTo = function (el) {\n      if (el) {\n        el = wrap(el);\n        el.append(this);\n      }\n\n      return this;\n    };\n    /*\\\n     * Element.prepend\n     [ method ]\n     **\n     * Prepends the given element to the current one\n     **\n     - el (Element) element to prepend\n     = (Element) the parent element\n    \\*/\n\n\n    elproto.prepend = function (el) {\n      if (el) {\n        if (el.type == \"set\") {\n          var it = this,\n              first;\n          el.forEach(function (el) {\n            if (first) {\n              first.after(el);\n            } else {\n              it.prepend(el);\n            }\n\n            first = el;\n          });\n          return this;\n        }\n\n        el = wrap(el);\n        var parent = el.parent();\n        this.node.insertBefore(el.node, this.node.firstChild);\n        this.add && this.add();\n        el.paper = this.paper;\n        this.parent() && this.parent().add();\n        parent && parent.add();\n      }\n\n      return this;\n    };\n    /*\\\n     * Element.prependTo\n     [ method ]\n     **\n     * Prepends the current element to the given one\n     **\n     - el (Element) parent element to prepend to\n     = (Element) the child element\n    \\*/\n\n\n    elproto.prependTo = function (el) {\n      el = wrap(el);\n      el.prepend(this);\n      return this;\n    };\n    /*\\\n     * Element.before\n     [ method ]\n     **\n     * Inserts given element before the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n\n\n    elproto.before = function (el) {\n      if (el.type == \"set\") {\n        var it = this;\n        el.forEach(function (el) {\n          var parent = el.parent();\n          it.node.parentNode.insertBefore(el.node, it.node);\n          parent && parent.add();\n        });\n        this.parent().add();\n        return this;\n      }\n\n      el = wrap(el);\n      var parent = el.parent();\n      this.node.parentNode.insertBefore(el.node, this.node);\n      this.parent() && this.parent().add();\n      parent && parent.add();\n      el.paper = this.paper;\n      return this;\n    };\n    /*\\\n     * Element.after\n     [ method ]\n     **\n     * Inserts given element after the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n\n\n    elproto.after = function (el) {\n      el = wrap(el);\n      var parent = el.parent();\n\n      if (this.node.nextSibling) {\n        this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n      } else {\n        this.node.parentNode.appendChild(el.node);\n      }\n\n      this.parent() && this.parent().add();\n      parent && parent.add();\n      el.paper = this.paper;\n      return this;\n    };\n    /*\\\n     * Element.insertBefore\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n\n\n    elproto.insertBefore = function (el) {\n      el = wrap(el);\n      var parent = this.parent();\n      el.node.parentNode.insertBefore(this.node, el.node);\n      this.paper = el.paper;\n      parent && parent.add();\n      el.parent() && el.parent().add();\n      return this;\n    };\n    /*\\\n     * Element.insertAfter\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n\n\n    elproto.insertAfter = function (el) {\n      el = wrap(el);\n      var parent = this.parent();\n      el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n      this.paper = el.paper;\n      parent && parent.add();\n      el.parent() && el.parent().add();\n      return this;\n    };\n    /*\\\n     * Element.remove\n     [ method ]\n     **\n     * Removes element from the DOM\n     = (Element) the detached element\n    \\*/\n\n\n    elproto.remove = function () {\n      var parent = this.parent();\n      this.node.parentNode && this.node.parentNode.removeChild(this.node);\n      delete this.paper;\n      this.removed = true;\n      parent && parent.add();\n      return this;\n    };\n    /*\\\n     * Element.select\n     [ method ]\n     **\n     * Gathers the nested @Element matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Element) result of query selection\n    \\*/\n\n\n    elproto.select = function (query) {\n      query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n      return wrap(this.node.querySelector(query));\n    };\n    /*\\\n     * Element.selectAll\n     [ method ]\n     **\n     * Gathers nested @Element objects matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Set|array) result of query selection\n    \\*/\n\n\n    elproto.selectAll = function (query) {\n      var nodelist = this.node.querySelectorAll(query),\n          set = (Snap.set || Array)();\n\n      for (var i = 0; i < nodelist.length; i++) {\n        set.push(wrap(nodelist[i]));\n      }\n\n      return set;\n    };\n    /*\\\n     * Element.asPX\n     [ method ]\n     **\n     * Returns given attribute of the element as a `px` value (not %, em, etc.)\n     **\n     - attr (string) attribute name\n     - value (string) #optional attribute value\n     = (Element) result of query selection\n    \\*/\n\n\n    elproto.asPX = function (attr, value) {\n      if (value == null) {\n        value = this.attr(attr);\n      }\n\n      return +unit2px(this, attr, value);\n    }; // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n\n    /*\\\n     * Element.use\n     [ method ]\n     **\n     * Creates a `<use>` element linked to the current element\n     **\n     = (Element) the `<use>` element\n    \\*/\n\n\n    elproto.use = function () {\n      var use,\n          id = this.node.id;\n\n      if (!id) {\n        id = this.id;\n        $(this.node, {\n          id: id\n        });\n      }\n\n      if (this.type == \"linearGradient\" || this.type == \"radialGradient\" || this.type == \"pattern\") {\n        use = make(this.type, this.node.parentNode);\n      } else {\n        use = make(\"use\", this.node.parentNode);\n      }\n\n      $(use.node, {\n        \"xlink:href\": \"#\" + id\n      });\n      use.original = this;\n      return use;\n    };\n\n    function fixids(el) {\n      var els = el.selectAll(\"*\"),\n          it,\n          url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n          ids = [],\n          uses = {};\n\n      function urltest(it, name) {\n        var val = $(it.node, name);\n        val = val && val.match(url);\n        val = val && val[2];\n\n        if (val && val.charAt() == \"#\") {\n          val = val.substring(1);\n        } else {\n          return;\n        }\n\n        if (val) {\n          uses[val] = (uses[val] || []).concat(function (id) {\n            var attr = {};\n            attr[name] = URL(id);\n            $(it.node, attr);\n          });\n        }\n      }\n\n      function linktest(it) {\n        var val = $(it.node, \"xlink:href\");\n\n        if (val && val.charAt() == \"#\") {\n          val = val.substring(1);\n        } else {\n          return;\n        }\n\n        if (val) {\n          uses[val] = (uses[val] || []).concat(function (id) {\n            it.attr(\"xlink:href\", \"#\" + id);\n          });\n        }\n      }\n\n      for (var i = 0, ii = els.length; i < ii; i++) {\n        it = els[i];\n        urltest(it, \"fill\");\n        urltest(it, \"stroke\");\n        urltest(it, \"filter\");\n        urltest(it, \"mask\");\n        urltest(it, \"clip-path\");\n        linktest(it);\n        var oldid = $(it.node, \"id\");\n\n        if (oldid) {\n          $(it.node, {\n            id: it.id\n          });\n          ids.push({\n            old: oldid,\n            id: it.id\n          });\n        }\n      }\n\n      for (i = 0, ii = ids.length; i < ii; i++) {\n        var fs = uses[ids[i].old];\n\n        if (fs) {\n          for (var j = 0, jj = fs.length; j < jj; j++) {\n            fs[j](ids[i].id);\n          }\n        }\n      }\n    }\n    /*\\\n     * Element.clone\n     [ method ]\n     **\n     * Creates a clone of the element and inserts it after the element\n     **\n     = (Element) the clone\n    \\*/\n\n\n    elproto.clone = function () {\n      var clone = wrap(this.node.cloneNode(true));\n\n      if ($(clone.node, \"id\")) {\n        $(clone.node, {\n          id: clone.id\n        });\n      }\n\n      fixids(clone);\n      clone.insertAfter(this);\n      return clone;\n    };\n    /*\\\n     * Element.toDefs\n     [ method ]\n     **\n     * Moves element to the shared `<defs>` area\n     **\n     = (Element) the element\n    \\*/\n\n\n    elproto.toDefs = function () {\n      var defs = getSomeDefs(this);\n      defs.appendChild(this.node);\n      return this;\n    };\n    /*\\\n     * Element.toPattern\n     [ method ]\n     **\n     * Creates a `<pattern>` element from the current element\n     **\n     * To create a pattern you have to specify the pattern rect:\n     - x (string|number)\n     - y (string|number)\n     - width (string|number)\n     - height (string|number)\n     = (Element) the `<pattern>` element\n     * You can use pattern later on as an argument for `fill` attribute:\n     | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n     |         fill: \"none\",\n     |         stroke: \"#bada55\",\n     |         strokeWidth: 5\n     |     }).pattern(0, 0, 10, 10),\n     |     c = paper.circle(200, 200, 100);\n     | c.attr({\n     |     fill: p\n     | });\n    \\*/\n\n\n    elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n      var p = make(\"pattern\", getSomeDefs(this));\n\n      if (x == null) {\n        x = this.getBBox();\n      }\n\n      if (is(x, \"object\") && \"x\" in x) {\n        y = x.y;\n        width = x.width;\n        height = x.height;\n        x = x.x;\n      }\n\n      $(p.node, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        patternUnits: \"userSpaceOnUse\",\n        id: p.id,\n        viewBox: [x, y, width, height].join(\" \")\n      });\n      p.node.appendChild(this.node);\n      return p;\n    }; // SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n    // SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n\n    /*\\\n     * Element.marker\n     [ method ]\n     **\n     * Creates a `<marker>` element from the current element\n     **\n     * To create a marker you have to specify the bounding rect and reference point:\n     - x (number)\n     - y (number)\n     - width (number)\n     - height (number)\n     - refX (number)\n     - refY (number)\n     = (Element) the `<marker>` element\n     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n    \\*/\n    // TODO add usage for markers\n\n\n    elproto.marker = function (x, y, width, height, refX, refY) {\n      var p = make(\"marker\", getSomeDefs(this));\n\n      if (x == null) {\n        x = this.getBBox();\n      }\n\n      if (is(x, \"object\") && \"x\" in x) {\n        y = x.y;\n        width = x.width;\n        height = x.height;\n        refX = x.refX || x.cx;\n        refY = x.refY || x.cy;\n        x = x.x;\n      }\n\n      $(p.node, {\n        viewBox: [x, y, width, height].join(\" \"),\n        markerWidth: width,\n        markerHeight: height,\n        orient: \"auto\",\n        refX: refX || 0,\n        refY: refY || 0,\n        id: p.id\n      });\n      p.node.appendChild(this.node);\n      return p;\n    }; // animation\n\n\n    function slice(from, to, f) {\n      return function (arr) {\n        var res = arr.slice(from, to);\n\n        if (res.length == 1) {\n          res = res[0];\n        }\n\n        return f ? f(res) : res;\n      };\n    }\n\n    var Animation = function (attr, ms, easing, callback) {\n      if (typeof easing == \"function\" && !easing.length) {\n        callback = easing;\n        easing = mina.linear;\n      }\n\n      this.attr = attr;\n      this.dur = ms;\n      easing && (this.easing = easing);\n      callback && (this.callback = callback);\n    };\n\n    Snap._.Animation = Animation;\n    /*\\\n     * Snap.animation\n     [ method ]\n     **\n     * Creates an animation object\n     **\n     - attr (object) attributes of final destination\n     - duration (number) duration of the animation, in milliseconds\n     - easing (function) #optional one of easing functions of @mina or custom one\n     - callback (function) #optional callback function that fires when animation ends\n     = (object) animation object\n    \\*/\n\n    Snap.animation = function (attr, ms, easing, callback) {\n      return new Animation(attr, ms, easing, callback);\n    };\n    /*\\\n     * Element.inAnim\n     [ method ]\n     **\n     * Returns a set of animations that may be able to manipulate the current element\n     **\n     = (object) in format:\n     o {\n     o     anim (object) animation object,\n     o     mina (object) @mina object,\n     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n    \\*/\n\n\n    elproto.inAnim = function () {\n      var el = this,\n          res = [];\n\n      for (var id in el.anims) if (el.anims[has](id)) {\n        (function (a) {\n          res.push({\n            anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n            mina: a,\n            curStatus: a.status(),\n            status: function (val) {\n              return a.status(val);\n            },\n            stop: function () {\n              a.stop();\n            }\n          });\n        })(el.anims[id]);\n      }\n\n      return res;\n    };\n    /*\\\n     * Snap.animate\n     [ method ]\n     **\n     * Runs generic animation of one number into another with a caring function\n     **\n     - from (number|array) number or array of numbers\n     - to (number|array) number or array of numbers\n     - setter (function) caring function that accepts one number argument\n     - duration (number) duration, in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function to execute when animation ends\n     = (object) animation object in @mina format\n     o {\n     o     id (string) animation id, consider it read-only,\n     o     duration (function) gets or sets the duration of the animation,\n     o     easing (function) easing,\n     o     speed (function) gets or sets the speed of the animation,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n     | var rect = Snap().rect(0, 0, 10, 10);\n     | Snap.animate(0, 10, function (val) {\n     |     rect.attr({\n     |         x: val\n     |     });\n     | }, 1000);\n     | // in given context is equivalent to\n     | rect.animate({x: 10}, 1000);\n    \\*/\n\n\n    Snap.animate = function (from, to, setter, ms, easing, callback) {\n      if (typeof easing == \"function\" && !easing.length) {\n        callback = easing;\n        easing = mina.linear;\n      }\n\n      var now = mina.time(),\n          anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n      callback && eve.once(\"mina.finish.\" + anim.id, callback);\n      return anim;\n    };\n    /*\\\n     * Element.stop\n     [ method ]\n     **\n     * Stops all the animations for the current element\n     **\n     = (Element) the current element\n    \\*/\n\n\n    elproto.stop = function () {\n      var anims = this.inAnim();\n\n      for (var i = 0, ii = anims.length; i < ii; i++) {\n        anims[i].stop();\n      }\n\n      return this;\n    };\n    /*\\\n     * Element.animate\n     [ method ]\n     **\n     * Animates the given attributes of the element\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     = (Element) the current element\n    \\*/\n\n\n    elproto.animate = function (attrs, ms, easing, callback) {\n      if (typeof easing == \"function\" && !easing.length) {\n        callback = easing;\n        easing = mina.linear;\n      }\n\n      if (attrs instanceof Animation) {\n        callback = attrs.callback;\n        easing = attrs.easing;\n        ms = easing.dur;\n        attrs = attrs.attr;\n      }\n\n      var fkeys = [],\n          tkeys = [],\n          keys = {},\n          from,\n          to,\n          f,\n          eq,\n          el = this;\n\n      for (var key in attrs) if (attrs[has](key)) {\n        if (el.equal) {\n          eq = el.equal(key, Str(attrs[key]));\n          from = eq.from;\n          to = eq.to;\n          f = eq.f;\n        } else {\n          from = +el.attr(key);\n          to = +attrs[key];\n        }\n\n        var len = is(from, \"array\") ? from.length : 1;\n        keys[key] = slice(fkeys.length, fkeys.length + len, f);\n        fkeys = fkeys.concat(from);\n        tkeys = tkeys.concat(to);\n      }\n\n      var now = mina.time(),\n          anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n        var attr = {};\n\n        for (var key in keys) if (keys[has](key)) {\n          attr[key] = keys[key](val);\n        }\n\n        el.attr(attr);\n      }, easing);\n      el.anims[anim.id] = anim;\n      anim._attrs = attrs;\n      anim._callback = callback;\n      eve(\"snap.animcreated.\" + el.id, anim);\n      eve.once(\"mina.finish.\" + anim.id, function () {\n        delete el.anims[anim.id];\n        callback && callback.call(el);\n      });\n      eve.once(\"mina.stop.\" + anim.id, function () {\n        delete el.anims[anim.id];\n      });\n      return el;\n    };\n\n    var eldata = {};\n    /*\\\n     * Element.data\n     [ method ]\n     **\n     * Adds or retrieves given value associated with given key. (Don’t confuse\n     * with `data-` attributes)\n     *\n     * See also @Element.removeData\n     - key (string) key to store data\n     - value (any) #optional value to store\n     = (object) @Element\n     * or, if value is not specified:\n     = (any) value\n     > Usage\n     | for (var i = 0, i < 5, i++) {\n     |     paper.circle(10 + 15 * i, 10, 10)\n     |          .attr({fill: \"#000\"})\n     |          .data(\"i\", i)\n     |          .click(function () {\n     |             alert(this.data(\"i\"));\n     |          });\n     | }\n    \\*/\n\n    elproto.data = function (key, value) {\n      var data = eldata[this.id] = eldata[this.id] || {};\n\n      if (arguments.length == 0) {\n        eve(\"snap.data.get.\" + this.id, this, data, null);\n        return data;\n      }\n\n      if (arguments.length == 1) {\n        if (Snap.is(key, \"object\")) {\n          for (var i in key) if (key[has](i)) {\n            this.data(i, key[i]);\n          }\n\n          return this;\n        }\n\n        eve(\"snap.data.get.\" + this.id, this, data[key], key);\n        return data[key];\n      }\n\n      data[key] = value;\n      eve(\"snap.data.set.\" + this.id, this, value, key);\n      return this;\n    };\n    /*\\\n     * Element.removeData\n     [ method ]\n     **\n     * Removes value associated with an element by given key.\n     * If key is not provided, removes all the data of the element.\n     - key (string) #optional key\n     = (object) @Element\n    \\*/\n\n\n    elproto.removeData = function (key) {\n      if (key == null) {\n        eldata[this.id] = {};\n      } else {\n        eldata[this.id] && delete eldata[this.id][key];\n      }\n\n      return this;\n    };\n    /*\\\n     * Element.outerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n     *\n     * See also @Element.innerSVG\n     = (string) SVG code for the element\n    \\*/\n\n    /*\\\n     * Element.toString\n     [ method ]\n     **\n     * See @Element.outerSVG\n    \\*/\n\n\n    elproto.outerSVG = elproto.toString = toString(1);\n    /*\\\n     * Element.innerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n     = (string) SVG code for the element\n    \\*/\n\n    elproto.innerSVG = toString();\n\n    function toString(type) {\n      return function () {\n        var res = type ? \"<\" + this.type : \"\",\n            attr = this.node.attributes,\n            chld = this.node.childNodes;\n\n        if (type) {\n          for (var i = 0, ii = attr.length; i < ii; i++) {\n            res += \" \" + attr[i].name + '=\"' + attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n          }\n        }\n\n        if (chld.length) {\n          type && (res += \">\");\n\n          for (i = 0, ii = chld.length; i < ii; i++) {\n            if (chld[i].nodeType == 3) {\n              res += chld[i].nodeValue;\n            } else if (chld[i].nodeType == 1) {\n              res += wrap(chld[i]).toString();\n            }\n          }\n\n          type && (res += \"</\" + this.type + \">\");\n        } else {\n          type && (res += \"/>\");\n        }\n\n        return res;\n      };\n    }\n\n    elproto.toDataURL = function () {\n      if (window && window.btoa) {\n        var bb = this.getBBox(),\n            svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n          x: +bb.x.toFixed(3),\n          y: +bb.y.toFixed(3),\n          width: +bb.width.toFixed(3),\n          height: +bb.height.toFixed(3),\n          contents: this.outerSVG()\n        });\n        return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n      }\n    };\n    /*\\\n     * Fragment.select\n     [ method ]\n     **\n     * See @Element.select\n    \\*/\n\n\n    Fragment.prototype.select = elproto.select;\n    /*\\\n     * Fragment.selectAll\n     [ method ]\n     **\n     * See @Element.selectAll\n    \\*/\n\n    Fragment.prototype.selectAll = elproto.selectAll;\n  }); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n  // \n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  // \n  // http://www.apache.org/licenses/LICENSE-2.0\n  // \n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n\n  Snap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var objectToString = Object.prototype.toString,\n        Str = String,\n        math = Math,\n        E = \"\";\n\n    function Matrix(a, b, c, d, e, f) {\n      if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n        this.a = a.a;\n        this.b = a.b;\n        this.c = a.c;\n        this.d = a.d;\n        this.e = a.e;\n        this.f = a.f;\n        return;\n      }\n\n      if (a != null) {\n        this.a = +a;\n        this.b = +b;\n        this.c = +c;\n        this.d = +d;\n        this.e = +e;\n        this.f = +f;\n      } else {\n        this.a = 1;\n        this.b = 0;\n        this.c = 0;\n        this.d = 1;\n        this.e = 0;\n        this.f = 0;\n      }\n    }\n\n    (function (matrixproto) {\n      /*\\\n       * Matrix.add\n       [ method ]\n       **\n       * Adds the given matrix to existing one\n       - a (number)\n       - b (number)\n       - c (number)\n       - d (number)\n       - e (number)\n       - f (number)\n       * or\n       - matrix (object) @Matrix\n      \\*/\n      matrixproto.add = function (a, b, c, d, e, f) {\n        var out = [[], [], []],\n            m = [[this.a, this.c, this.e], [this.b, this.d, this.f], [0, 0, 1]],\n            matrix = [[a, c, e], [b, d, f], [0, 0, 1]],\n            x,\n            y,\n            z,\n            res;\n\n        if (a && a instanceof Matrix) {\n          matrix = [[a.a, a.c, a.e], [a.b, a.d, a.f], [0, 0, 1]];\n        }\n\n        for (x = 0; x < 3; x++) {\n          for (y = 0; y < 3; y++) {\n            res = 0;\n\n            for (z = 0; z < 3; z++) {\n              res += m[x][z] * matrix[z][y];\n            }\n\n            out[x][y] = res;\n          }\n        }\n\n        this.a = out[0][0];\n        this.b = out[1][0];\n        this.c = out[0][1];\n        this.d = out[1][1];\n        this.e = out[0][2];\n        this.f = out[1][2];\n        return this;\n      };\n      /*\\\n       * Matrix.invert\n       [ method ]\n       **\n       * Returns an inverted version of the matrix\n       = (object) @Matrix\n      \\*/\n\n\n      matrixproto.invert = function () {\n        var me = this,\n            x = me.a * me.d - me.b * me.c;\n        return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n      };\n      /*\\\n       * Matrix.clone\n       [ method ]\n       **\n       * Returns a copy of the matrix\n       = (object) @Matrix\n      \\*/\n\n\n      matrixproto.clone = function () {\n        return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n      };\n      /*\\\n       * Matrix.translate\n       [ method ]\n       **\n       * Translate the matrix\n       - x (number) horizontal offset distance\n       - y (number) vertical offset distance\n      \\*/\n\n\n      matrixproto.translate = function (x, y) {\n        return this.add(1, 0, 0, 1, x, y);\n      };\n      /*\\\n       * Matrix.scale\n       [ method ]\n       **\n       * Scales the matrix\n       - x (number) amount to be scaled, with `1` resulting in no change\n       - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n       - cx (number) #optional horizontal origin point from which to scale\n       - cy (number) #optional vertical origin point from which to scale\n       * Default cx, cy is the middle point of the element.\n      \\*/\n\n\n      matrixproto.scale = function (x, y, cx, cy) {\n        y == null && (y = x);\n        (cx || cy) && this.add(1, 0, 0, 1, cx, cy);\n        this.add(x, 0, 0, y, 0, 0);\n        (cx || cy) && this.add(1, 0, 0, 1, -cx, -cy);\n        return this;\n      };\n      /*\\\n       * Matrix.rotate\n       [ method ]\n       **\n       * Rotates the matrix\n       - a (number) angle of rotation, in degrees\n       - x (number) horizontal origin point from which to rotate\n       - y (number) vertical origin point from which to rotate\n      \\*/\n\n\n      matrixproto.rotate = function (a, x, y) {\n        a = Snap.rad(a);\n        x = x || 0;\n        y = y || 0;\n        var cos = +math.cos(a).toFixed(9),\n            sin = +math.sin(a).toFixed(9);\n        this.add(cos, sin, -sin, cos, x, y);\n        return this.add(1, 0, 0, 1, -x, -y);\n      };\n      /*\\\n       * Matrix.x\n       [ method ]\n       **\n       * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n       - x (number)\n       - y (number)\n       = (number) x\n      \\*/\n\n\n      matrixproto.x = function (x, y) {\n        return x * this.a + y * this.c + this.e;\n      };\n      /*\\\n       * Matrix.y\n       [ method ]\n       **\n       * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n       - x (number)\n       - y (number)\n       = (number) y\n      \\*/\n\n\n      matrixproto.y = function (x, y) {\n        return x * this.b + y * this.d + this.f;\n      };\n\n      matrixproto.get = function (i) {\n        return +this[Str.fromCharCode(97 + i)].toFixed(4);\n      };\n\n      matrixproto.toString = function () {\n        return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n      };\n\n      matrixproto.offset = function () {\n        return [this.e.toFixed(4), this.f.toFixed(4)];\n      };\n\n      function norm(a) {\n        return a[0] * a[0] + a[1] * a[1];\n      }\n\n      function normalize(a) {\n        var mag = math.sqrt(norm(a));\n        a[0] && (a[0] /= mag);\n        a[1] && (a[1] /= mag);\n      }\n      /*\\\n       * Matrix.determinant\n       [ method ]\n       **\n       * Finds determinant of the given matrix.\n       = (number) determinant\n      \\*/\n\n\n      matrixproto.determinant = function () {\n        return this.a * this.d - this.b * this.c;\n      };\n      /*\\\n       * Matrix.split\n       [ method ]\n       **\n       * Splits matrix into primitive transformations\n       = (object) in format:\n       o dx (number) translation by x\n       o dy (number) translation by y\n       o scalex (number) scale by x\n       o scaley (number) scale by y\n       o shear (number) shear\n       o rotate (number) rotation in deg\n       o isSimple (boolean) could it be represented via simple transformations\n      \\*/\n\n\n      matrixproto.split = function () {\n        var out = {}; // translation\n\n        out.dx = this.e;\n        out.dy = this.f; // scale and shear\n\n        var row = [[this.a, this.c], [this.b, this.d]];\n        out.scalex = math.sqrt(norm(row[0]));\n        normalize(row[0]);\n        out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n        row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n        out.scaley = math.sqrt(norm(row[1]));\n        normalize(row[1]);\n        out.shear /= out.scaley;\n\n        if (this.determinant() < 0) {\n          out.scalex = -out.scalex;\n        } // rotation\n\n\n        var sin = -row[0][1],\n            cos = row[1][1];\n\n        if (cos < 0) {\n          out.rotate = Snap.deg(math.acos(cos));\n\n          if (sin < 0) {\n            out.rotate = 360 - out.rotate;\n          }\n        } else {\n          out.rotate = Snap.deg(math.asin(sin));\n        }\n\n        out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n        out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n        out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n        return out;\n      };\n      /*\\\n       * Matrix.toTransformString\n       [ method ]\n       **\n       * Returns transform string that represents given matrix\n       = (string) transform string\n      \\*/\n\n\n      matrixproto.toTransformString = function (shorter) {\n        var s = shorter || this.split();\n\n        if (!+s.shear.toFixed(9)) {\n          s.scalex = +s.scalex.toFixed(4);\n          s.scaley = +s.scaley.toFixed(4);\n          s.rotate = +s.rotate.toFixed(4);\n          return (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) + (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E) + (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E);\n        } else {\n          return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n        }\n      };\n    })(Matrix.prototype);\n    /*\\\n     * Snap.Matrix\n     [ method ]\n     **\n     * Matrix constructor, extend on your own risk.\n     * To create matrices use @Snap.matrix.\n    \\*/\n\n\n    Snap.Matrix = Matrix;\n    /*\\\n     * Snap.matrix\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns a matrix based on the given parameters\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - svgMatrix (SVGMatrix)\n     = (object) @Matrix\n    \\*/\n\n    Snap.matrix = function (a, b, c, d, e, f) {\n      return new Matrix(a, b, c, d, e, f);\n    };\n  }); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n  // \n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  // \n  // http://www.apache.org/licenses/LICENSE-2.0\n  // \n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n\n  Snap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var has = \"hasOwnProperty\",\n        make = Snap._.make,\n        wrap = Snap._.wrap,\n        is = Snap.is,\n        getSomeDefs = Snap._.getSomeDefs,\n        reURLValue = /^url\\(#?([^)]+)\\)$/,\n        $ = Snap._.$,\n        URL = Snap.url,\n        Str = String,\n        separator = Snap._.separator,\n        E = \"\"; // Attributes event handlers\n\n    eve.on(\"snap.util.attr.mask\", function (value) {\n      if (value instanceof Element || value instanceof Fragment) {\n        eve.stop();\n\n        if (value instanceof Fragment && value.node.childNodes.length == 1) {\n          value = value.node.firstChild;\n          getSomeDefs(this).appendChild(value);\n          value = wrap(value);\n        }\n\n        if (value.type == \"mask\") {\n          var mask = value;\n        } else {\n          mask = make(\"mask\", getSomeDefs(this));\n          mask.node.appendChild(value.node);\n        }\n\n        !mask.node.id && $(mask.node, {\n          id: mask.id\n        });\n        $(this.node, {\n          mask: URL(mask.id)\n        });\n      }\n    });\n\n    (function (clipIt) {\n      eve.on(\"snap.util.attr.clip\", clipIt);\n      eve.on(\"snap.util.attr.clip-path\", clipIt);\n      eve.on(\"snap.util.attr.clipPath\", clipIt);\n    })(function (value) {\n      if (value instanceof Element || value instanceof Fragment) {\n        eve.stop();\n\n        if (value.type == \"clipPath\") {\n          var clip = value;\n        } else {\n          clip = make(\"clipPath\", getSomeDefs(this));\n          clip.node.appendChild(value.node);\n          !clip.node.id && $(clip.node, {\n            id: clip.id\n          });\n        }\n\n        $(this.node, {\n          \"clip-path\": URL(clip.node.id || clip.id)\n        });\n      }\n    });\n\n    function fillStroke(name) {\n      return function (value) {\n        eve.stop();\n\n        if (value instanceof Fragment && value.node.childNodes.length == 1 && (value.node.firstChild.tagName == \"radialGradient\" || value.node.firstChild.tagName == \"linearGradient\" || value.node.firstChild.tagName == \"pattern\")) {\n          value = value.node.firstChild;\n          getSomeDefs(this).appendChild(value);\n          value = wrap(value);\n        }\n\n        if (value instanceof Element) {\n          if (value.type == \"radialGradient\" || value.type == \"linearGradient\" || value.type == \"pattern\") {\n            if (!value.node.id) {\n              $(value.node, {\n                id: value.id\n              });\n            }\n\n            var fill = URL(value.node.id);\n          } else {\n            fill = value.attr(name);\n          }\n        } else {\n          fill = Snap.color(value);\n\n          if (fill.error) {\n            var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n\n            if (grad) {\n              if (!grad.node.id) {\n                $(grad.node, {\n                  id: grad.id\n                });\n              }\n\n              fill = URL(grad.node.id);\n            } else {\n              fill = value;\n            }\n          } else {\n            fill = Str(fill);\n          }\n        }\n\n        var attrs = {};\n        attrs[name] = fill;\n        $(this.node, attrs);\n        this.node.style[name] = E;\n      };\n    }\n\n    eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n    eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n    var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n    eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n      string = Str(string);\n      var tokens = string.match(gradrg);\n\n      if (!tokens) {\n        return null;\n      }\n\n      var type = tokens[1],\n          params = tokens[2],\n          stops = tokens[3];\n      params = params.split(/\\s*,\\s*/).map(function (el) {\n        return +el == el ? +el : el;\n      });\n\n      if (params.length == 1 && params[0] == 0) {\n        params = [];\n      }\n\n      stops = stops.split(\"-\");\n      stops = stops.map(function (el) {\n        el = el.split(\":\");\n        var out = {\n          color: el[0]\n        };\n\n        if (el[1]) {\n          out.offset = parseFloat(el[1]);\n        }\n\n        return out;\n      });\n      return {\n        type: type,\n        params: params,\n        stops: stops\n      };\n    });\n    eve.on(\"snap.util.attr.d\", function (value) {\n      eve.stop();\n\n      if (is(value, \"array\") && is(value[0], \"array\")) {\n        value = Snap.path.toString.call(value);\n      }\n\n      value = Str(value);\n\n      if (value.match(/[ruo]/i)) {\n        value = Snap.path.toAbsolute(value);\n      }\n\n      $(this.node, {\n        d: value\n      });\n    })(-1);\n    eve.on(\"snap.util.attr.#text\", function (value) {\n      eve.stop();\n      value = Str(value);\n      var txt = glob.doc.createTextNode(value);\n\n      while (this.node.firstChild) {\n        this.node.removeChild(this.node.firstChild);\n      }\n\n      this.node.appendChild(txt);\n    })(-1);\n    eve.on(\"snap.util.attr.path\", function (value) {\n      eve.stop();\n      this.attr({\n        d: value\n      });\n    })(-1);\n    eve.on(\"snap.util.attr.class\", function (value) {\n      eve.stop();\n      this.node.className.baseVal = value;\n    })(-1);\n    eve.on(\"snap.util.attr.viewBox\", function (value) {\n      var vb;\n\n      if (is(value, \"object\") && \"x\" in value) {\n        vb = [value.x, value.y, value.width, value.height].join(\" \");\n      } else if (is(value, \"array\")) {\n        vb = value.join(\" \");\n      } else {\n        vb = value;\n      }\n\n      $(this.node, {\n        viewBox: vb\n      });\n      eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.transform\", function (value) {\n      this.transform(value);\n      eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.r\", function (value) {\n      if (this.type == \"rect\") {\n        eve.stop();\n        $(this.node, {\n          rx: value,\n          ry: value\n        });\n      }\n    })(-1);\n    eve.on(\"snap.util.attr.textpath\", function (value) {\n      eve.stop();\n\n      if (this.type == \"text\") {\n        var id, tp, node;\n\n        if (!value && this.textPath) {\n          tp = this.textPath;\n\n          while (tp.node.firstChild) {\n            this.node.appendChild(tp.node.firstChild);\n          }\n\n          tp.remove();\n          delete this.textPath;\n          return;\n        }\n\n        if (is(value, \"string\")) {\n          var defs = getSomeDefs(this),\n              path = wrap(defs.parentNode).path(value);\n          defs.appendChild(path.node);\n          id = path.id;\n          path.attr({\n            id: id\n          });\n        } else {\n          value = wrap(value);\n\n          if (value instanceof Element) {\n            id = value.attr(\"id\");\n\n            if (!id) {\n              id = value.id;\n              value.attr({\n                id: id\n              });\n            }\n          }\n        }\n\n        if (id) {\n          tp = this.textPath;\n          node = this.node;\n\n          if (tp) {\n            tp.attr({\n              \"xlink:href\": \"#\" + id\n            });\n          } else {\n            tp = $(\"textPath\", {\n              \"xlink:href\": \"#\" + id\n            });\n\n            while (node.firstChild) {\n              tp.appendChild(node.firstChild);\n            }\n\n            node.appendChild(tp);\n            this.textPath = wrap(tp);\n          }\n        }\n      }\n    })(-1);\n    eve.on(\"snap.util.attr.text\", function (value) {\n      if (this.type == \"text\") {\n        var i = 0,\n            node = this.node,\n            tuner = function (chunk) {\n          var out = $(\"tspan\");\n\n          if (is(chunk, \"array\")) {\n            for (var i = 0; i < chunk.length; i++) {\n              out.appendChild(tuner(chunk[i]));\n            }\n          } else {\n            out.appendChild(glob.doc.createTextNode(chunk));\n          }\n\n          out.normalize && out.normalize();\n          return out;\n        };\n\n        while (node.firstChild) {\n          node.removeChild(node.firstChild);\n        }\n\n        var tuned = tuner(value);\n\n        while (tuned.firstChild) {\n          node.appendChild(tuned.firstChild);\n        }\n      }\n\n      eve.stop();\n    })(-1);\n\n    function setFontSize(value) {\n      eve.stop();\n\n      if (value == +value) {\n        value += \"px\";\n      }\n\n      this.node.style.fontSize = value;\n    }\n\n    eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n    eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n    eve.on(\"snap.util.getattr.transform\", function () {\n      eve.stop();\n      return this.transform();\n    })(-1);\n    eve.on(\"snap.util.getattr.textpath\", function () {\n      eve.stop();\n      return this.textPath;\n    })(-1); // Markers\n\n    (function () {\n      function getter(end) {\n        return function () {\n          eve.stop();\n          var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n\n          if (style == \"none\") {\n            return style;\n          } else {\n            return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n          }\n        };\n      }\n\n      function setter(end) {\n        return function (value) {\n          eve.stop();\n          var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n\n          if (value == \"\" || !value) {\n            this.node.style[name] = \"none\";\n            return;\n          }\n\n          if (value.type == \"marker\") {\n            var id = value.node.id;\n\n            if (!id) {\n              $(value.node, {\n                id: value.id\n              });\n            }\n\n            this.node.style[name] = URL(id);\n            return;\n          }\n        };\n      }\n\n      eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n      eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n      eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n      eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n      eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n      eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n      eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n      eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n      eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n      eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n      eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n      eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n    })();\n\n    eve.on(\"snap.util.getattr.r\", function () {\n      if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n        eve.stop();\n        return $(this.node, \"rx\");\n      }\n    })(-1);\n\n    function textExtract(node) {\n      var out = [];\n      var children = node.childNodes;\n\n      for (var i = 0, ii = children.length; i < ii; i++) {\n        var chi = children[i];\n\n        if (chi.nodeType == 3) {\n          out.push(chi.nodeValue);\n        }\n\n        if (chi.tagName == \"tspan\") {\n          if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n            out.push(chi.firstChild.nodeValue);\n          } else {\n            out.push(textExtract(chi));\n          }\n        }\n      }\n\n      return out;\n    }\n\n    eve.on(\"snap.util.getattr.text\", function () {\n      if (this.type == \"text\" || this.type == \"tspan\") {\n        eve.stop();\n        var out = textExtract(this.node);\n        return out.length == 1 ? out[0] : out;\n      }\n    })(-1);\n    eve.on(\"snap.util.getattr.#text\", function () {\n      return this.node.textContent;\n    })(-1);\n    eve.on(\"snap.util.getattr.viewBox\", function () {\n      eve.stop();\n      var vb = $(this.node, \"viewBox\");\n\n      if (vb) {\n        vb = vb.split(separator);\n        return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n      } else {\n        return;\n      }\n    })(-1);\n    eve.on(\"snap.util.getattr.points\", function () {\n      var p = $(this.node, \"points\");\n      eve.stop();\n\n      if (p) {\n        return p.split(separator);\n      } else {\n        return;\n      }\n    })(-1);\n    eve.on(\"snap.util.getattr.path\", function () {\n      var p = $(this.node, \"d\");\n      eve.stop();\n      return p;\n    })(-1);\n    eve.on(\"snap.util.getattr.class\", function () {\n      return this.node.className.baseVal;\n    })(-1);\n\n    function getFontSize() {\n      eve.stop();\n      return this.node.style.fontSize;\n    }\n\n    eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n    eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n  }); // Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n\n  Snap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var rgNotSpace = /\\S+/g,\n        rgBadSpace = /[\\t\\r\\n\\f]/g,\n        rgTrim = /(^\\s+|\\s+$)/g,\n        Str = String,\n        elproto = Element.prototype;\n    /*\\\n     * Element.addClass\n     [ method ]\n     **\n     * Adds given class name or list of class names to the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n\n    elproto.addClass = function (value) {\n      var classes = Str(value || \"\").match(rgNotSpace) || [],\n          elem = this.node,\n          className = elem.className.baseVal,\n          curClasses = className.match(rgNotSpace) || [],\n          j,\n          pos,\n          clazz,\n          finalValue;\n\n      if (classes.length) {\n        j = 0;\n\n        while (clazz = classes[j++]) {\n          pos = curClasses.indexOf(clazz);\n\n          if (!~pos) {\n            curClasses.push(clazz);\n          }\n        }\n\n        finalValue = curClasses.join(\" \");\n\n        if (className != finalValue) {\n          elem.className.baseVal = finalValue;\n        }\n      }\n\n      return this;\n    };\n    /*\\\n     * Element.removeClass\n     [ method ]\n     **\n     * Removes given class name or list of class names from the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n\n\n    elproto.removeClass = function (value) {\n      var classes = Str(value || \"\").match(rgNotSpace) || [],\n          elem = this.node,\n          className = elem.className.baseVal,\n          curClasses = className.match(rgNotSpace) || [],\n          j,\n          pos,\n          clazz,\n          finalValue;\n\n      if (curClasses.length) {\n        j = 0;\n\n        while (clazz = classes[j++]) {\n          pos = curClasses.indexOf(clazz);\n\n          if (~pos) {\n            curClasses.splice(pos, 1);\n          }\n        }\n\n        finalValue = curClasses.join(\" \");\n\n        if (className != finalValue) {\n          elem.className.baseVal = finalValue;\n        }\n      }\n\n      return this;\n    };\n    /*\\\n     * Element.hasClass\n     [ method ]\n     **\n     * Checks if the element has a given class name in the list of class names applied to it.\n     - value (string) class name\n     **\n     = (boolean) `true` if the element has given class\n    \\*/\n\n\n    elproto.hasClass = function (value) {\n      var elem = this.node,\n          className = elem.className.baseVal,\n          curClasses = className.match(rgNotSpace) || [];\n      return !!~curClasses.indexOf(value);\n    };\n    /*\\\n     * Element.toggleClass\n     [ method ]\n     **\n     * Add or remove one or more classes from the element, depending on either\n     * the class’s presence or the value of the `flag` argument.\n     - value (string) class name or space separated list of class names\n     - flag (boolean) value to determine whether the class should be added or removed\n     **\n     = (Element) original element.\n    \\*/\n\n\n    elproto.toggleClass = function (value, flag) {\n      if (flag != null) {\n        if (flag) {\n          return this.addClass(value);\n        } else {\n          return this.removeClass(value);\n        }\n      }\n\n      var classes = (value || \"\").match(rgNotSpace) || [],\n          elem = this.node,\n          className = elem.className.baseVal,\n          curClasses = className.match(rgNotSpace) || [],\n          j,\n          pos,\n          clazz,\n          finalValue;\n      j = 0;\n\n      while (clazz = classes[j++]) {\n        pos = curClasses.indexOf(clazz);\n\n        if (~pos) {\n          curClasses.splice(pos, 1);\n        } else {\n          curClasses.push(clazz);\n        }\n      }\n\n      finalValue = curClasses.join(\" \");\n\n      if (className != finalValue) {\n        elem.className.baseVal = finalValue;\n      }\n\n      return this;\n    };\n  }); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n  // \n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  // \n  // http://www.apache.org/licenses/LICENSE-2.0\n  // \n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n\n  Snap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var operators = {\n      \"+\": function (x, y) {\n        return x + y;\n      },\n      \"-\": function (x, y) {\n        return x - y;\n      },\n      \"/\": function (x, y) {\n        return x / y;\n      },\n      \"*\": function (x, y) {\n        return x * y;\n      }\n    },\n        Str = String,\n        reUnit = /[a-z]+$/i,\n        reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n\n    function getNumber(val) {\n      return val;\n    }\n\n    function getUnit(unit) {\n      return function (val) {\n        return +val.toFixed(3) + unit;\n      };\n    }\n\n    eve.on(\"snap.util.attr\", function (val) {\n      var plus = Str(val).match(reAddon);\n\n      if (plus) {\n        var evnt = eve.nt(),\n            name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n            a = this.attr(name),\n            atr = {};\n        eve.stop();\n        var unit = plus[3] || \"\",\n            aUnit = a.match(reUnit),\n            op = operators[plus[1]];\n\n        if (aUnit && aUnit == unit) {\n          val = op(parseFloat(a), +plus[2]);\n        } else {\n          a = this.asPX(name);\n          val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n        }\n\n        if (isNaN(a) || isNaN(val)) {\n          return;\n        }\n\n        atr[name] = val;\n        this.attr(atr);\n      }\n    })(-10);\n    eve.on(\"snap.util.equal\", function (name, b) {\n      var A,\n          B,\n          a = Str(this.attr(name) || \"\"),\n          el = this,\n          bplus = Str(b).match(reAddon);\n\n      if (bplus) {\n        eve.stop();\n        var unit = bplus[3] || \"\",\n            aUnit = a.match(reUnit),\n            op = operators[bplus[1]];\n\n        if (aUnit && aUnit == unit) {\n          return {\n            from: parseFloat(a),\n            to: op(parseFloat(a), +bplus[2]),\n            f: getUnit(aUnit)\n          };\n        } else {\n          a = this.asPX(name);\n          return {\n            from: a,\n            to: op(a, this.asPX(name, bplus[2] + unit)),\n            f: getNumber\n          };\n        }\n      }\n    })(-10);\n  }); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n  // \n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  // \n  // http://www.apache.org/licenses/LICENSE-2.0\n  // \n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n\n  Snap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var proto = Paper.prototype,\n        is = Snap.is;\n    /*\\\n     * Paper.rect\n     [ method ]\n     *\n     * Draws a rectangle\n     **\n     - x (number) x coordinate of the top left corner\n     - y (number) y coordinate of the top left corner\n     - width (number) width\n     - height (number) height\n     - rx (number) #optional horizontal radius for rounded corners, default is 0\n     - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n     = (object) the `rect` element\n     **\n     > Usage\n     | // regular rectangle\n     | var c = paper.rect(10, 10, 50, 50);\n     | // rectangle with rounded corners\n     | var c = paper.rect(40, 40, 50, 50, 10);\n    \\*/\n\n    proto.rect = function (x, y, w, h, rx, ry) {\n      var attr;\n\n      if (ry == null) {\n        ry = rx;\n      }\n\n      if (is(x, \"object\") && x == \"[object Object]\") {\n        attr = x;\n      } else if (x != null) {\n        attr = {\n          x: x,\n          y: y,\n          width: w,\n          height: h\n        };\n\n        if (rx != null) {\n          attr.rx = rx;\n          attr.ry = ry;\n        }\n      }\n\n      return this.el(\"rect\", attr);\n    };\n    /*\\\n     * Paper.circle\n     [ method ]\n     **\n     * Draws a circle\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - r (number) radius\n     = (object) the `circle` element\n     **\n     > Usage\n     | var c = paper.circle(50, 50, 40);\n    \\*/\n\n\n    proto.circle = function (cx, cy, r) {\n      var attr;\n\n      if (is(cx, \"object\") && cx == \"[object Object]\") {\n        attr = cx;\n      } else if (cx != null) {\n        attr = {\n          cx: cx,\n          cy: cy,\n          r: r\n        };\n      }\n\n      return this.el(\"circle\", attr);\n    };\n\n    var preload = function () {\n      function onerror() {\n        this.parentNode.removeChild(this);\n      }\n\n      return function (src, f) {\n        var img = glob.doc.createElement(\"img\"),\n            body = glob.doc.body;\n        img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n\n        img.onload = function () {\n          f.call(img);\n          img.onload = img.onerror = null;\n          body.removeChild(img);\n        };\n\n        img.onerror = onerror;\n        body.appendChild(img);\n        img.src = src;\n      };\n    }();\n    /*\\\n     * Paper.image\n     [ method ]\n     **\n     * Places an image on the surface\n     **\n     - src (string) URI of the source image\n     - x (number) x offset position\n     - y (number) y offset position\n     - width (number) width of the image\n     - height (number) height of the image\n     = (object) the `image` element\n     * or\n     = (object) Snap element object with type `image`\n     **\n     > Usage\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n    \\*/\n\n\n    proto.image = function (src, x, y, width, height) {\n      var el = this.el(\"image\");\n\n      if (is(src, \"object\") && \"src\" in src) {\n        el.attr(src);\n      } else if (src != null) {\n        var set = {\n          \"xlink:href\": src,\n          preserveAspectRatio: \"none\"\n        };\n\n        if (x != null && y != null) {\n          set.x = x;\n          set.y = y;\n        }\n\n        if (width != null && height != null) {\n          set.width = width;\n          set.height = height;\n        } else {\n          preload(src, function () {\n            Snap._.$(el.node, {\n              width: this.offsetWidth,\n              height: this.offsetHeight\n            });\n          });\n        }\n\n        Snap._.$(el.node, set);\n      }\n\n      return el;\n    };\n    /*\\\n     * Paper.ellipse\n     [ method ]\n     **\n     * Draws an ellipse\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - rx (number) horizontal radius\n     - ry (number) vertical radius\n     = (object) the `ellipse` element\n     **\n     > Usage\n     | var c = paper.ellipse(50, 50, 40, 20);\n    \\*/\n\n\n    proto.ellipse = function (cx, cy, rx, ry) {\n      var attr;\n\n      if (is(cx, \"object\") && cx == \"[object Object]\") {\n        attr = cx;\n      } else if (cx != null) {\n        attr = {\n          cx: cx,\n          cy: cy,\n          rx: rx,\n          ry: ry\n        };\n      }\n\n      return this.el(\"ellipse\", attr);\n    }; // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n\n    /*\\\n     * Paper.path\n     [ method ]\n     **\n     * Creates a `<path>` element using the given string as the path's definition\n     - pathString (string) #optional path string in SVG format\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n     | \"M10,20L30,40\"\n     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n     *\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n     > Usage\n     | var c = paper.path(\"M10 10L90 90\");\n     | // draw a diagonal line:\n     | // move to 10,10, line to 90,90\n    \\*/\n\n\n    proto.path = function (d) {\n      var attr;\n\n      if (is(d, \"object\") && !is(d, \"array\")) {\n        attr = d;\n      } else if (d) {\n        attr = {\n          d: d\n        };\n      }\n\n      return this.el(\"path\", attr);\n    };\n    /*\\\n     * Paper.g\n     [ method ]\n     **\n     * Creates a group element\n     **\n     - varargs (…) #optional elements to nest within the group\n     = (object) the `g` element\n     **\n     > Usage\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g(c2, c1); // note that the order of elements is different\n     * or\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g();\n     | g.add(c2, c1);\n    \\*/\n\n    /*\\\n     * Paper.group\n     [ method ]\n     **\n     * See @Paper.g\n    \\*/\n\n\n    proto.group = proto.g = function (first) {\n      var attr,\n          el = this.el(\"g\");\n\n      if (arguments.length == 1 && first && !first.type) {\n        el.attr(first);\n      } else if (arguments.length) {\n        el.add(Array.prototype.slice.call(arguments, 0));\n      }\n\n      return el;\n    };\n    /*\\\n     * Paper.svg\n     [ method ]\n     **\n     * Creates a nested SVG element.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `svg` element\n     **\n    \\*/\n\n\n    proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n      var attrs = {};\n\n      if (is(x, \"object\") && y == null) {\n        attrs = x;\n      } else {\n        if (x != null) {\n          attrs.x = x;\n        }\n\n        if (y != null) {\n          attrs.y = y;\n        }\n\n        if (width != null) {\n          attrs.width = width;\n        }\n\n        if (height != null) {\n          attrs.height = height;\n        }\n\n        if (vbx != null && vby != null && vbw != null && vbh != null) {\n          attrs.viewBox = [vbx, vby, vbw, vbh];\n        }\n      }\n\n      return this.el(\"svg\", attrs);\n    };\n    /*\\\n     * Paper.mask\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a mask.\n     **\n     = (object) the `mask` element\n     **\n    \\*/\n\n\n    proto.mask = function (first) {\n      var attr,\n          el = this.el(\"mask\");\n\n      if (arguments.length == 1 && first && !first.type) {\n        el.attr(first);\n      } else if (arguments.length) {\n        el.add(Array.prototype.slice.call(arguments, 0));\n      }\n\n      return el;\n    };\n    /*\\\n     * Paper.ptrn\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `pattern` element\n     **\n    \\*/\n\n\n    proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n      if (is(x, \"object\")) {\n        var attr = x;\n      } else {\n        attr = {\n          patternUnits: \"userSpaceOnUse\"\n        };\n\n        if (x) {\n          attr.x = x;\n        }\n\n        if (y) {\n          attr.y = y;\n        }\n\n        if (width != null) {\n          attr.width = width;\n        }\n\n        if (height != null) {\n          attr.height = height;\n        }\n\n        if (vx != null && vy != null && vw != null && vh != null) {\n          attr.viewBox = [vx, vy, vw, vh];\n        } else {\n          attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n        }\n      }\n\n      return this.el(\"pattern\", attr);\n    };\n    /*\\\n     * Paper.use\n     [ method ]\n     **\n     * Creates a <use> element.\n     - id (string) @optional id of element to link\n     * or\n     - id (Element) @optional element to link\n     **\n     = (object) the `use` element\n     **\n    \\*/\n\n\n    proto.use = function (id) {\n      if (id != null) {\n        if (id instanceof Element) {\n          if (!id.attr(\"id\")) {\n            id.attr({\n              id: Snap._.id(id)\n            });\n          }\n\n          id = id.attr(\"id\");\n        }\n\n        if (String(id).charAt() == \"#\") {\n          id = id.substring(1);\n        }\n\n        return this.el(\"use\", {\n          \"xlink:href\": \"#\" + id\n        });\n      } else {\n        return Element.prototype.use.call(this);\n      }\n    };\n    /*\\\n     * Paper.symbol\n     [ method ]\n     **\n     * Creates a <symbol> element.\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     = (object) the `symbol` element\n     **\n    \\*/\n\n\n    proto.symbol = function (vx, vy, vw, vh) {\n      var attr = {};\n\n      if (vx != null && vy != null && vw != null && vh != null) {\n        attr.viewBox = [vx, vy, vw, vh];\n      }\n\n      return this.el(\"symbol\", attr);\n    };\n    /*\\\n     * Paper.text\n     [ method ]\n     **\n     * Draws a text string\n     **\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n     = (object) the `text` element\n     **\n     > Usage\n     | var t1 = paper.text(50, 50, \"Snap\");\n     | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n     | // Text path usage\n     | t1.attr({textpath: \"M10,10L100,100\"});\n     | // or\n     | var pth = paper.path(\"M10,10L100,100\");\n     | t1.attr({textpath: pth});\n    \\*/\n\n\n    proto.text = function (x, y, text) {\n      var attr = {};\n\n      if (is(x, \"object\")) {\n        attr = x;\n      } else if (x != null) {\n        attr = {\n          x: x,\n          y: y,\n          text: text || \"\"\n        };\n      }\n\n      return this.el(\"text\", attr);\n    };\n    /*\\\n     * Paper.line\n     [ method ]\n     **\n     * Draws a line\n     **\n     - x1 (number) x coordinate position of the start\n     - y1 (number) y coordinate position of the start\n     - x2 (number) x coordinate position of the end\n     - y2 (number) y coordinate position of the end\n     = (object) the `line` element\n     **\n     > Usage\n     | var t1 = paper.line(50, 50, 100, 100);\n    \\*/\n\n\n    proto.line = function (x1, y1, x2, y2) {\n      var attr = {};\n\n      if (is(x1, \"object\")) {\n        attr = x1;\n      } else if (x1 != null) {\n        attr = {\n          x1: x1,\n          x2: x2,\n          y1: y1,\n          y2: y2\n        };\n      }\n\n      return this.el(\"line\", attr);\n    };\n    /*\\\n     * Paper.polyline\n     [ method ]\n     **\n     * Draws a polyline\n     **\n     - points (array) array of points\n     * or\n     - varargs (…) points\n     = (object) the `polyline` element\n     **\n     > Usage\n     | var p1 = paper.polyline([10, 10, 100, 100]);\n     | var p2 = paper.polyline(10, 10, 100, 100);\n    \\*/\n\n\n    proto.polyline = function (points) {\n      if (arguments.length > 1) {\n        points = Array.prototype.slice.call(arguments, 0);\n      }\n\n      var attr = {};\n\n      if (is(points, \"object\") && !is(points, \"array\")) {\n        attr = points;\n      } else if (points != null) {\n        attr = {\n          points: points\n        };\n      }\n\n      return this.el(\"polyline\", attr);\n    };\n    /*\\\n     * Paper.polygon\n     [ method ]\n     **\n     * Draws a polygon. See @Paper.polyline\n    \\*/\n\n\n    proto.polygon = function (points) {\n      if (arguments.length > 1) {\n        points = Array.prototype.slice.call(arguments, 0);\n      }\n\n      var attr = {};\n\n      if (is(points, \"object\") && !is(points, \"array\")) {\n        attr = points;\n      } else if (points != null) {\n        attr = {\n          points: points\n        };\n      }\n\n      return this.el(\"polygon\", attr);\n    }; // gradients\n\n\n    (function () {\n      var $ = Snap._.$; // gradients' helpers\n\n      function Gstops() {\n        return this.selectAll(\"stop\");\n      }\n\n      function GaddStop(color, offset) {\n        var stop = $(\"stop\"),\n            attr = {\n          offset: +offset + \"%\"\n        };\n        color = Snap.color(color);\n        attr[\"stop-color\"] = color.hex;\n\n        if (color.opacity < 1) {\n          attr[\"stop-opacity\"] = color.opacity;\n        }\n\n        $(stop, attr);\n        this.node.appendChild(stop);\n        return this;\n      }\n\n      function GgetBBox() {\n        if (this.type == \"linearGradient\") {\n          var x1 = $(this.node, \"x1\") || 0,\n              x2 = $(this.node, \"x2\") || 1,\n              y1 = $(this.node, \"y1\") || 0,\n              y2 = $(this.node, \"y2\") || 0;\n          return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n        } else {\n          var cx = this.node.cx || .5,\n              cy = this.node.cy || .5,\n              r = this.node.r || 0;\n          return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n        }\n      }\n\n      function gradient(defs, str) {\n        var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n            el;\n\n        if (!grad) {\n          return null;\n        }\n\n        grad.params.unshift(defs);\n\n        if (grad.type.toLowerCase() == \"l\") {\n          el = gradientLinear.apply(0, grad.params);\n        } else {\n          el = gradientRadial.apply(0, grad.params);\n        }\n\n        if (grad.type != grad.type.toLowerCase()) {\n          $(el.node, {\n            gradientUnits: \"userSpaceOnUse\"\n          });\n        }\n\n        var stops = grad.stops,\n            len = stops.length,\n            start = 0,\n            j = 0;\n\n        function seed(i, end) {\n          var step = (end - start) / (i - j);\n\n          for (var k = j; k < i; k++) {\n            stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n          }\n\n          j = i;\n          start = end;\n        }\n\n        len--;\n\n        for (var i = 0; i < len; i++) if (\"offset\" in stops[i]) {\n          seed(i, stops[i].offset);\n        }\n\n        stops[len].offset = stops[len].offset || 100;\n        seed(len, stops[len].offset);\n\n        for (i = 0; i <= len; i++) {\n          var stop = stops[i];\n          el.addStop(stop.color, stop.offset);\n        }\n\n        return el;\n      }\n\n      function gradientLinear(defs, x1, y1, x2, y2) {\n        var el = Snap._.make(\"linearGradient\", defs);\n\n        el.stops = Gstops;\n        el.addStop = GaddStop;\n        el.getBBox = GgetBBox;\n\n        if (x1 != null) {\n          $(el.node, {\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2\n          });\n        }\n\n        return el;\n      }\n\n      function gradientRadial(defs, cx, cy, r, fx, fy) {\n        var el = Snap._.make(\"radialGradient\", defs);\n\n        el.stops = Gstops;\n        el.addStop = GaddStop;\n        el.getBBox = GgetBBox;\n\n        if (cx != null) {\n          $(el.node, {\n            cx: cx,\n            cy: cy,\n            r: r\n          });\n        }\n\n        if (fx != null && fy != null) {\n          $(el.node, {\n            fx: fx,\n            fy: fy\n          });\n        }\n\n        return el;\n      }\n      /*\\\n       * Paper.gradient\n       [ method ]\n       **\n       * Creates a gradient element\n       **\n       - gradient (string) gradient descriptor\n       > Gradient Descriptor\n       * The gradient descriptor is an expression formatted as\n       * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n       * either linear or radial.  The uppercase `L` or `R` letters\n       * indicate absolute coordinates offset from the SVG surface.\n       * Lowercase `l` or `r` letters indicate coordinates\n       * calculated relative to the element to which the gradient is\n       * applied.  Coordinates specify a linear gradient vector as\n       * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n       * `r` and optional `fx`, `fy` specifying a focal point away\n       * from the center of the circle. Specify `<colors>` as a list\n       * of dash-separated CSS color values.  Each color may be\n       * followed by a custom offset value, separated with a colon\n       * character.\n       > Examples\n       * Linear gradient, relative from top-left corner to bottom-right\n       * corner, from black through red to white:\n       | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n       * Linear gradient, absolute from (0, 0) to (100, 100), from black\n       * through red at 25% to white:\n       | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n       * Radial gradient, relative from the center of the element with radius\n       * half the width, from black to white:\n       | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n       * To apply the gradient:\n       | paper.circle(50, 50, 40).attr({\n       |     fill: g\n       | });\n       = (object) the `gradient` element\n      \\*/\n\n\n      proto.gradient = function (str) {\n        return gradient(this.defs, str);\n      };\n\n      proto.gradientLinear = function (x1, y1, x2, y2) {\n        return gradientLinear(this.defs, x1, y1, x2, y2);\n      };\n\n      proto.gradientRadial = function (cx, cy, r, fx, fy) {\n        return gradientRadial(this.defs, cx, cy, r, fx, fy);\n      };\n      /*\\\n       * Paper.toString\n       [ method ]\n       **\n       * Returns SVG code for the @Paper\n       = (string) SVG code for the @Paper\n      \\*/\n\n\n      proto.toString = function () {\n        var doc = this.node.ownerDocument,\n            f = doc.createDocumentFragment(),\n            d = doc.createElement(\"div\"),\n            svg = this.node.cloneNode(true),\n            res;\n        f.appendChild(d);\n        d.appendChild(svg);\n\n        Snap._.$(svg, {\n          xmlns: \"http://www.w3.org/2000/svg\"\n        });\n\n        res = d.innerHTML;\n        f.removeChild(f.firstChild);\n        return res;\n      };\n      /*\\\n       * Paper.toDataURL\n       [ method ]\n       **\n       * Returns SVG code for the @Paper as Data URI string.\n       = (string) Data URI string\n      \\*/\n\n\n      proto.toDataURL = function () {\n        if (window && window.btoa) {\n          return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n        }\n      };\n      /*\\\n       * Paper.clear\n       [ method ]\n       **\n       * Removes all child nodes of the paper, except <defs>.\n      \\*/\n\n\n      proto.clear = function () {\n        var node = this.node.firstChild,\n            next;\n\n        while (node) {\n          next = node.nextSibling;\n\n          if (node.tagName != \"defs\") {\n            node.parentNode.removeChild(node);\n          } else {\n            proto.clear.call({\n              node: node\n            });\n          }\n\n          node = next;\n        }\n      };\n    })();\n  }); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n  // \n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  // \n  // http://www.apache.org/licenses/LICENSE-2.0\n  // \n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n\n  Snap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        clone = Snap._.clone,\n        has = \"hasOwnProperty\",\n        p2s = /,?([a-z]),?/gi,\n        toFloat = parseFloat,\n        math = Math,\n        PI = math.PI,\n        mmin = math.min,\n        mmax = math.max,\n        pow = math.pow,\n        abs = math.abs;\n\n    function paths(ps) {\n      var p = paths.ps = paths.ps || {};\n\n      if (p[ps]) {\n        p[ps].sleep = 100;\n      } else {\n        p[ps] = {\n          sleep: 100\n        };\n      }\n\n      setTimeout(function () {\n        for (var key in p) if (p[has](key) && key != ps) {\n          p[key].sleep--;\n          !p[key].sleep && delete p[key];\n        }\n      });\n      return p[ps];\n    }\n\n    function box(x, y, width, height) {\n      if (x == null) {\n        x = y = width = height = 0;\n      }\n\n      if (y == null) {\n        y = x.y;\n        width = x.width;\n        height = x.height;\n        x = x.x;\n      }\n\n      return {\n        x: x,\n        y: y,\n        width: width,\n        w: width,\n        height: height,\n        h: height,\n        x2: x + width,\n        y2: y + height,\n        cx: x + width / 2,\n        cy: y + height / 2,\n        r1: math.min(width, height) / 2,\n        r2: math.max(width, height) / 2,\n        r0: math.sqrt(width * width + height * height) / 2,\n        path: rectPath(x, y, width, height),\n        vb: [x, y, width, height].join(\" \")\n      };\n    }\n\n    function toString() {\n      return this.join(\",\").replace(p2s, \"$1\");\n    }\n\n    function pathClone(pathArray) {\n      var res = clone(pathArray);\n      res.toString = toString;\n      return res;\n    }\n\n    function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n      if (length == null) {\n        return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n      } else {\n        return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n      }\n    }\n\n    function getLengthFactory(istotal, subpath) {\n      function O(val) {\n        return +(+val).toFixed(3);\n      }\n\n      return Snap._.cacher(function (path, length, onlystart) {\n        if (path instanceof Element) {\n          path = path.attr(\"d\");\n        }\n\n        path = path2curve(path);\n        var x,\n            y,\n            p,\n            l,\n            sp = \"\",\n            subpaths = {},\n            point,\n            len = 0;\n\n        for (var i = 0, ii = path.length; i < ii; i++) {\n          p = path[i];\n\n          if (p[0] == \"M\") {\n            x = +p[1];\n            y = +p[2];\n          } else {\n            l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n\n            if (len + l > length) {\n              if (subpath && !subpaths.start) {\n                point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                sp += [\"C\" + O(point.start.x), O(point.start.y), O(point.m.x), O(point.m.y), O(point.x), O(point.y)];\n\n                if (onlystart) {\n                  return sp;\n                }\n\n                subpaths.start = sp;\n                sp = [\"M\" + O(point.x), O(point.y) + \"C\" + O(point.n.x), O(point.n.y), O(point.end.x), O(point.end.y), O(p[5]), O(p[6])].join();\n                len += l;\n                x = +p[5];\n                y = +p[6];\n                continue;\n              }\n\n              if (!istotal && !subpath) {\n                point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                return point;\n              }\n            }\n\n            len += l;\n            x = +p[5];\n            y = +p[6];\n          }\n\n          sp += p.shift() + p;\n        }\n\n        subpaths.end = sp;\n        point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n        return point;\n      }, null, Snap._.clone);\n    }\n\n    var getTotalLength = getLengthFactory(1),\n        getPointAtLength = getLengthFactory(),\n        getSubpathsAtLength = getLengthFactory(0, 1);\n\n    function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n      var t1 = 1 - t,\n          t13 = pow(t1, 3),\n          t12 = pow(t1, 2),\n          t2 = t * t,\n          t3 = t2 * t,\n          x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n          y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n          mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n          my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n          nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n          ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n          ax = t1 * p1x + t * c1x,\n          ay = t1 * p1y + t * c1y,\n          cx = t1 * c2x + t * p2x,\n          cy = t1 * c2y + t * p2y,\n          alpha = 90 - math.atan2(mx - nx, my - ny) * 180 / PI; // (mx > nx || my < ny) && (alpha += 180);\n\n      return {\n        x: x,\n        y: y,\n        m: {\n          x: mx,\n          y: my\n        },\n        n: {\n          x: nx,\n          y: ny\n        },\n        start: {\n          x: ax,\n          y: ay\n        },\n        end: {\n          x: cx,\n          y: cy\n        },\n        alpha: alpha\n      };\n    }\n\n    function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n      if (!Snap.is(p1x, \"array\")) {\n        p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n      }\n\n      var bbox = curveDim.apply(null, p1x);\n      return box(bbox.min.x, bbox.min.y, bbox.max.x - bbox.min.x, bbox.max.y - bbox.min.y);\n    }\n\n    function isPointInsideBBox(bbox, x, y) {\n      return x >= bbox.x && x <= bbox.x + bbox.width && y >= bbox.y && y <= bbox.y + bbox.height;\n    }\n\n    function isBBoxIntersect(bbox1, bbox2) {\n      bbox1 = box(bbox1);\n      bbox2 = box(bbox2);\n      return isPointInsideBBox(bbox2, bbox1.x, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2) || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x) && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n    }\n\n    function base3(t, p1, p2, p3, p4) {\n      var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n          t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n      return t * t2 - 3 * p1 + 3 * p2;\n    }\n\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n      if (z == null) {\n        z = 1;\n      }\n\n      z = z > 1 ? 1 : z < 0 ? 0 : z;\n      var z2 = z / 2,\n          n = 12,\n          Tvalues = [-.1252, .1252, -.3678, .3678, -.5873, .5873, -.7699, .7699, -.9041, .9041, -.9816, .9816],\n          Cvalues = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472],\n          sum = 0;\n\n      for (var i = 0; i < n; i++) {\n        var ct = z2 * Tvalues[i] + z2,\n            xbase = base3(ct, x1, x2, x3, x4),\n            ybase = base3(ct, y1, y2, y3, y4),\n            comb = xbase * xbase + ybase * ybase;\n        sum += Cvalues[i] * math.sqrt(comb);\n      }\n\n      return z2 * sum;\n    }\n\n    function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n      if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n        return;\n      }\n\n      var t = 1,\n          step = t / 2,\n          t2 = t - step,\n          l,\n          e = .01;\n      l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n\n      while (abs(l - ll) > e) {\n        step /= 2;\n        t2 += (l < ll ? 1 : -1) * step;\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n      }\n\n      return t2;\n    }\n\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n      if (mmax(x1, x2) < mmin(x3, x4) || mmin(x1, x2) > mmax(x3, x4) || mmax(y1, y2) < mmin(y3, y4) || mmin(y1, y2) > mmax(y3, y4)) {\n        return;\n      }\n\n      var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n          ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n          denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n      if (!denominator) {\n        return;\n      }\n\n      var px = nx / denominator,\n          py = ny / denominator,\n          px2 = +px.toFixed(2),\n          py2 = +py.toFixed(2);\n\n      if (px2 < +mmin(x1, x2).toFixed(2) || px2 > +mmax(x1, x2).toFixed(2) || px2 < +mmin(x3, x4).toFixed(2) || px2 > +mmax(x3, x4).toFixed(2) || py2 < +mmin(y1, y2).toFixed(2) || py2 > +mmax(y1, y2).toFixed(2) || py2 < +mmin(y3, y4).toFixed(2) || py2 > +mmax(y3, y4).toFixed(2)) {\n        return;\n      }\n\n      return {\n        x: px,\n        y: py\n      };\n    }\n\n    function inter(bez1, bez2) {\n      return interHelper(bez1, bez2);\n    }\n\n    function interCount(bez1, bez2) {\n      return interHelper(bez1, bez2, 1);\n    }\n\n    function interHelper(bez1, bez2, justCount) {\n      var bbox1 = bezierBBox(bez1),\n          bbox2 = bezierBBox(bez2);\n\n      if (!isBBoxIntersect(bbox1, bbox2)) {\n        return justCount ? 0 : [];\n      }\n\n      var l1 = bezlen.apply(0, bez1),\n          l2 = bezlen.apply(0, bez2),\n          n1 = ~~(l1 / 8),\n          n2 = ~~(l2 / 8),\n          dots1 = [],\n          dots2 = [],\n          xy = {},\n          res = justCount ? 0 : [];\n\n      for (var i = 0; i < n1 + 1; i++) {\n        var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n        dots1.push({\n          x: p.x,\n          y: p.y,\n          t: i / n1\n        });\n      }\n\n      for (i = 0; i < n2 + 1; i++) {\n        p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n        dots2.push({\n          x: p.x,\n          y: p.y,\n          t: i / n2\n        });\n      }\n\n      for (i = 0; i < n1; i++) {\n        for (var j = 0; j < n2; j++) {\n          var di = dots1[i],\n              di1 = dots1[i + 1],\n              dj = dots2[j],\n              dj1 = dots2[j + 1],\n              ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n              cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n              is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n\n          if (is) {\n            if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n              continue;\n            }\n\n            xy[is.x.toFixed(4)] = is.y.toFixed(4);\n            var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n                t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n\n            if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n              if (justCount) {\n                res++;\n              } else {\n                res.push({\n                  x: is.x,\n                  y: is.y,\n                  t1: t1,\n                  t2: t2\n                });\n              }\n            }\n          }\n        }\n      }\n\n      return res;\n    }\n\n    function pathIntersection(path1, path2) {\n      return interPathHelper(path1, path2);\n    }\n\n    function pathIntersectionNumber(path1, path2) {\n      return interPathHelper(path1, path2, 1);\n    }\n\n    function interPathHelper(path1, path2, justCount) {\n      path1 = path2curve(path1);\n      path2 = path2curve(path2);\n      var x1,\n          y1,\n          x2,\n          y2,\n          x1m,\n          y1m,\n          x2m,\n          y2m,\n          bez1,\n          bez2,\n          res = justCount ? 0 : [];\n\n      for (var i = 0, ii = path1.length; i < ii; i++) {\n        var pi = path1[i];\n\n        if (pi[0] == \"M\") {\n          x1 = x1m = pi[1];\n          y1 = y1m = pi[2];\n        } else {\n          if (pi[0] == \"C\") {\n            bez1 = [x1, y1].concat(pi.slice(1));\n            x1 = bez1[6];\n            y1 = bez1[7];\n          } else {\n            bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n            x1 = x1m;\n            y1 = y1m;\n          }\n\n          for (var j = 0, jj = path2.length; j < jj; j++) {\n            var pj = path2[j];\n\n            if (pj[0] == \"M\") {\n              x2 = x2m = pj[1];\n              y2 = y2m = pj[2];\n            } else {\n              if (pj[0] == \"C\") {\n                bez2 = [x2, y2].concat(pj.slice(1));\n                x2 = bez2[6];\n                y2 = bez2[7];\n              } else {\n                bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                x2 = x2m;\n                y2 = y2m;\n              }\n\n              var intr = interHelper(bez1, bez2, justCount);\n\n              if (justCount) {\n                res += intr;\n              } else {\n                for (var k = 0, kk = intr.length; k < kk; k++) {\n                  intr[k].segment1 = i;\n                  intr[k].segment2 = j;\n                  intr[k].bez1 = bez1;\n                  intr[k].bez2 = bez2;\n                }\n\n                res = res.concat(intr);\n              }\n            }\n          }\n        }\n      }\n\n      return res;\n    }\n\n    function isPointInsidePath(path, x, y) {\n      var bbox = pathBBox(path);\n      return isPointInsideBBox(bbox, x, y) && interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n    }\n\n    function pathBBox(path) {\n      var pth = paths(path);\n\n      if (pth.bbox) {\n        return clone(pth.bbox);\n      }\n\n      if (!path) {\n        return box();\n      }\n\n      path = path2curve(path);\n      var x = 0,\n          y = 0,\n          X = [],\n          Y = [],\n          p;\n\n      for (var i = 0, ii = path.length; i < ii; i++) {\n        p = path[i];\n\n        if (p[0] == \"M\") {\n          x = p[1];\n          y = p[2];\n          X.push(x);\n          Y.push(y);\n        } else {\n          var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n          X = X.concat(dim.min.x, dim.max.x);\n          Y = Y.concat(dim.min.y, dim.max.y);\n          x = p[5];\n          y = p[6];\n        }\n      }\n\n      var xmin = mmin.apply(0, X),\n          ymin = mmin.apply(0, Y),\n          xmax = mmax.apply(0, X),\n          ymax = mmax.apply(0, Y),\n          bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n      pth.bbox = clone(bb);\n      return bb;\n    }\n\n    function rectPath(x, y, w, h, r) {\n      if (r) {\n        return [[\"M\", +x + +r, y], [\"l\", w - r * 2, 0], [\"a\", r, r, 0, 0, 1, r, r], [\"l\", 0, h - r * 2], [\"a\", r, r, 0, 0, 1, -r, r], [\"l\", r * 2 - w, 0], [\"a\", r, r, 0, 0, 1, -r, -r], [\"l\", 0, r * 2 - h], [\"a\", r, r, 0, 0, 1, r, -r], [\"z\"]];\n      }\n\n      var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n      res.toString = toString;\n      return res;\n    }\n\n    function ellipsePath(x, y, rx, ry, a) {\n      if (a == null && ry == null) {\n        ry = rx;\n      }\n\n      x = +x;\n      y = +y;\n      rx = +rx;\n      ry = +ry;\n\n      if (a != null) {\n        var rad = Math.PI / 180,\n            x1 = x + rx * Math.cos(-ry * rad),\n            x2 = x + rx * Math.cos(-a * rad),\n            y1 = y + rx * Math.sin(-ry * rad),\n            y2 = y + rx * Math.sin(-a * rad),\n            res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n      } else {\n        res = [[\"M\", x, y], [\"m\", 0, -ry], [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry], [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry], [\"z\"]];\n      }\n\n      res.toString = toString;\n      return res;\n    }\n\n    var unit2px = Snap._unit2px,\n        getPath = {\n      path: function (el) {\n        return el.attr(\"path\");\n      },\n      circle: function (el) {\n        var attr = unit2px(el);\n        return ellipsePath(attr.cx, attr.cy, attr.r);\n      },\n      ellipse: function (el) {\n        var attr = unit2px(el);\n        return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n      },\n      rect: function (el) {\n        var attr = unit2px(el);\n        return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n      },\n      image: function (el) {\n        var attr = unit2px(el);\n        return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n      },\n      line: function (el) {\n        return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n      },\n      polyline: function (el) {\n        return \"M\" + el.attr(\"points\");\n      },\n      polygon: function (el) {\n        return \"M\" + el.attr(\"points\") + \"z\";\n      },\n      deflt: function (el) {\n        var bbox = el.node.getBBox();\n        return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n      }\n    };\n\n    function pathToRelative(pathArray) {\n      var pth = paths(pathArray),\n          lowerCase = String.prototype.toLowerCase;\n\n      if (pth.rel) {\n        return pathClone(pth.rel);\n      }\n\n      if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n        pathArray = Snap.parsePathString(pathArray);\n      }\n\n      var res = [],\n          x = 0,\n          y = 0,\n          mx = 0,\n          my = 0,\n          start = 0;\n\n      if (pathArray[0][0] == \"M\") {\n        x = pathArray[0][1];\n        y = pathArray[0][2];\n        mx = x;\n        my = y;\n        start++;\n        res.push([\"M\", x, y]);\n      }\n\n      for (var i = start, ii = pathArray.length; i < ii; i++) {\n        var r = res[i] = [],\n            pa = pathArray[i];\n\n        if (pa[0] != lowerCase.call(pa[0])) {\n          r[0] = lowerCase.call(pa[0]);\n\n          switch (r[0]) {\n            case \"a\":\n              r[1] = pa[1];\n              r[2] = pa[2];\n              r[3] = pa[3];\n              r[4] = pa[4];\n              r[5] = pa[5];\n              r[6] = +(pa[6] - x).toFixed(3);\n              r[7] = +(pa[7] - y).toFixed(3);\n              break;\n\n            case \"v\":\n              r[1] = +(pa[1] - y).toFixed(3);\n              break;\n\n            case \"m\":\n              mx = pa[1];\n              my = pa[2];\n\n            default:\n              for (var j = 1, jj = pa.length; j < jj; j++) {\n                r[j] = +(pa[j] - (j % 2 ? x : y)).toFixed(3);\n              }\n\n          }\n        } else {\n          r = res[i] = [];\n\n          if (pa[0] == \"m\") {\n            mx = pa[1] + x;\n            my = pa[2] + y;\n          }\n\n          for (var k = 0, kk = pa.length; k < kk; k++) {\n            res[i][k] = pa[k];\n          }\n        }\n\n        var len = res[i].length;\n\n        switch (res[i][0]) {\n          case \"z\":\n            x = mx;\n            y = my;\n            break;\n\n          case \"h\":\n            x += +res[i][len - 1];\n            break;\n\n          case \"v\":\n            y += +res[i][len - 1];\n            break;\n\n          default:\n            x += +res[i][len - 2];\n            y += +res[i][len - 1];\n        }\n      }\n\n      res.toString = toString;\n      pth.rel = pathClone(res);\n      return res;\n    }\n\n    function pathToAbsolute(pathArray) {\n      var pth = paths(pathArray);\n\n      if (pth.abs) {\n        return pathClone(pth.abs);\n      }\n\n      if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) {\n        // rough assumption\n        pathArray = Snap.parsePathString(pathArray);\n      }\n\n      if (!pathArray || !pathArray.length) {\n        return [[\"M\", 0, 0]];\n      }\n\n      var res = [],\n          x = 0,\n          y = 0,\n          mx = 0,\n          my = 0,\n          start = 0,\n          pa0;\n\n      if (pathArray[0][0] == \"M\") {\n        x = +pathArray[0][1];\n        y = +pathArray[0][2];\n        mx = x;\n        my = y;\n        start++;\n        res[0] = [\"M\", x, y];\n      }\n\n      var crz = pathArray.length == 3 && pathArray[0][0] == \"M\" && pathArray[1][0].toUpperCase() == \"R\" && pathArray[2][0].toUpperCase() == \"Z\";\n\n      for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n        res.push(r = []);\n        pa = pathArray[i];\n        pa0 = pa[0];\n\n        if (pa0 != pa0.toUpperCase()) {\n          r[0] = pa0.toUpperCase();\n\n          switch (r[0]) {\n            case \"A\":\n              r[1] = pa[1];\n              r[2] = pa[2];\n              r[3] = pa[3];\n              r[4] = pa[4];\n              r[5] = pa[5];\n              r[6] = +pa[6] + x;\n              r[7] = +pa[7] + y;\n              break;\n\n            case \"V\":\n              r[1] = +pa[1] + y;\n              break;\n\n            case \"H\":\n              r[1] = +pa[1] + x;\n              break;\n\n            case \"R\":\n              var dots = [x, y].concat(pa.slice(1));\n\n              for (var j = 2, jj = dots.length; j < jj; j++) {\n                dots[j] = +dots[j] + x;\n                dots[++j] = +dots[j] + y;\n              }\n\n              res.pop();\n              res = res.concat(catmullRom2bezier(dots, crz));\n              break;\n\n            case \"O\":\n              res.pop();\n              dots = ellipsePath(x, y, pa[1], pa[2]);\n              dots.push(dots[0]);\n              res = res.concat(dots);\n              break;\n\n            case \"U\":\n              res.pop();\n              res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n              r = [\"U\"].concat(res[res.length - 1].slice(-2));\n              break;\n\n            case \"M\":\n              mx = +pa[1] + x;\n              my = +pa[2] + y;\n\n            default:\n              for (j = 1, jj = pa.length; j < jj; j++) {\n                r[j] = +pa[j] + (j % 2 ? x : y);\n              }\n\n          }\n        } else if (pa0 == \"R\") {\n          dots = [x, y].concat(pa.slice(1));\n          res.pop();\n          res = res.concat(catmullRom2bezier(dots, crz));\n          r = [\"R\"].concat(pa.slice(-2));\n        } else if (pa0 == \"O\") {\n          res.pop();\n          dots = ellipsePath(x, y, pa[1], pa[2]);\n          dots.push(dots[0]);\n          res = res.concat(dots);\n        } else if (pa0 == \"U\") {\n          res.pop();\n          res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n          r = [\"U\"].concat(res[res.length - 1].slice(-2));\n        } else {\n          for (var k = 0, kk = pa.length; k < kk; k++) {\n            r[k] = pa[k];\n          }\n        }\n\n        pa0 = pa0.toUpperCase();\n\n        if (pa0 != \"O\") {\n          switch (r[0]) {\n            case \"Z\":\n              x = +mx;\n              y = +my;\n              break;\n\n            case \"H\":\n              x = r[1];\n              break;\n\n            case \"V\":\n              y = r[1];\n              break;\n\n            case \"M\":\n              mx = r[r.length - 2];\n              my = r[r.length - 1];\n\n            default:\n              x = r[r.length - 2];\n              y = r[r.length - 1];\n          }\n        }\n      }\n\n      res.toString = toString;\n      pth.abs = pathClone(res);\n      return res;\n    }\n\n    function l2c(x1, y1, x2, y2) {\n      return [x1, y1, x2, y2, x2, y2];\n    }\n\n    function q2c(x1, y1, ax, ay, x2, y2) {\n      var _13 = 1 / 3,\n          _23 = 2 / 3;\n\n      return [_13 * x1 + _23 * ax, _13 * y1 + _23 * ay, _13 * x2 + _23 * ax, _13 * y2 + _23 * ay, x2, y2];\n    }\n\n    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n      // for more information of where this math came from visit:\n      // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n      var _120 = PI * 120 / 180,\n          rad = PI / 180 * (+angle || 0),\n          res = [],\n          xy,\n          rotate = Snap._.cacher(function (x, y, rad) {\n        var X = x * math.cos(rad) - y * math.sin(rad),\n            Y = x * math.sin(rad) + y * math.cos(rad);\n        return {\n          x: X,\n          y: Y\n        };\n      });\n\n      if (!recursive) {\n        xy = rotate(x1, y1, -rad);\n        x1 = xy.x;\n        y1 = xy.y;\n        xy = rotate(x2, y2, -rad);\n        x2 = xy.x;\n        y2 = xy.y;\n        var cos = math.cos(PI / 180 * angle),\n            sin = math.sin(PI / 180 * angle),\n            x = (x1 - x2) / 2,\n            y = (y1 - y2) / 2;\n        var h = x * x / (rx * rx) + y * y / (ry * ry);\n\n        if (h > 1) {\n          h = math.sqrt(h);\n          rx = h * rx;\n          ry = h * ry;\n        }\n\n        var rx2 = rx * rx,\n            ry2 = ry * ry,\n            k = (large_arc_flag == sweep_flag ? -1 : 1) * math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n            cx = k * rx * y / ry + (x1 + x2) / 2,\n            cy = k * -ry * x / rx + (y1 + y2) / 2,\n            f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n            f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n        f1 = x1 < cx ? PI - f1 : f1;\n        f2 = x2 < cx ? PI - f2 : f2;\n        f1 < 0 && (f1 = PI * 2 + f1);\n        f2 < 0 && (f2 = PI * 2 + f2);\n\n        if (sweep_flag && f1 > f2) {\n          f1 = f1 - PI * 2;\n        }\n\n        if (!sweep_flag && f2 > f1) {\n          f2 = f2 - PI * 2;\n        }\n      } else {\n        f1 = recursive[0];\n        f2 = recursive[1];\n        cx = recursive[2];\n        cy = recursive[3];\n      }\n\n      var df = f2 - f1;\n\n      if (abs(df) > _120) {\n        var f2old = f2,\n            x2old = x2,\n            y2old = y2;\n        f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n        x2 = cx + rx * math.cos(f2);\n        y2 = cy + ry * math.sin(f2);\n        res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n      }\n\n      df = f2 - f1;\n      var c1 = math.cos(f1),\n          s1 = math.sin(f1),\n          c2 = math.cos(f2),\n          s2 = math.sin(f2),\n          t = math.tan(df / 4),\n          hx = 4 / 3 * rx * t,\n          hy = 4 / 3 * ry * t,\n          m1 = [x1, y1],\n          m2 = [x1 + hx * s1, y1 - hy * c1],\n          m3 = [x2 + hx * s2, y2 - hy * c2],\n          m4 = [x2, y2];\n      m2[0] = 2 * m1[0] - m2[0];\n      m2[1] = 2 * m1[1] - m2[1];\n\n      if (recursive) {\n        return [m2, m3, m4].concat(res);\n      } else {\n        res = [m2, m3, m4].concat(res).join().split(\",\");\n        var newres = [];\n\n        for (var i = 0, ii = res.length; i < ii; i++) {\n          newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n        }\n\n        return newres;\n      }\n    }\n\n    function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n      var t1 = 1 - t;\n      return {\n        x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n        y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n      };\n    } // Returns bounding box of cubic bezier curve.\n    // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // Original version: NISHIO Hirokazu\n    // Modifications: https://github.com/timo22345\n\n\n    function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n      var tvalues = [],\n          bounds = [[], []],\n          a,\n          b,\n          c,\n          t,\n          t1,\n          t2,\n          b2ac,\n          sqrtb2ac;\n\n      for (var i = 0; i < 2; ++i) {\n        if (i == 0) {\n          b = 6 * x0 - 12 * x1 + 6 * x2;\n          a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n          c = 3 * x1 - 3 * x0;\n        } else {\n          b = 6 * y0 - 12 * y1 + 6 * y2;\n          a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n          c = 3 * y1 - 3 * y0;\n        }\n\n        if (abs(a) < 1e-12) {\n          if (abs(b) < 1e-12) {\n            continue;\n          }\n\n          t = -c / b;\n\n          if (0 < t && t < 1) {\n            tvalues.push(t);\n          }\n\n          continue;\n        }\n\n        b2ac = b * b - 4 * c * a;\n        sqrtb2ac = math.sqrt(b2ac);\n\n        if (b2ac < 0) {\n          continue;\n        }\n\n        t1 = (-b + sqrtb2ac) / (2 * a);\n\n        if (0 < t1 && t1 < 1) {\n          tvalues.push(t1);\n        }\n\n        t2 = (-b - sqrtb2ac) / (2 * a);\n\n        if (0 < t2 && t2 < 1) {\n          tvalues.push(t2);\n        }\n      }\n\n      var x,\n          y,\n          j = tvalues.length,\n          jlen = j,\n          mt;\n\n      while (j--) {\n        t = tvalues[j];\n        mt = 1 - t;\n        bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n        bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n      }\n\n      bounds[0][jlen] = x0;\n      bounds[1][jlen] = y0;\n      bounds[0][jlen + 1] = x3;\n      bounds[1][jlen + 1] = y3;\n      bounds[0].length = bounds[1].length = jlen + 2;\n      return {\n        min: {\n          x: mmin.apply(0, bounds[0]),\n          y: mmin.apply(0, bounds[1])\n        },\n        max: {\n          x: mmax.apply(0, bounds[0]),\n          y: mmax.apply(0, bounds[1])\n        }\n      };\n    }\n\n    function path2curve(path, path2) {\n      var pth = !path2 && paths(path);\n\n      if (!path2 && pth.curve) {\n        return pathClone(pth.curve);\n      }\n\n      var p = pathToAbsolute(path),\n          p2 = path2 && pathToAbsolute(path2),\n          attrs = {\n        x: 0,\n        y: 0,\n        bx: 0,\n        by: 0,\n        X: 0,\n        Y: 0,\n        qx: null,\n        qy: null\n      },\n          attrs2 = {\n        x: 0,\n        y: 0,\n        bx: 0,\n        by: 0,\n        X: 0,\n        Y: 0,\n        qx: null,\n        qy: null\n      },\n          processPath = function (path, d, pcom) {\n        var nx, ny;\n\n        if (!path) {\n          return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n        }\n\n        !(path[0] in {\n          T: 1,\n          Q: 1\n        }) && (d.qx = d.qy = null);\n\n        switch (path[0]) {\n          case \"M\":\n            d.X = path[1];\n            d.Y = path[2];\n            break;\n\n          case \"A\":\n            path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n            break;\n\n          case \"S\":\n            if (pcom == \"C\" || pcom == \"S\") {\n              // In \"S\" case we have to take into account, if the previous command is C/S.\n              nx = d.x * 2 - d.bx; // And reflect the previous\n\n              ny = d.y * 2 - d.by; // command's control point relative to the current point.\n            } else {\n              // or some else or nothing\n              nx = d.x;\n              ny = d.y;\n            }\n\n            path = [\"C\", nx, ny].concat(path.slice(1));\n            break;\n\n          case \"T\":\n            if (pcom == \"Q\" || pcom == \"T\") {\n              // In \"T\" case we have to take into account, if the previous command is Q/T.\n              d.qx = d.x * 2 - d.qx; // And make a reflection similar\n\n              d.qy = d.y * 2 - d.qy; // to case \"S\".\n            } else {\n              // or something else or nothing\n              d.qx = d.x;\n              d.qy = d.y;\n            }\n\n            path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n            break;\n\n          case \"Q\":\n            d.qx = path[1];\n            d.qy = path[2];\n            path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n            break;\n\n          case \"L\":\n            path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n            break;\n\n          case \"H\":\n            path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n            break;\n\n          case \"V\":\n            path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n            break;\n\n          case \"Z\":\n            path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n            break;\n        }\n\n        return path;\n      },\n          fixArc = function (pp, i) {\n        if (pp[i].length > 7) {\n          pp[i].shift();\n          var pi = pp[i];\n\n          while (pi.length) {\n            pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n\n            p2 && (pcoms2[i] = \"A\"); // the same as above\n\n            pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n          }\n\n          pp.splice(i, 1);\n          ii = mmax(p.length, p2 && p2.length || 0);\n        }\n      },\n          fixM = function (path1, path2, a1, a2, i) {\n        if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n          path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n          a1.bx = 0;\n          a1.by = 0;\n          a1.x = path1[i][1];\n          a1.y = path1[i][2];\n          ii = mmax(p.length, p2 && p2.length || 0);\n        }\n      },\n          pcoms1 = [],\n          // path commands of original path p\n      pcoms2 = [],\n          // path commands of original path p2\n      pfirst = \"\",\n          // temporary holder for original path command\n      pcom = \"\"; // holder for previous path command of original path\n\n\n      for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n        p[i] && (pfirst = p[i][0]); // save current path command\n\n        if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n          {\n            pcoms1[i] = pfirst; // Save current path command\n\n            i && (pcom = pcoms1[i - 1]); // Get previous path command pcom\n          }\n\n        p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n        if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n        // which may produce multiple C:s\n        // so we have to make sure that C is also C in original path\n\n        fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n        if (p2) {\n          // the same procedures is done to p2\n          p2[i] && (pfirst = p2[i][0]);\n\n          if (pfirst != \"C\") {\n            pcoms2[i] = pfirst;\n            i && (pcom = pcoms2[i - 1]);\n          }\n\n          p2[i] = processPath(p2[i], attrs2, pcom);\n\n          if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n            pcoms2[i] = \"C\";\n          }\n\n          fixArc(p2, i);\n        }\n\n        fixM(p, p2, attrs, attrs2, i);\n        fixM(p2, p, attrs2, attrs, i);\n        var seg = p[i],\n            seg2 = p2 && p2[i],\n            seglen = seg.length,\n            seg2len = p2 && seg2.length;\n        attrs.x = seg[seglen - 2];\n        attrs.y = seg[seglen - 1];\n        attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n        attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n        attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n        attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n        attrs2.x = p2 && seg2[seg2len - 2];\n        attrs2.y = p2 && seg2[seg2len - 1];\n      }\n\n      if (!p2) {\n        pth.curve = pathClone(p);\n      }\n\n      return p2 ? [p, p2] : p;\n    }\n\n    function mapPath(path, matrix) {\n      if (!matrix) {\n        return path;\n      }\n\n      var x, y, i, j, ii, jj, pathi;\n      path = path2curve(path);\n\n      for (i = 0, ii = path.length; i < ii; i++) {\n        pathi = path[i];\n\n        for (j = 1, jj = pathi.length; j < jj; j += 2) {\n          x = matrix.x(pathi[j], pathi[j + 1]);\n          y = matrix.y(pathi[j], pathi[j + 1]);\n          pathi[j] = x;\n          pathi[j + 1] = y;\n        }\n      }\n\n      return path;\n    } // http://schepers.cc/getting-to-the-point\n\n\n    function catmullRom2bezier(crp, z) {\n      var d = [];\n\n      for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n        var p = [{\n          x: +crp[i - 2],\n          y: +crp[i - 1]\n        }, {\n          x: +crp[i],\n          y: +crp[i + 1]\n        }, {\n          x: +crp[i + 2],\n          y: +crp[i + 3]\n        }, {\n          x: +crp[i + 4],\n          y: +crp[i + 5]\n        }];\n\n        if (z) {\n          if (!i) {\n            p[0] = {\n              x: +crp[iLen - 2],\n              y: +crp[iLen - 1]\n            };\n          } else if (iLen - 4 == i) {\n            p[3] = {\n              x: +crp[0],\n              y: +crp[1]\n            };\n          } else if (iLen - 2 == i) {\n            p[2] = {\n              x: +crp[0],\n              y: +crp[1]\n            };\n            p[3] = {\n              x: +crp[2],\n              y: +crp[3]\n            };\n          }\n        } else {\n          if (iLen - 4 == i) {\n            p[3] = p[2];\n          } else if (!i) {\n            p[0] = {\n              x: +crp[i],\n              y: +crp[i + 1]\n            };\n          }\n        }\n\n        d.push([\"C\", (-p[0].x + 6 * p[1].x + p[2].x) / 6, (-p[0].y + 6 * p[1].y + p[2].y) / 6, (p[1].x + 6 * p[2].x - p[3].x) / 6, (p[1].y + 6 * p[2].y - p[3].y) / 6, p[2].x, p[2].y]);\n      }\n\n      return d;\n    } // export\n\n\n    Snap.path = paths;\n    /*\\\n     * Snap.path.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the given path in pixels\n     **\n     - path (string) SVG path string\n     **\n     = (number) length\n    \\*/\n\n    Snap.path.getTotalLength = getTotalLength;\n    /*\\\n     * Snap.path.getPointAtLength\n     [ method ]\n     **\n     * Returns the coordinates of the point located at the given length along the given path\n     **\n     - path (string) SVG path string\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n\n    Snap.path.getPointAtLength = getPointAtLength;\n    /*\\\n     * Snap.path.getSubpath\n     [ method ]\n     **\n     * Returns the subpath of a given path between given start and end lengths\n     **\n     - path (string) SVG path string\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n\n    Snap.path.getSubpath = function (path, from, to) {\n      if (this.getTotalLength(path) - to < 1e-6) {\n        return getSubpathsAtLength(path, from).end;\n      }\n\n      var a = getSubpathsAtLength(path, to, 1);\n      return from ? getSubpathsAtLength(a, from).end : a;\n    };\n    /*\\\n     * Element.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the path in pixels (only works for `path` elements)\n     = (number) length\n    \\*/\n\n\n    elproto.getTotalLength = function () {\n      if (this.node.getTotalLength) {\n        return this.node.getTotalLength();\n      }\n    }; // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n\n    /*\\\n     * Element.getPointAtLength\n     [ method ]\n     **\n     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n     **\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n\n\n    elproto.getPointAtLength = function (length) {\n      return getPointAtLength(this.attr(\"d\"), length);\n    }; // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n\n    /*\\\n     * Element.getSubpath\n     [ method ]\n     **\n     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n     **\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n\n\n    elproto.getSubpath = function (from, to) {\n      return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n    };\n\n    Snap._.box = box;\n    /*\\\n     * Snap.path.findDotsAtSegment\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds dot coordinates on the given cubic beziér curve at the given t\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     - t (number) position on the curve (0..1)\n     = (object) point information in format:\n     o {\n     o     x: (number) x coordinate of the point,\n     o     y: (number) y coordinate of the point,\n     o     m: {\n     o         x: (number) x coordinate of the left anchor,\n     o         y: (number) y coordinate of the left anchor\n     o     },\n     o     n: {\n     o         x: (number) x coordinate of the right anchor,\n     o         y: (number) y coordinate of the right anchor\n     o     },\n     o     start: {\n     o         x: (number) x coordinate of the start of the curve,\n     o         y: (number) y coordinate of the start of the curve\n     o     },\n     o     end: {\n     o         x: (number) x coordinate of the end of the curve,\n     o         y: (number) y coordinate of the end of the curve\n     o     },\n     o     alpha: (number) angle of the curve derivative at the point\n     o }\n    \\*/\n\n    Snap.path.findDotsAtSegment = findDotsAtSegment;\n    /*\\\n     * Snap.path.bezierBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given cubic beziér curve\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     * or\n     - bez (array) array of six points for beziér curve\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n\n    Snap.path.bezierBBox = bezierBBox;\n    /*\\\n     * Snap.path.isPointInsideBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside bounding box\n     - bbox (string) bounding box\n     - x (string) x coordinate of the point\n     - y (string) y coordinate of the point\n     = (boolean) `true` if point is inside\n    \\*/\n\n    Snap.path.isPointInsideBBox = isPointInsideBBox;\n\n    Snap.closest = function (x, y, X, Y) {\n      var r = 100,\n          b = box(x - r / 2, y - r / 2, r, r),\n          inside = [],\n          getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n        return {\n          x: X[i].x,\n          y: X[i].y\n        };\n      } : function (i) {\n        return {\n          x: X[i],\n          y: Y[i]\n        };\n      },\n          found = 0;\n\n      while (r <= 1e6 && !found) {\n        for (var i = 0, ii = X.length; i < ii; i++) {\n          var xy = getter(i);\n\n          if (isPointInsideBBox(b, xy.x, xy.y)) {\n            found++;\n            inside.push(xy);\n            break;\n          }\n        }\n\n        if (!found) {\n          r *= 2;\n          b = box(x - r / 2, y - r / 2, r, r);\n        }\n      }\n\n      if (r == 1e6) {\n        return;\n      }\n\n      var len = Infinity,\n          res;\n\n      for (i = 0, ii = inside.length; i < ii; i++) {\n        var l = Snap.len(x, y, inside[i].x, inside[i].y);\n\n        if (len > l) {\n          len = l;\n          inside[i].len = l;\n          res = inside[i];\n        }\n      }\n\n      return res;\n    };\n    /*\\\n     * Snap.path.isBBoxIntersect\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if two bounding boxes intersect\n     - bbox1 (string) first bounding box\n     - bbox2 (string) second bounding box\n     = (boolean) `true` if bounding boxes intersect\n    \\*/\n\n\n    Snap.path.isBBoxIntersect = isBBoxIntersect;\n    /*\\\n     * Snap.path.intersection\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds intersections of two paths\n     - path1 (string) path string\n     - path2 (string) path string\n     = (array) dots of intersection\n     o [\n     o     {\n     o         x: (number) x coordinate of the point,\n     o         y: (number) y coordinate of the point,\n     o         t1: (number) t value for segment of path1,\n     o         t2: (number) t value for segment of path2,\n     o         segment1: (number) order number for segment of path1,\n     o         segment2: (number) order number for segment of path2,\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n     o     }\n     o ]\n    \\*/\n\n    Snap.path.intersection = pathIntersection;\n    Snap.path.intersectionNumber = pathIntersectionNumber;\n    /*\\\n     * Snap.path.isPointInside\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside a given closed path.\n     *\n     * Note: fill mode doesn’t affect the result of this method.\n     - path (string) path string\n     - x (number) x of the point\n     - y (number) y of the point\n     = (boolean) `true` if point is inside the path\n    \\*/\n\n    Snap.path.isPointInside = isPointInsidePath;\n    /*\\\n     * Snap.path.getBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given path\n     - path (string) path string\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n\n    Snap.path.getBBox = pathBBox;\n    Snap.path.get = getPath;\n    /*\\\n     * Snap.path.toRelative\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into relative values\n     - path (string) path string\n     = (array) path string\n    \\*/\n\n    Snap.path.toRelative = pathToRelative;\n    /*\\\n     * Snap.path.toAbsolute\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into absolute values\n     - path (string) path string\n     = (array) path string\n    \\*/\n\n    Snap.path.toAbsolute = pathToAbsolute;\n    /*\\\n     * Snap.path.toCubic\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to a new path where all segments are cubic beziér curves\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments\n    \\*/\n\n    Snap.path.toCubic = path2curve;\n    /*\\\n     * Snap.path.map\n     [ method ]\n     **\n     * Transform the path string with the given matrix\n     - path (string) path string\n     - matrix (object) see @Matrix\n     = (string) transformed path string\n    \\*/\n\n    Snap.path.map = mapPath;\n    Snap.path.toString = toString;\n    Snap.path.clone = pathClone;\n  }); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n  // \n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  // \n  // http://www.apache.org/licenses/LICENSE-2.0\n  // \n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n\n  Snap.plugin(function (Snap, Element, Paper, glob) {\n    var mmax = Math.max,\n        mmin = Math.min; // Set\n\n    var Set = function (items) {\n      this.items = [];\n      this.bindings = {};\n      this.length = 0;\n      this.type = \"set\";\n\n      if (items) {\n        for (var i = 0, ii = items.length; i < ii; i++) {\n          if (items[i]) {\n            this[this.items.length] = this.items[this.items.length] = items[i];\n            this.length++;\n          }\n        }\n      }\n    },\n        setproto = Set.prototype;\n    /*\\\n     * Set.push\n     [ method ]\n     **\n     * Adds each argument to the current set\n     = (object) original element\n    \\*/\n\n\n    setproto.push = function () {\n      var item, len;\n\n      for (var i = 0, ii = arguments.length; i < ii; i++) {\n        item = arguments[i];\n\n        if (item) {\n          len = this.items.length;\n          this[len] = this.items[len] = item;\n          this.length++;\n        }\n      }\n\n      return this;\n    };\n    /*\\\n     * Set.pop\n     [ method ]\n     **\n     * Removes last element and returns it\n     = (object) element\n    \\*/\n\n\n    setproto.pop = function () {\n      this.length && delete this[this.length--];\n      return this.items.pop();\n    };\n    /*\\\n     * Set.forEach\n     [ method ]\n     **\n     * Executes given function for each element in the set\n     *\n     * If the function returns `false`, the loop stops running.\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Set object\n    \\*/\n\n\n    setproto.forEach = function (callback, thisArg) {\n      for (var i = 0, ii = this.items.length; i < ii; i++) {\n        if (callback.call(thisArg, this.items[i], i) === false) {\n          return this;\n        }\n      }\n\n      return this;\n    };\n    /*\\\n     * Set.animate\n     [ method ]\n     **\n     * Animates each element in set in sync.\n     *\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     * or\n     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n     > Usage\n     | // animate all elements in set to radius 10\n     | set.animate({r: 10}, 500, mina.easein);\n     | // or\n     | // animate first element to radius 10, but second to radius 20 and in different time\n     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n     = (Element) the current element\n    \\*/\n\n\n    setproto.animate = function (attrs, ms, easing, callback) {\n      if (typeof easing == \"function\" && !easing.length) {\n        callback = easing;\n        easing = mina.linear;\n      }\n\n      if (attrs instanceof Snap._.Animation) {\n        callback = attrs.callback;\n        easing = attrs.easing;\n        ms = easing.dur;\n        attrs = attrs.attr;\n      }\n\n      var args = arguments;\n\n      if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n        var each = true;\n      }\n\n      var begin,\n          handler = function () {\n        if (begin) {\n          this.b = begin;\n        } else {\n          begin = this.b;\n        }\n      },\n          cb = 0,\n          set = this,\n          callbacker = callback && function () {\n        if (++cb == set.length) {\n          callback.call(this);\n        }\n      };\n\n      return this.forEach(function (el, i) {\n        eve.once(\"snap.animcreated.\" + el.id, handler);\n\n        if (each) {\n          args[i] && el.animate.apply(el, args[i]);\n        } else {\n          el.animate(attrs, ms, easing, callbacker);\n        }\n      });\n    };\n\n    setproto.remove = function () {\n      while (this.length) {\n        this.pop().remove();\n      }\n\n      return this;\n    };\n    /*\\\n     * Set.bind\n     [ method ]\n     **\n     * Specifies how to handle a specific attribute when applied\n     * to a set.\n     *\n     **\n     - attr (string) attribute name\n     - callback (function) function to run\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     - eattr (string) attribute on the element to bind the attribute to\n     = (object) Set object\n    \\*/\n\n\n    setproto.bind = function (attr, a, b) {\n      var data = {};\n\n      if (typeof a == \"function\") {\n        this.bindings[attr] = a;\n      } else {\n        var aname = b || attr;\n\n        this.bindings[attr] = function (v) {\n          data[aname] = v;\n          a.attr(data);\n        };\n      }\n\n      return this;\n    };\n\n    setproto.attr = function (value) {\n      var unbound = {};\n\n      for (var k in value) {\n        if (this.bindings[k]) {\n          this.bindings[k](value[k]);\n        } else {\n          unbound[k] = value[k];\n        }\n      }\n\n      for (var i = 0, ii = this.items.length; i < ii; i++) {\n        this.items[i].attr(unbound);\n      }\n\n      return this;\n    };\n    /*\\\n     * Set.clear\n     [ method ]\n     **\n     * Removes all elements from the set\n    \\*/\n\n\n    setproto.clear = function () {\n      while (this.length) {\n        this.pop();\n      }\n    };\n    /*\\\n     * Set.splice\n     [ method ]\n     **\n     * Removes range of elements from the set\n     **\n     - index (number) position of the deletion\n     - count (number) number of element to remove\n     - insertion… (object) #optional elements to insert\n     = (object) set elements that were deleted\n    \\*/\n\n\n    setproto.splice = function (index, count, insertion) {\n      index = index < 0 ? mmax(this.length + index, 0) : index;\n      count = mmax(0, mmin(this.length - index, count));\n      var tail = [],\n          todel = [],\n          args = [],\n          i;\n\n      for (i = 2; i < arguments.length; i++) {\n        args.push(arguments[i]);\n      }\n\n      for (i = 0; i < count; i++) {\n        todel.push(this[index + i]);\n      }\n\n      for (; i < this.length - index; i++) {\n        tail.push(this[index + i]);\n      }\n\n      var arglen = args.length;\n\n      for (i = 0; i < arglen + tail.length; i++) {\n        this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n      }\n\n      i = this.items.length = this.length -= count - arglen;\n\n      while (this[i]) {\n        delete this[i++];\n      }\n\n      return new Set(todel);\n    };\n    /*\\\n     * Set.exclude\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     - element (object) element to remove\n     = (boolean) `true` if object was found and removed from the set\n    \\*/\n\n\n    setproto.exclude = function (el) {\n      for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n        this.splice(i, 1);\n        return true;\n      }\n\n      return false;\n    };\n\n    setproto.insertAfter = function (el) {\n      var i = this.items.length;\n\n      while (i--) {\n        this.items[i].insertAfter(el);\n      }\n\n      return this;\n    };\n\n    setproto.getBBox = function () {\n      var x = [],\n          y = [],\n          x2 = [],\n          y2 = [];\n\n      for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n        var box = this.items[i].getBBox();\n        x.push(box.x);\n        y.push(box.y);\n        x2.push(box.x + box.width);\n        y2.push(box.y + box.height);\n      }\n\n      x = mmin.apply(0, x);\n      y = mmin.apply(0, y);\n      x2 = mmax.apply(0, x2);\n      y2 = mmax.apply(0, y2);\n      return {\n        x: x,\n        y: y,\n        x2: x2,\n        y2: y2,\n        width: x2 - x,\n        height: y2 - y,\n        cx: x + (x2 - x) / 2,\n        cy: y + (y2 - y) / 2\n      };\n    };\n\n    setproto.clone = function (s) {\n      s = new Set();\n\n      for (var i = 0, ii = this.items.length; i < ii; i++) {\n        s.push(this.items[i].clone());\n      }\n\n      return s;\n    };\n\n    setproto.toString = function () {\n      return \"Snap\\u2018s set\";\n    };\n\n    setproto.type = \"set\"; // export\n\n    Snap.Set = Set;\n\n    Snap.set = function () {\n      var set = new Set();\n\n      if (arguments.length) {\n        set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n      }\n\n      return set;\n    };\n  }); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n  // \n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  // \n  // http://www.apache.org/licenses/LICENSE-2.0\n  // \n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n\n  Snap.plugin(function (Snap, Element, Paper, glob) {\n    var names = {},\n        reUnit = /[a-z]+$/i,\n        Str = String;\n    names.stroke = names.fill = \"colour\";\n\n    function getEmpty(item) {\n      var l = item[0];\n\n      switch (l.toLowerCase()) {\n        case \"t\":\n          return [l, 0, 0];\n\n        case \"m\":\n          return [l, 1, 0, 0, 1, 0, 0];\n\n        case \"r\":\n          if (item.length == 4) {\n            return [l, 0, item[2], item[3]];\n          } else {\n            return [l, 0];\n          }\n\n        case \"s\":\n          if (item.length == 5) {\n            return [l, 1, 1, item[3], item[4]];\n          } else if (item.length == 3) {\n            return [l, 1, 1];\n          } else {\n            return [l, 1];\n          }\n\n      }\n    }\n\n    function equaliseTransform(t1, t2, getBBox) {\n      t2 = Str(t2).replace(/\\.{3}|\\u2026/g, t1);\n      t1 = Snap.parseTransformString(t1) || [];\n      t2 = Snap.parseTransformString(t2) || [];\n      var maxlength = Math.max(t1.length, t2.length),\n          from = [],\n          to = [],\n          i = 0,\n          j,\n          jj,\n          tt1,\n          tt2;\n\n      for (; i < maxlength; i++) {\n        tt1 = t1[i] || getEmpty(t2[i]);\n        tt2 = t2[i] || getEmpty(tt1);\n\n        if (tt1[0] != tt2[0] || tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3]) || tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4])) {\n          t1 = Snap._.transform2matrix(t1, getBBox());\n          t2 = Snap._.transform2matrix(t2, getBBox());\n          from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n          to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n          break;\n        }\n\n        from[i] = [];\n        to[i] = [];\n\n        for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n          j in tt1 && (from[i][j] = tt1[j]);\n          j in tt2 && (to[i][j] = tt2[j]);\n        }\n      }\n\n      return {\n        from: path2array(from),\n        to: path2array(to),\n        f: getPath(from)\n      };\n    }\n\n    function getNumber(val) {\n      return val;\n    }\n\n    function getUnit(unit) {\n      return function (val) {\n        return +val.toFixed(3) + unit;\n      };\n    }\n\n    function getViewBox(val) {\n      return val.join(\" \");\n    }\n\n    function getColour(clr) {\n      return Snap.rgb(clr[0], clr[1], clr[2]);\n    }\n\n    function getPath(path) {\n      var k = 0,\n          i,\n          ii,\n          j,\n          jj,\n          out,\n          a,\n          b = [];\n\n      for (i = 0, ii = path.length; i < ii; i++) {\n        out = \"[\";\n        a = ['\"' + path[i][0] + '\"'];\n\n        for (j = 1, jj = path[i].length; j < jj; j++) {\n          a[j] = \"val[\" + k++ + \"]\";\n        }\n\n        out += a + \"]\";\n        b[i] = out;\n      }\n\n      return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n    }\n\n    function path2array(path) {\n      var out = [];\n\n      for (var i = 0, ii = path.length; i < ii; i++) {\n        for (var j = 1, jj = path[i].length; j < jj; j++) {\n          out.push(path[i][j]);\n        }\n      }\n\n      return out;\n    }\n\n    function isNumeric(obj) {\n      return isFinite(parseFloat(obj));\n    }\n\n    function arrayEqual(arr1, arr2) {\n      if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n        return false;\n      }\n\n      return arr1.toString() == arr2.toString();\n    }\n\n    Element.prototype.equal = function (name, b) {\n      return eve(\"snap.util.equal\", this, name, b).firstDefined();\n    };\n\n    eve.on(\"snap.util.equal\", function (name, b) {\n      var A,\n          B,\n          a = Str(this.attr(name) || \"\"),\n          el = this;\n\n      if (isNumeric(a) && isNumeric(b)) {\n        return {\n          from: parseFloat(a),\n          to: parseFloat(b),\n          f: getNumber\n        };\n      }\n\n      if (names[name] == \"colour\") {\n        A = Snap.color(a);\n        B = Snap.color(b);\n        return {\n          from: [A.r, A.g, A.b, A.opacity],\n          to: [B.r, B.g, B.b, B.opacity],\n          f: getColour\n        };\n      }\n\n      if (name == \"viewBox\") {\n        A = this.attr(name).vb.split(\" \").map(Number);\n        B = b.split(\" \").map(Number);\n        return {\n          from: A,\n          to: B,\n          f: getViewBox\n        };\n      }\n\n      if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n        if (b instanceof Snap.Matrix) {\n          b = b.toTransformString();\n        }\n\n        if (!Snap._.rgTransform.test(b)) {\n          b = Snap._.svgTransform2string(b);\n        }\n\n        return equaliseTransform(a, b, function () {\n          return el.getBBox(1);\n        });\n      }\n\n      if (name == \"d\" || name == \"path\") {\n        A = Snap.path.toCubic(a, b);\n        return {\n          from: path2array(A[0]),\n          to: path2array(A[1]),\n          f: getPath(A[0])\n        };\n      }\n\n      if (name == \"points\") {\n        A = Str(a).split(Snap._.separator);\n        B = Str(b).split(Snap._.separator);\n        return {\n          from: A,\n          to: B,\n          f: function (val) {\n            return val;\n          }\n        };\n      }\n\n      var aUnit = a.match(reUnit),\n          bUnit = Str(b).match(reUnit);\n\n      if (aUnit && arrayEqual(aUnit, bUnit)) {\n        return {\n          from: parseFloat(a),\n          to: parseFloat(b),\n          f: getUnit(aUnit)\n        };\n      } else {\n        return {\n          from: this.asPX(name),\n          to: this.asPX(name, b),\n          f: getNumber\n        };\n      }\n    });\n  }); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n  // \n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  // \n  // http://www.apache.org/licenses/LICENSE-2.0\n  // \n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n\n  Snap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        has = \"hasOwnProperty\",\n        supportsTouch = (\"createTouch\" in glob.doc),\n        events = [\"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\", \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\", \"touchcancel\"],\n        touchMap = {\n      mousedown: \"touchstart\",\n      mousemove: \"touchmove\",\n      mouseup: \"touchend\"\n    },\n        getScroll = function (xy, el) {\n      var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n          doc = el && el.node ? el.node.ownerDocument : glob.doc;\n      return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n    },\n        preventDefault = function () {\n      this.returnValue = false;\n    },\n        preventTouch = function () {\n      return this.originalEvent.preventDefault();\n    },\n        stopPropagation = function () {\n      this.cancelBubble = true;\n    },\n        stopTouch = function () {\n      return this.originalEvent.stopPropagation();\n    },\n        addEvent = function (obj, type, fn, element) {\n      var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n          f = function (e) {\n        var scrollY = getScroll(\"y\", element),\n            scrollX = getScroll(\"x\", element);\n\n        if (supportsTouch && touchMap[has](type)) {\n          for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n            if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n              var olde = e;\n              e = e.targetTouches[i];\n              e.originalEvent = olde;\n              e.preventDefault = preventTouch;\n              e.stopPropagation = stopTouch;\n              break;\n            }\n          }\n        }\n\n        var x = e.clientX + scrollX,\n            y = e.clientY + scrollY;\n        return fn.call(element, e, x, y);\n      };\n\n      if (type !== realName) {\n        obj.addEventListener(type, f, false);\n      }\n\n      obj.addEventListener(realName, f, false);\n      return function () {\n        if (type !== realName) {\n          obj.removeEventListener(type, f, false);\n        }\n\n        obj.removeEventListener(realName, f, false);\n        return true;\n      };\n    },\n        drag = [],\n        dragMove = function (e) {\n      var x = e.clientX,\n          y = e.clientY,\n          scrollY = getScroll(\"y\"),\n          scrollX = getScroll(\"x\"),\n          dragi,\n          j = drag.length;\n\n      while (j--) {\n        dragi = drag[j];\n\n        if (supportsTouch) {\n          var i = e.touches && e.touches.length,\n              touch;\n\n          while (i--) {\n            touch = e.touches[i];\n\n            if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n              x = touch.clientX;\n              y = touch.clientY;\n              (e.originalEvent ? e.originalEvent : e).preventDefault();\n              break;\n            }\n          }\n        } else {\n          e.preventDefault();\n        }\n\n        var node = dragi.el.node,\n            o,\n            next = node.nextSibling,\n            parent = node.parentNode,\n            display = node.style.display; // glob.win.opera && parent.removeChild(node);\n        // node.style.display = \"none\";\n        // o = dragi.el.paper.getElementByPoint(x, y);\n        // node.style.display = display;\n        // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n        // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n\n        x += scrollX;\n        y += scrollY;\n        eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n      }\n    },\n        dragUp = function (e) {\n      Snap.unmousemove(dragMove).unmouseup(dragUp);\n      var i = drag.length,\n          dragi;\n\n      while (i--) {\n        dragi = drag[i];\n        dragi.el._drag = {};\n        eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n        eve.off(\"snap.drag.*.\" + dragi.el.id);\n      }\n\n      drag = [];\n    };\n    /*\\\n     * Element.click\n     [ method ]\n     **\n     * Adds a click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.unclick\n     [ method ]\n     **\n     * Removes a click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.dblclick\n     [ method ]\n     **\n     * Adds a double click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.undblclick\n     [ method ]\n     **\n     * Removes a double click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mousedown\n     [ method ]\n     **\n     * Adds a mousedown event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.unmousedown\n     [ method ]\n     **\n     * Removes a mousedown event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mousemove\n     [ method ]\n     **\n     * Adds a mousemove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.unmousemove\n     [ method ]\n     **\n     * Removes a mousemove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mouseout\n     [ method ]\n     **\n     * Adds a mouseout event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.unmouseout\n     [ method ]\n     **\n     * Removes a mouseout event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mouseover\n     [ method ]\n     **\n     * Adds a mouseover event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.unmouseover\n     [ method ]\n     **\n     * Removes a mouseover event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mouseup\n     [ method ]\n     **\n     * Adds a mouseup event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.unmouseup\n     [ method ]\n     **\n     * Removes a mouseup event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchstart\n     [ method ]\n     **\n     * Adds a touchstart event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.untouchstart\n     [ method ]\n     **\n     * Removes a touchstart event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchmove\n     [ method ]\n     **\n     * Adds a touchmove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.untouchmove\n     [ method ]\n     **\n     * Removes a touchmove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchend\n     [ method ]\n     **\n     * Adds a touchend event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.untouchend\n     [ method ]\n     **\n     * Removes a touchend event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchcancel\n     [ method ]\n     **\n     * Adds a touchcancel event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.untouchcancel\n     [ method ]\n     **\n     * Removes a touchcancel event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n\n    for (var i = events.length; i--;) {\n      (function (eventName) {\n        Snap[eventName] = elproto[eventName] = function (fn, scope) {\n          if (Snap.is(fn, \"function\")) {\n            this.events = this.events || [];\n            this.events.push({\n              name: eventName,\n              f: fn,\n              unbind: addEvent(this.node || document, eventName, fn, scope || this)\n            });\n          } else {\n            for (var i = 0, ii = this.events.length; i < ii; i++) if (this.events[i].name == eventName) {\n              try {\n                this.events[i].f.call(this);\n              } catch (e) {}\n            }\n          }\n\n          return this;\n        };\n\n        Snap[\"un\" + eventName] = elproto[\"un\" + eventName] = function (fn) {\n          var events = this.events || [],\n              l = events.length;\n\n          while (l--) if (events[l].name == eventName && (events[l].f == fn || !fn)) {\n            events[l].unbind();\n            events.splice(l, 1);\n            !events.length && delete this.events;\n            return this;\n          }\n\n          return this;\n        };\n      })(events[i]);\n    }\n    /*\\\n     * Element.hover\n     [ method ]\n     **\n     * Adds hover event handlers to the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     - icontext (object) #optional context for hover in handler\n     - ocontext (object) #optional context for hover out handler\n     = (object) @Element\n    \\*/\n\n\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n      return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n    };\n    /*\\\n     * Element.unhover\n     [ method ]\n     **\n     * Removes hover event handlers from the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     = (object) @Element\n    \\*/\n\n\n    elproto.unhover = function (f_in, f_out) {\n      return this.unmouseover(f_in).unmouseout(f_out);\n    };\n\n    var draggable = []; // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n    // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n    // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n    // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n\n    /*\\\n     * Element.drag\n     [ method ]\n     **\n     * Adds event handlers for an element's drag gesture\n     **\n     - onmove (function) handler for moving\n     - onstart (function) handler for drag start\n     - onend (function) handler for drag end\n     - mcontext (object) #optional context for moving handler\n     - scontext (object) #optional context for drag start handler\n     - econtext (object) #optional context for drag end handler\n     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, \n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element \n     * `drag.over.<id>` fires as well.\n     *\n     * Start event and start handler are called in specified context or in context of the element with following parameters:\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * Move event and move handler are called in specified context or in context of the element with following parameters:\n     o dx (number) shift by x from the start point\n     o dy (number) shift by y from the start point\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * End event and end handler are called in specified context or in context of the element with following parameters:\n     o event (object) DOM event object\n     = (object) @Element\n    \\*/\n\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n      var el = this;\n\n      if (!arguments.length) {\n        var origTransform;\n        return el.drag(function (dx, dy) {\n          this.attr({\n            transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n          });\n        }, function () {\n          origTransform = this.transform().local;\n        });\n      }\n\n      function start(e, x, y) {\n        (e.originalEvent || e).preventDefault();\n        el._drag.x = x;\n        el._drag.y = y;\n        el._drag.id = e.identifier;\n        !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n        drag.push({\n          el: el,\n          move_scope: move_scope,\n          start_scope: start_scope,\n          end_scope: end_scope\n        });\n        onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n        onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n        onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n        eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n      }\n\n      function init(e, x, y) {\n        eve(\"snap.draginit.\" + el.id, el, e, x, y);\n      }\n\n      eve.on(\"snap.draginit.\" + el.id, start);\n      el._drag = {};\n      draggable.push({\n        el: el,\n        start: start,\n        init: init\n      });\n      el.mousedown(init);\n      return el;\n    };\n    /*\n     * Element.onDragOver\n     [ method ]\n     **\n     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n     - f (function) handler for event, first argument would be the element you are dragging over\n    \\*/\n    // elproto.onDragOver = function (f) {\n    //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n    // };\n\n    /*\\\n     * Element.undrag\n     [ method ]\n     **\n     * Removes all drag event handlers from the given element\n    \\*/\n\n\n    elproto.undrag = function () {\n      var i = draggable.length;\n\n      while (i--) if (draggable[i].el == this) {\n        this.unmousedown(draggable[i].init);\n        draggable.splice(i, 1);\n        eve.unbind(\"snap.drag.*.\" + this.id);\n        eve.unbind(\"snap.draginit.\" + this.id);\n      }\n\n      !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n      return this;\n    };\n  }); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n  // \n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  // \n  // http://www.apache.org/licenses/LICENSE-2.0\n  // \n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n\n  Snap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        pproto = Paper.prototype,\n        rgurl = /^\\s*url\\((.+)\\)/,\n        Str = String,\n        $ = Snap._.$;\n    Snap.filter = {};\n    /*\\\n     * Paper.filter\n     [ method ]\n     **\n     * Creates a `<filter>` element\n     **\n     - filstr (string) SVG fragment of filter provided as a string\n     = (object) @Element\n     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n     > Usage\n     | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n\n    pproto.filter = function (filstr) {\n      var paper = this;\n\n      if (paper.type != \"svg\") {\n        paper = paper.paper;\n      }\n\n      var f = Snap.parse(Str(filstr)),\n          id = Snap._.id(),\n          width = paper.node.offsetWidth,\n          height = paper.node.offsetHeight,\n          filter = $(\"filter\");\n\n      $(filter, {\n        id: id,\n        filterUnits: \"userSpaceOnUse\"\n      });\n      filter.appendChild(f.node);\n      paper.defs.appendChild(filter);\n      return new Element(filter);\n    };\n\n    eve.on(\"snap.util.getattr.filter\", function () {\n      eve.stop();\n      var p = $(this.node, \"filter\");\n\n      if (p) {\n        var match = Str(p).match(rgurl);\n        return match && Snap.select(match[1]);\n      }\n    });\n    eve.on(\"snap.util.attr.filter\", function (value) {\n      if (value instanceof Element && value.type == \"filter\") {\n        eve.stop();\n        var id = value.node.id;\n\n        if (!id) {\n          $(value.node, {\n            id: value.id\n          });\n          id = value.id;\n        }\n\n        $(this.node, {\n          filter: Snap.url(id)\n        });\n      }\n\n      if (!value || value == \"none\") {\n        eve.stop();\n        this.node.removeAttribute(\"filter\");\n      }\n    });\n    /*\\\n     * Snap.filter.blur\n     [ method ]\n     **\n     * Returns an SVG markup string for the blur filter\n     **\n     - x (number) amount of horizontal blur, in pixels\n     - y (number) #optional amount of vertical blur, in pixels\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.blur(5, 10)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n\n    Snap.filter.blur = function (x, y) {\n      if (x == null) {\n        x = 2;\n      }\n\n      var def = y == null ? x : [x, y];\n      return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n        def: def\n      });\n    };\n\n    Snap.filter.blur.toString = function () {\n      return this();\n    };\n    /*\\\n     * Snap.filter.shadow\n     [ method ]\n     **\n     * Returns an SVG markup string for the shadow filter\n     **\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - blur (number) #optional amount of blur\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * which makes blur default to `4`. Or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - opacity (number) #optional `0..1` opacity of the shadow\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.shadow(0, 2, 3)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n\n\n    Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n      if (typeof blur == \"string\") {\n        color = blur;\n        opacity = color;\n        blur = 4;\n      }\n\n      if (typeof color != \"string\") {\n        opacity = color;\n        color = \"#000\";\n      }\n\n      color = color || \"#000\";\n\n      if (blur == null) {\n        blur = 4;\n      }\n\n      if (opacity == null) {\n        opacity = 1;\n      }\n\n      if (dx == null) {\n        dx = 0;\n        dy = 2;\n      }\n\n      if (dy == null) {\n        dy = dx;\n      }\n\n      color = Snap.color(color);\n      return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n        color: color,\n        dx: dx,\n        dy: dy,\n        blur: blur,\n        opacity: opacity\n      });\n    };\n\n    Snap.filter.shadow.toString = function () {\n      return this();\n    };\n    /*\\\n     * Snap.filter.grayscale\n     [ method ]\n     **\n     * Returns an SVG markup string for the grayscale filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n\n\n    Snap.filter.grayscale = function (amount) {\n      if (amount == null) {\n        amount = 1;\n      }\n\n      return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n        a: 0.2126 + 0.7874 * (1 - amount),\n        b: 0.7152 - 0.7152 * (1 - amount),\n        c: 0.0722 - 0.0722 * (1 - amount),\n        d: 0.2126 - 0.2126 * (1 - amount),\n        e: 0.7152 + 0.2848 * (1 - amount),\n        f: 0.0722 - 0.0722 * (1 - amount),\n        g: 0.2126 - 0.2126 * (1 - amount),\n        h: 0.0722 + 0.9278 * (1 - amount)\n      });\n    };\n\n    Snap.filter.grayscale.toString = function () {\n      return this();\n    };\n    /*\\\n     * Snap.filter.sepia\n     [ method ]\n     **\n     * Returns an SVG markup string for the sepia filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n\n\n    Snap.filter.sepia = function (amount) {\n      if (amount == null) {\n        amount = 1;\n      }\n\n      return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n        a: 0.393 + 0.607 * (1 - amount),\n        b: 0.769 - 0.769 * (1 - amount),\n        c: 0.189 - 0.189 * (1 - amount),\n        d: 0.349 - 0.349 * (1 - amount),\n        e: 0.686 + 0.314 * (1 - amount),\n        f: 0.168 - 0.168 * (1 - amount),\n        g: 0.272 - 0.272 * (1 - amount),\n        h: 0.534 - 0.534 * (1 - amount),\n        i: 0.131 + 0.869 * (1 - amount)\n      });\n    };\n\n    Snap.filter.sepia.toString = function () {\n      return this();\n    };\n    /*\\\n     * Snap.filter.saturate\n     [ method ]\n     **\n     * Returns an SVG markup string for the saturate filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n\n\n    Snap.filter.saturate = function (amount) {\n      if (amount == null) {\n        amount = 1;\n      }\n\n      return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n        amount: 1 - amount\n      });\n    };\n\n    Snap.filter.saturate.toString = function () {\n      return this();\n    };\n    /*\\\n     * Snap.filter.hueRotate\n     [ method ]\n     **\n     * Returns an SVG markup string for the hue-rotate filter\n     **\n     - angle (number) angle of rotation\n     = (string) filter representation\n    \\*/\n\n\n    Snap.filter.hueRotate = function (angle) {\n      angle = angle || 0;\n      return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n        angle: angle\n      });\n    };\n\n    Snap.filter.hueRotate.toString = function () {\n      return this();\n    };\n    /*\\\n     * Snap.filter.invert\n     [ method ]\n     **\n     * Returns an SVG markup string for the invert filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n\n\n    Snap.filter.invert = function (amount) {\n      if (amount == null) {\n        amount = 1;\n      } //        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n\n\n      return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n        amount: amount,\n        amount2: 1 - amount\n      });\n    };\n\n    Snap.filter.invert.toString = function () {\n      return this();\n    };\n    /*\\\n     * Snap.filter.brightness\n     [ method ]\n     **\n     * Returns an SVG markup string for the brightness filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n\n\n    Snap.filter.brightness = function (amount) {\n      if (amount == null) {\n        amount = 1;\n      }\n\n      return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n        amount: amount\n      });\n    };\n\n    Snap.filter.brightness.toString = function () {\n      return this();\n    };\n    /*\\\n     * Snap.filter.contrast\n     [ method ]\n     **\n     * Returns an SVG markup string for the contrast filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n\n\n    Snap.filter.contrast = function (amount) {\n      if (amount == null) {\n        amount = 1;\n      }\n\n      return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n        amount: amount,\n        amount2: .5 - amount / 2\n      });\n    };\n\n    Snap.filter.contrast.toString = function () {\n      return this();\n    };\n  }); // Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n\n  Snap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var box = Snap._.box,\n        is = Snap.is,\n        firstLetter = /^[^a-z]*([tbmlrc])/i,\n        toString = function () {\n      return \"T\" + this.dx + \",\" + this.dy;\n    };\n    /*\\\n     * Element.getAlign\n     [ method ]\n     **\n     * Returns shift needed to align the element relatively to given element.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n     > Usage\n     | el.transform(el.getAlign(el2, \"top\"));\n     * or\n     | var dy = el.getAlign(el2, \"top\").dy;\n    \\*/\n\n\n    Element.prototype.getAlign = function (el, way) {\n      if (way == null && is(el, \"string\")) {\n        way = el;\n        el = null;\n      }\n\n      el = el || this.paper;\n      var bx = el.getBBox ? el.getBBox() : box(el),\n          bb = this.getBBox(),\n          out = {};\n      way = way && way.match(firstLetter);\n      way = way ? way[1].toLowerCase() : \"c\";\n\n      switch (way) {\n        case \"t\":\n          out.dx = 0;\n          out.dy = bx.y - bb.y;\n          break;\n\n        case \"b\":\n          out.dx = 0;\n          out.dy = bx.y2 - bb.y2;\n          break;\n\n        case \"m\":\n          out.dx = 0;\n          out.dy = bx.cy - bb.cy;\n          break;\n\n        case \"l\":\n          out.dx = bx.x - bb.x;\n          out.dy = 0;\n          break;\n\n        case \"r\":\n          out.dx = bx.x2 - bb.x2;\n          out.dy = 0;\n          break;\n\n        default:\n          out.dx = bx.cx - bb.cx;\n          out.dy = 0;\n          break;\n      }\n\n      out.toString = toString;\n      return out;\n    };\n    /*\\\n     * Element.align\n     [ method ]\n     **\n     * Aligns the element relatively to given one via transformation.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object) this element\n     > Usage\n     | el.align(el2, \"top\");\n     * or\n     | el.align(\"middle\");\n    \\*/\n\n\n    Element.prototype.align = function (el, way) {\n      return this.transform(\"...\" + this.getAlign(el, way));\n    };\n  });\n  return Snap;\n});","map":{"version":3,"sources":["/home/opah/Documentos/rd/node_modules/snapsvg/dist/snap.svg.js"],"names":["glob","version","has","separator","comaseparator","wildcard","fun","numsort","a","b","current_event","stop","events","n","firstDefined","i","ii","length","lastDefined","eve","name","scope","String","e","oldstop","args","Array","prototype","slice","call","arguments","listeners","z","f","l","indexed","queue","out","ce","errors","push","zIndex","sort","apply","_events","names","split","item","items","k","j","jj","nes","es","concat","on","exist","hasOwnProperty","event","attrs","nt","subname","RegExp","test","nts","off","unbind","key","splice","cur","funcs","once","f2","toString","module","exports","define","amd","factory","require","window","mina","animations","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","isArray","Object","idgen","idprefix","Date","ID","diff","A","B","res","dif","bb","timer","now","sta","val","s","ds","dur","speed","spd","duration","stopit","id","update","pause","pdif","get","resume","start","end","easing","set","frame","len","anim","linear","status","time","getById","easeout","Math","pow","easein","easeinout","q","Q","sqrt","x","X","abs","y","Y","t","backin","backout","elastic","sin","PI","bounce","p","Snap","root","w","h","nodeType","wrap","is","Element","doc","querySelector","Paper","_","win","document","Str","toFloat","parseFloat","toInt","parseInt","math","mmax","max","mmin","min","round","E","S","objectToString","ISURL","colourRegExp","bezierrg","reURLValue","whitespace","commaSpaces","hsrg","hs","rg","pathCommand","tCommand","pathValues","el","type","xlink","xmlns","hub","URL","url","$","attr","createTextNode","text","createComment","substring","getAttributeNS","getAttribute","nodeValue","setAttributeNS","setAttribute","removeAttribute","createElementNS","getAttrs","attributes","namespaceURI","textContent","o","toLowerCase","isFinite","format","tokenRegex","objNotationRegex","replacer","all","obj","replace","quote","quotedName","isFunc","str","clone","constructor","repush","array","cacher","postprocessor","newf","arg","join","cache","count","shift","angle","x1","y1","x2","y2","x3","y3","atan2","rad","deg","x_y","x_y_w_h","width","height","tan","cos","asin","num","acos","atan","len2","closestPoint","path","distance2","dx","dy","pathNode","node","pathLength","getTotalLength","precision","pathSegList","numberOfItems","best","bestLength","bestDistance","Infinity","scan","scanLength","scanDistance","getPointAtLength","before","after","beforeLength","afterLength","beforeDistance","afterDistance","distance","snapTo","values","value","tolerance","rem","getRGB","colour","indexOf","r","g","hex","error","rgbtoString","charAt","toHex","red","green","blue","opacity","rgb","match","hsb2rgb","hsl2rgb","hsb","hsl","toFixed","color","getElementsByTagName","style","defaultView","getComputedStyle","getPropertyValue","hsbtoString","hsltoString","prepareRGB","string","clr","packageRGB","rgb2hsl","rgb2hsb","v","R","G","C","H","V","L","M","m","parsePathString","pathString","pth","arr","paramCounts","c","u","data","params","parseTransformString","TString","svgTransform2string","tstr","rgTransform","transform2matrix","bbox","tdata","Matrix","tlen","command","absolute","inver","invert","translate","rotate","scale","add","_unit2px","unit2px","contains","compareDocumentPosition","adown","documentElement","bup","parentNode","getSomeDefs","ownerSVGElement","select","pdefs","defs","make","getSomeSVG","svg","mgr","fill","appendChild","getW","getBBox","getH","nam","removeChild","query","selectAll","nodelist","querySelectorAll","add2group","list","forEach","children","childNodes","setInterval","snap","paper","tagName","nodeName","anims","transform","mask","pattern","symbol","method","json","att","parse","createDocumentFragment","full","div","createElement","innerHTML","firstChild","Fragment","frag","fragment","parent","desc","proto","ownerDocument","body","dom","contentDocument","ch","jsonFiller","toJSON","lastIndexOf","css","letter","cssAttr","toUpperCase","ajax","postData","req","XMLHttpRequest","pd","encodeURIComponent","open","setRequestHeader","onreadystatechange","readyState","send","load","responseText","getOffset","elem","box","getBoundingClientRect","docElem","clientTop","clientLeft","top","pageYOffset","scrollTop","left","pageXOffset","scrollLeft","getElementByPoint","canvas","target","elementFromPoint","opera","so","sr","createSVGRect","hits","getIntersectionList","plugin","elproto","isWithoutTransform","removed","localMatrix","original","href","getElementById","pathfinder","deflt","bboxwt","realPath","matrix","map","propString","extractTransform","doReturn","papa","global","getCTM","local","ms","localString","toTransformString","globalMatrix","totalMatrix","diffMatrix","total","gradientTransform","patternTransform","append","it","appendTo","prepend","first","insertBefore","prependTo","nextSibling","insertAfter","remove","asPX","use","fixids","els","ids","uses","urltest","linktest","oldid","old","fs","cloneNode","toDefs","toPattern","patternUnits","viewBox","marker","refX","refY","cx","cy","markerWidth","markerHeight","orient","from","to","Animation","animation","inAnim","_attrs","_callback","curStatus","animate","setter","fkeys","tkeys","keys","eq","equal","eldata","removeData","outerSVG","innerSVG","chld","toDataURL","btoa","contents","unescape","d","matrixproto","me","fromCharCode","offset","norm","normalize","mag","determinant","row","scalex","shear","scaley","isSimple","isSuperSimple","noRotation","shorter","clipIt","clip","fillStroke","grad","gradient","gradrg","parseGrad","tokens","stops","toAbsolute","txt","className","baseVal","vb","rx","ry","tp","textPath","tuner","chunk","tuned","setFontSize","fontSize","getter","textExtract","chi","getFontSize","rgNotSpace","rgBadSpace","rgTrim","addClass","classes","curClasses","pos","clazz","finalValue","removeClass","hasClass","toggleClass","flag","operators","reUnit","reAddon","getNumber","getUnit","unit","plus","evnt","atr","aUnit","op","isNaN","bplus","rect","circle","preload","onerror","src","img","cssText","onload","image","preserveAspectRatio","offsetWidth","offsetHeight","ellipse","group","vbx","vby","vbw","vbh","ptrn","vx","vy","vw","vh","line","polyline","points","polygon","Gstops","GaddStop","GgetBBox","unshift","gradientLinear","gradientRadial","gradientUnits","seed","step","addStop","fx","fy","clear","next","p2s","paths","ps","sleep","r1","r2","r0","rectPath","pathClone","pathArray","getPointAtSegmentLength","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","bezlen","findDotsAtSegment","getTotLen","getLengthFactory","istotal","subpath","O","onlystart","path2curve","sp","subpaths","point","getSubpathsAtLength","t1","t13","t12","t2","t3","mx","my","nx","ny","ax","ay","alpha","bezierBBox","curveDim","isPointInsideBBox","isBBoxIntersect","bbox1","bbox2","base3","p1","p2","p3","p4","x4","y4","z2","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","ll","intersect","denominator","px","py","px2","py2","inter","bez1","bez2","interHelper","interCount","justCount","l1","l2","n1","n2","dots1","dots2","xy","di","di1","dj","dj1","ci","cj","pathIntersection","path1","path2","interPathHelper","pathIntersectionNumber","x1m","y1m","x2m","y2m","pi","pj","intr","kk","segment1","segment2","isPointInsidePath","pathBBox","dim","xmin","ymin","xmax","ymax","ellipsePath","getPath","pathToRelative","lowerCase","rel","pa","pathToAbsolute","pa0","crz","dots","pop","catmullRom2bezier","l2c","q2c","_13","_23","a2c","large_arc_flag","sweep_flag","recursive","_120","rx2","ry2","f1","df","f2old","x2old","y2old","c1","s1","c2","s2","hx","hy","m1","m2","m3","m4","newres","findDotAtSegment","x0","y0","tvalues","bounds","b2ac","sqrtb2ac","jlen","mt","curve","bx","by","qx","qy","attrs2","processPath","pcom","T","fixArc","pp","pcoms1","pcoms2","fixM","a1","a2","pfirst","seg","seg2","seglen","seg2len","mapPath","pathi","crp","iLen","getSubpath","closest","inside","found","intersection","intersectionNumber","isPointInside","toRelative","toCubic","Set","bindings","setproto","thisArg","each","begin","handler","cb","callbacker","bind","aname","unbound","index","insertion","tail","todel","arglen","exclude","stroke","getEmpty","equaliseTransform","maxlength","tt1","tt2","path2array","getViewBox","getColour","Function","isNumeric","arrayEqual","arr1","arr2","Number","bUnit","supportsTouch","touchMap","mousedown","mousemove","mouseup","getScroll","preventDefault","returnValue","preventTouch","originalEvent","stopPropagation","cancelBubble","stopTouch","addEvent","fn","element","realName","scrollY","scrollX","targetTouches","olde","clientX","clientY","addEventListener","removeEventListener","drag","dragMove","dragi","touches","touch","identifier","_drag","display","move_scope","dragUp","unmousemove","unmouseup","end_scope","start_scope","eventName","hover","f_in","f_out","scope_in","scope_out","mouseover","mouseout","unhover","unmouseover","unmouseout","draggable","onmove","onstart","onend","origTransform","init","undrag","unmousedown","pproto","rgurl","filter","filstr","filterUnits","blur","def","shadow","grayscale","amount","sepia","saturate","hueRotate","amount2","brightness","contrast","firstLetter","getAlign","way","align"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,CAAC,UAAUA,IAAV,EAAgB;AACb,MAAIC,OAAO,GAAG,OAAd;AAAA,MACIC,GAAG,GAAG,gBADV;AAAA,MAEIC,SAAS,GAAG,QAFhB;AAAA,MAGIC,aAAa,GAAG,SAHpB;AAAA,MAIIC,QAAQ,GAAG,GAJf;AAAA,MAKIC,GAAG,GAAG,YAAY,CAAE,CALxB;AAAA,MAMIC,OAAO,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACtB,WAAOD,CAAC,GAAGC,CAAX;AACH,GARL;AAAA,MASIC,aATJ;AAAA,MAUIC,IAVJ;AAAA,MAWIC,MAAM,GAAG;AAACC,IAAAA,CAAC,EAAE;AAAJ,GAXb;AAAA,MAYIC,YAAY,GAAG,YAAY;AACvB,SAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAG,KAAKC,MAA1B,EAAkCF,CAAC,GAAGC,EAAtC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3C,UAAI,OAAO,KAAKA,CAAL,CAAP,IAAkB,WAAtB,EAAmC;AAC/B,eAAO,KAAKA,CAAL,CAAP;AACH;AACJ;AACJ,GAlBL;AAAA,MAmBIG,WAAW,GAAG,YAAY;AACtB,QAAIH,CAAC,GAAG,KAAKE,MAAb;;AACA,WAAO,EAAEF,CAAT,EAAY;AACR,UAAI,OAAO,KAAKA,CAAL,CAAP,IAAkB,WAAtB,EAAmC;AAC/B,eAAO,KAAKA,CAAL,CAAP;AACH;AACJ;AACJ,GA1BL;;AA2BA;;;;;;;;;;AAcII,EAAAA,GAAG,GAAG,UAAUC,IAAV,EAAgBC,KAAhB,EAAuB;AACzBD,IAAAA,IAAI,GAAGE,MAAM,CAACF,IAAD,CAAb;AACA,QAAIG,CAAC,GAAGX,MAAR;AAAA,QACIY,OAAO,GAAGb,IADd;AAAA,QAEIc,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAFX;AAAA,QAGIC,SAAS,GAAGZ,GAAG,CAACY,SAAJ,CAAcX,IAAd,CAHhB;AAAA,QAIIY,CAAC,GAAG,CAJR;AAAA,QAKIC,CAAC,GAAG,KALR;AAAA,QAMIC,CANJ;AAAA,QAOIC,OAAO,GAAG,EAPd;AAAA,QAQIC,KAAK,GAAG,EARZ;AAAA,QASIC,GAAG,GAAG,EATV;AAAA,QAUIC,EAAE,GAAG5B,aAVT;AAAA,QAWI6B,MAAM,GAAG,EAXb;AAYAF,IAAAA,GAAG,CAACvB,YAAJ,GAAmBA,YAAnB;AACAuB,IAAAA,GAAG,CAACnB,WAAJ,GAAkBA,WAAlB;AACAR,IAAAA,aAAa,GAAGU,IAAhB;AACAT,IAAAA,IAAI,GAAG,CAAP;;AACA,SAAK,IAAII,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGe,SAAS,CAACd,MAA/B,EAAuCF,CAAC,GAAGC,EAA3C,EAA+CD,CAAC,EAAhD,EAAoD,IAAI,YAAYgB,SAAS,CAAChB,CAAD,CAAzB,EAA8B;AAC9EoB,MAAAA,OAAO,CAACK,IAAR,CAAaT,SAAS,CAAChB,CAAD,CAAT,CAAa0B,MAA1B;;AACA,UAAIV,SAAS,CAAChB,CAAD,CAAT,CAAa0B,MAAb,GAAsB,CAA1B,EAA6B;AACzBL,QAAAA,KAAK,CAACL,SAAS,CAAChB,CAAD,CAAT,CAAa0B,MAAd,CAAL,GAA6BV,SAAS,CAAChB,CAAD,CAAtC;AACH;AACJ;;AACDoB,IAAAA,OAAO,CAACO,IAAR,CAAanC,OAAb;;AACA,WAAO4B,OAAO,CAACH,CAAD,CAAP,GAAa,CAApB,EAAuB;AACnBE,MAAAA,CAAC,GAAGE,KAAK,CAACD,OAAO,CAACH,CAAC,EAAF,CAAR,CAAT;AACAK,MAAAA,GAAG,CAACG,IAAJ,CAASN,CAAC,CAACS,KAAF,CAAQtB,KAAR,EAAeI,IAAf,CAAT;;AACA,UAAId,IAAJ,EAAU;AACNA,QAAAA,IAAI,GAAGa,OAAP;AACA,eAAOa,GAAP;AACH;AACJ;;AACD,SAAKtB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGC,EAAhB,EAAoBD,CAAC,EAArB,EAAyB;AACrBmB,MAAAA,CAAC,GAAGH,SAAS,CAAChB,CAAD,CAAb;;AACA,UAAI,YAAYmB,CAAhB,EAAmB;AACf,YAAIA,CAAC,CAACO,MAAF,IAAYN,OAAO,CAACH,CAAD,CAAvB,EAA4B;AACxBK,UAAAA,GAAG,CAACG,IAAJ,CAASN,CAAC,CAACS,KAAF,CAAQtB,KAAR,EAAeI,IAAf,CAAT;;AACA,cAAId,IAAJ,EAAU;AACN;AACH;;AACD,aAAG;AACCqB,YAAAA,CAAC;AACDE,YAAAA,CAAC,GAAGE,KAAK,CAACD,OAAO,CAACH,CAAD,CAAR,CAAT;AACAE,YAAAA,CAAC,IAAIG,GAAG,CAACG,IAAJ,CAASN,CAAC,CAACS,KAAF,CAAQtB,KAAR,EAAeI,IAAf,CAAT,CAAL;;AACA,gBAAId,IAAJ,EAAU;AACN;AACH;AACJ,WAPD,QAOSuB,CAPT;AAQH,SAbD,MAaO;AACHE,UAAAA,KAAK,CAACF,CAAC,CAACO,MAAH,CAAL,GAAkBP,CAAlB;AACH;AACJ,OAjBD,MAiBO;AACHG,QAAAA,GAAG,CAACG,IAAJ,CAASN,CAAC,CAACS,KAAF,CAAQtB,KAAR,EAAeI,IAAf,CAAT;;AACA,YAAId,IAAJ,EAAU;AACN;AACH;AACJ;AACJ;;AACDA,IAAAA,IAAI,GAAGa,OAAP;AACAd,IAAAA,aAAa,GAAG4B,EAAhB;AACA,WAAOD,GAAP;AACH,GAvGL,CADa,CAyGT;;;AACAlB,EAAAA,GAAG,CAACyB,OAAJ,GAAchC,MAAd;AACJ;;;;;;;;;AAYAO,EAAAA,GAAG,CAACY,SAAJ,GAAgB,UAAUX,IAAV,EAAgB;AAC5B,QAAIyB,KAAK,GAAGzB,IAAI,CAAC0B,KAAL,CAAW3C,SAAX,CAAZ;AAAA,QACIoB,CAAC,GAAGX,MADR;AAAA,QAEImC,IAFJ;AAAA,QAGIC,KAHJ;AAAA,QAIIC,CAJJ;AAAA,QAKIlC,CALJ;AAAA,QAMIC,EANJ;AAAA,QAOIkC,CAPJ;AAAA,QAQIC,EARJ;AAAA,QASIC,GATJ;AAAA,QAUIC,EAAE,GAAG,CAAC9B,CAAD,CAVT;AAAA,QAWIc,GAAG,GAAG,EAXV;;AAYA,SAAKtB,CAAC,GAAG,CAAJ,EAAOC,EAAE,GAAG6B,KAAK,CAAC5B,MAAvB,EAA+BF,CAAC,GAAGC,EAAnC,EAAuCD,CAAC,EAAxC,EAA4C;AACxCqC,MAAAA,GAAG,GAAG,EAAN;;AACA,WAAKF,CAAC,GAAG,CAAJ,EAAOC,EAAE,GAAGE,EAAE,CAACpC,MAApB,EAA4BiC,CAAC,GAAGC,EAAhC,EAAoCD,CAAC,EAArC,EAAyC;AACrC3B,QAAAA,CAAC,GAAG8B,EAAE,CAACH,CAAD,CAAF,CAAMrC,CAAV;AACAmC,QAAAA,KAAK,GAAG,CAACzB,CAAC,CAACsB,KAAK,CAAC9B,CAAD,CAAN,CAAF,EAAcQ,CAAC,CAAClB,QAAD,CAAf,CAAR;AACA4C,QAAAA,CAAC,GAAG,CAAJ;;AACA,eAAOA,CAAC,EAAR,EAAY;AACRF,UAAAA,IAAI,GAAGC,KAAK,CAACC,CAAD,CAAZ;;AACA,cAAIF,IAAJ,EAAU;AACNK,YAAAA,GAAG,CAACZ,IAAJ,CAASO,IAAT;AACAV,YAAAA,GAAG,GAAGA,GAAG,CAACiB,MAAJ,CAAWP,IAAI,CAACd,CAAL,IAAU,EAArB,CAAN;AACH;AACJ;AACJ;;AACDoB,MAAAA,EAAE,GAAGD,GAAL;AACH;;AACD,WAAOf,GAAP;AACH,GA9BD;AAgCA;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBAlB,EAAAA,GAAG,CAACoC,EAAJ,GAAS,UAAUnC,IAAV,EAAgBa,CAAhB,EAAmB;AACxBb,IAAAA,IAAI,GAAGE,MAAM,CAACF,IAAD,CAAb;;AACA,QAAI,OAAOa,CAAP,IAAY,UAAhB,EAA4B;AACxB,aAAO,YAAY,CAAE,CAArB;AACH;;AACD,QAAIY,KAAK,GAAGzB,IAAI,CAAC0B,KAAL,CAAW1C,aAAX,CAAZ;;AACA,SAAK,IAAIW,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAG6B,KAAK,CAAC5B,MAA3B,EAAmCF,CAAC,GAAGC,EAAvC,EAA2CD,CAAC,EAA5C,EAAgD;AAC3C,iBAAUK,IAAV,EAAgB;AACb,YAAIyB,KAAK,GAAGzB,IAAI,CAAC0B,KAAL,CAAW3C,SAAX,CAAZ;AAAA,YACIoB,CAAC,GAAGX,MADR;AAAA,YAEI4C,KAFJ;;AAGA,aAAK,IAAIzC,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAG6B,KAAK,CAAC5B,MAA3B,EAAmCF,CAAC,GAAGC,EAAvC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5CQ,UAAAA,CAAC,GAAGA,CAAC,CAACV,CAAN;AACAU,UAAAA,CAAC,GAAGA,CAAC,CAACkC,cAAF,CAAiBZ,KAAK,CAAC9B,CAAD,CAAtB,KAA8BQ,CAAC,CAACsB,KAAK,CAAC9B,CAAD,CAAN,CAA/B,KAA8CQ,CAAC,CAACsB,KAAK,CAAC9B,CAAD,CAAN,CAAD,GAAc;AAACF,YAAAA,CAAC,EAAE;AAAJ,WAA5D,CAAJ;AACH;;AACDU,QAAAA,CAAC,CAACU,CAAF,GAAMV,CAAC,CAACU,CAAF,IAAO,EAAb;;AACA,aAAKlB,CAAC,GAAG,CAAJ,EAAOC,EAAE,GAAGO,CAAC,CAACU,CAAF,CAAIhB,MAArB,EAA6BF,CAAC,GAAGC,EAAjC,EAAqCD,CAAC,EAAtC,EAA0C,IAAIQ,CAAC,CAACU,CAAF,CAAIlB,CAAJ,KAAUkB,CAAd,EAAiB;AACvDuB,UAAAA,KAAK,GAAG,IAAR;AACA;AACH;;AACD,SAACA,KAAD,IAAUjC,CAAC,CAACU,CAAF,CAAIO,IAAJ,CAASP,CAAT,CAAV;AACH,OAdA,EAcCY,KAAK,CAAC9B,CAAD,CAdN,CAAD;AAeH;;AACD,WAAO,UAAU0B,MAAV,EAAkB;AACrB,UAAI,CAACA,MAAD,IAAW,CAACA,MAAhB,EAAwB;AACpBR,QAAAA,CAAC,CAACQ,MAAF,GAAW,CAACA,MAAZ;AACH;AACJ,KAJD;AAKH,GA5BD;AA6BA;;;;;;;;;;;;;;;;;;AAgBAtB,EAAAA,GAAG,CAACc,CAAJ,GAAQ,UAAUyB,KAAV,EAAiB;AACrB,QAAIC,KAAK,GAAG,GAAG/B,KAAH,CAASC,IAAT,CAAcC,SAAd,EAAyB,CAAzB,CAAZ;AACA,WAAO,YAAY;AACfX,MAAAA,GAAG,CAACwB,KAAJ,CAAU,IAAV,EAAgB,CAACe,KAAD,EAAQ,IAAR,EAAcJ,MAAd,CAAqBK,KAArB,EAA4BL,MAA5B,CAAmC,GAAG1B,KAAH,CAASC,IAAT,CAAcC,SAAd,EAAyB,CAAzB,CAAnC,CAAhB;AACH,KAFD;AAGH,GALD;AAMA;;;;;;;;AAMAX,EAAAA,GAAG,CAACR,IAAJ,GAAW,YAAY;AACnBA,IAAAA,IAAI,GAAG,CAAP;AACH,GAFD;AAGA;;;;;;;;;;;;;;;;AAcAQ,EAAAA,GAAG,CAACyC,EAAJ,GAAS,UAAUC,OAAV,EAAmB;AACxB,QAAIA,OAAJ,EAAa;AACT,aAAO,IAAIC,MAAJ,CAAW,kBAAkBD,OAAlB,GAA4B,eAAvC,EAAwDE,IAAxD,CAA6DrD,aAA7D,CAAP;AACH;;AACD,WAAOA,aAAP;AACH,GALD;AAMA;;;;;;;;;;;AASAS,EAAAA,GAAG,CAAC6C,GAAJ,GAAU,YAAY;AAClB,WAAOtD,aAAa,CAACoC,KAAd,CAAoB3C,SAApB,CAAP;AACH,GAFD;AAGA;;;;;;;;;;;;;AAYA;;;;;;;;AAMAgB,EAAAA,GAAG,CAAC8C,GAAJ,GAAU9C,GAAG,CAAC+C,MAAJ,GAAa,UAAU9C,IAAV,EAAgBa,CAAhB,EAAmB;AACtC,QAAI,CAACb,IAAL,EAAW;AACPD,MAAAA,GAAG,CAACyB,OAAJ,GAAchC,MAAM,GAAG;AAACC,QAAAA,CAAC,EAAE;AAAJ,OAAvB;AACA;AACH;;AACD,QAAIgC,KAAK,GAAGzB,IAAI,CAAC0B,KAAL,CAAW1C,aAAX,CAAZ;;AACA,QAAIyC,KAAK,CAAC5B,MAAN,GAAe,CAAnB,EAAsB;AAClB,WAAK,IAAIF,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAG6B,KAAK,CAAC5B,MAA3B,EAAmCF,CAAC,GAAGC,EAAvC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5CI,QAAAA,GAAG,CAAC8C,GAAJ,CAAQpB,KAAK,CAAC9B,CAAD,CAAb,EAAkBkB,CAAlB;AACH;;AACD;AACH;;AACDY,IAAAA,KAAK,GAAGzB,IAAI,CAAC0B,KAAL,CAAW3C,SAAX,CAAR;AACA,QAAIoB,CAAJ;AAAA,QACI4C,GADJ;AAAA,QAEIC,MAFJ;AAAA,QAGIrD,CAHJ;AAAA,QAGOC,EAHP;AAAA,QAGWkC,CAHX;AAAA,QAGcC,EAHd;AAAA,QAIIkB,GAAG,GAAG,CAACzD,MAAD,CAJV;;AAKA,SAAKG,CAAC,GAAG,CAAJ,EAAOC,EAAE,GAAG6B,KAAK,CAAC5B,MAAvB,EAA+BF,CAAC,GAAGC,EAAnC,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,WAAKmC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGmB,GAAG,CAACpD,MAApB,EAA4BiC,CAAC,IAAIkB,MAAM,CAACnD,MAAP,GAAgB,CAAjD,EAAoD;AAChDmD,QAAAA,MAAM,GAAG,CAAClB,CAAD,EAAI,CAAJ,CAAT;AACA3B,QAAAA,CAAC,GAAG8C,GAAG,CAACnB,CAAD,CAAH,CAAOrC,CAAX;;AACA,YAAIgC,KAAK,CAAC9B,CAAD,CAAL,IAAYV,QAAhB,EAA0B;AACtB,cAAIkB,CAAC,CAACsB,KAAK,CAAC9B,CAAD,CAAN,CAAL,EAAiB;AACbqD,YAAAA,MAAM,CAAC5B,IAAP,CAAYjB,CAAC,CAACsB,KAAK,CAAC9B,CAAD,CAAN,CAAb;AACH;AACJ,SAJD,MAIO;AACH,eAAKoD,GAAL,IAAY5C,CAAZ,EAAe,IAAIA,CAAC,CAACrB,GAAD,CAAD,CAAOiE,GAAP,CAAJ,EAAiB;AAC5BC,YAAAA,MAAM,CAAC5B,IAAP,CAAYjB,CAAC,CAAC4C,GAAD,CAAb;AACH;AACJ;;AACDE,QAAAA,GAAG,CAACD,MAAJ,CAAWzB,KAAX,CAAiB0B,GAAjB,EAAsBD,MAAtB;AACH;AACJ;;AACD,SAAKrD,CAAC,GAAG,CAAJ,EAAOC,EAAE,GAAGqD,GAAG,CAACpD,MAArB,EAA6BF,CAAC,GAAGC,EAAjC,EAAqCD,CAAC,EAAtC,EAA0C;AACtCQ,MAAAA,CAAC,GAAG8C,GAAG,CAACtD,CAAD,CAAP;;AACA,aAAOQ,CAAC,CAACV,CAAT,EAAY;AACR,YAAIoB,CAAJ,EAAO;AACH,cAAIV,CAAC,CAACU,CAAN,EAAS;AACL,iBAAKiB,CAAC,GAAG,CAAJ,EAAOC,EAAE,GAAG5B,CAAC,CAACU,CAAF,CAAIhB,MAArB,EAA6BiC,CAAC,GAAGC,EAAjC,EAAqCD,CAAC,EAAtC,EAA0C,IAAI3B,CAAC,CAACU,CAAF,CAAIiB,CAAJ,KAAUjB,CAAd,EAAiB;AACvDV,cAAAA,CAAC,CAACU,CAAF,CAAImC,MAAJ,CAAWlB,CAAX,EAAc,CAAd;AACA;AACH;;AACD,aAAC3B,CAAC,CAACU,CAAF,CAAIhB,MAAL,IAAe,OAAOM,CAAC,CAACU,CAAxB;AACH;;AACD,eAAKkC,GAAL,IAAY5C,CAAC,CAACV,CAAd,EAAiB,IAAIU,CAAC,CAACV,CAAF,CAAIX,GAAJ,EAASiE,GAAT,KAAiB5C,CAAC,CAACV,CAAF,CAAIsD,GAAJ,EAASlC,CAA9B,EAAiC;AAC9C,gBAAIqC,KAAK,GAAG/C,CAAC,CAACV,CAAF,CAAIsD,GAAJ,EAASlC,CAArB;;AACA,iBAAKiB,CAAC,GAAG,CAAJ,EAAOC,EAAE,GAAGmB,KAAK,CAACrD,MAAvB,EAA+BiC,CAAC,GAAGC,EAAnC,EAAuCD,CAAC,EAAxC,EAA4C,IAAIoB,KAAK,CAACpB,CAAD,CAAL,IAAYjB,CAAhB,EAAmB;AAC3DqC,cAAAA,KAAK,CAACF,MAAN,CAAalB,CAAb,EAAgB,CAAhB;AACA;AACH;;AACD,aAACoB,KAAK,CAACrD,MAAP,IAAiB,OAAOM,CAAC,CAACV,CAAF,CAAIsD,GAAJ,EAASlC,CAAjC;AACH;AACJ,SAhBD,MAgBO;AACH,iBAAOV,CAAC,CAACU,CAAT;;AACA,eAAKkC,GAAL,IAAY5C,CAAC,CAACV,CAAd,EAAiB,IAAIU,CAAC,CAACV,CAAF,CAAIX,GAAJ,EAASiE,GAAT,KAAiB5C,CAAC,CAACV,CAAF,CAAIsD,GAAJ,EAASlC,CAA9B,EAAiC;AAC9C,mBAAOV,CAAC,CAACV,CAAF,CAAIsD,GAAJ,EAASlC,CAAhB;AACH;AACJ;;AACDV,QAAAA,CAAC,GAAGA,CAAC,CAACV,CAAN;AACH;AACJ;AACJ,GA9DD;AA+DA;;;;;;;;;;;;;;;;;;;AAiBAM,EAAAA,GAAG,CAACoD,IAAJ,GAAW,UAAUnD,IAAV,EAAgBa,CAAhB,EAAmB;AAC1B,QAAIuC,EAAE,GAAG,YAAY;AACjBrD,MAAAA,GAAG,CAAC+C,MAAJ,CAAW9C,IAAX,EAAiBoD,EAAjB;AACA,aAAOvC,CAAC,CAACU,KAAF,CAAQ,IAAR,EAAcb,SAAd,CAAP;AACH,KAHD;;AAIA,WAAOX,GAAG,CAACoC,EAAJ,CAAOnC,IAAP,EAAaoD,EAAb,CAAP;AACH,GAND;AAOA;;;;;;;;AAMArD,EAAAA,GAAG,CAAClB,OAAJ,GAAcA,OAAd;;AACAkB,EAAAA,GAAG,CAACsD,QAAJ,GAAe,YAAY;AACvB,WAAO,yBAAyBxE,OAAhC;AACH,GAFD;;AAGC,SAAOyE,MAAP,IAAiB,WAAjB,IAAgCA,MAAM,CAACC,OAAxC,GAAoDD,MAAM,CAACC,OAAP,GAAiBxD,GAArE,GAA6E,OAAOyD,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAAvC,GAA8CD,MAAM,CAAC,KAAD,EAAQ,EAAR,EAAY,YAAW;AAAE,WAAOzD,GAAP;AAAa,GAAtC,CAApD,GAAgGnB,IAAI,CAACmB,GAAL,GAAWA,GAAxL;AACH,CA/XD,EA+XG,IA/XH;;AAiYC,WAAUnB,IAAV,EAAgB8E,OAAhB,EAAyB;AACtB;AACA,MAAI,OAAOF,MAAP,IAAiB,UAAjB,IAA+BA,MAAM,CAACC,GAA1C,EAA+C;AAC3C;AACAD,IAAAA,MAAM,CAAC,CAAC,KAAD,CAAD,EAAU,UAAUzD,GAAV,EAAe;AAC3B,aAAO2D,OAAO,CAAC9E,IAAD,EAAOmB,GAAP,CAAd;AACH,KAFK,CAAN;AAGH,GALD,MAKO,IAAI,OAAOwD,OAAP,IAAkB,WAAtB,EAAmC;AACtC;AACA,QAAIxD,GAAG,GAAG4D,OAAO,CAAC,KAAD,CAAjB;;AACAL,IAAAA,MAAM,CAACC,OAAP,GAAiBG,OAAO,CAAC9E,IAAD,EAAOmB,GAAP,CAAxB;AACH,GAJM,MAIA;AACH;AACA;AACA2D,IAAAA,OAAO,CAAC9E,IAAD,EAAOA,IAAI,CAACmB,GAAZ,CAAP;AACH;AACJ,CAhBA,EAgBC6D,MAAM,IAAI,IAhBX,EAgBiB,UAAUA,MAAV,EAAkB7D,GAAlB,EAAuB;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAI8D,IAAI,GAAI,UAAU9D,GAAV,EAAe;AACvB,QAAI+D,UAAU,GAAG,EAAjB;AAAA,QACAC,gBAAgB,GAAGH,MAAM,CAACI,qBAAP,IACAJ,MAAM,CAACK,2BADP,IAEAL,MAAM,CAACM,wBAFP,IAGAN,MAAM,CAACO,sBAHP,IAIAP,MAAM,CAACQ,uBAJP,IAKA,UAAUC,QAAV,EAAoB;AAChBC,MAAAA,UAAU,CAACD,QAAD,EAAW,EAAX,CAAV;AACH,KARpB;AAAA,QASAE,OAAO,GAAGjE,KAAK,CAACiE,OAAN,IAAiB,UAAUnF,CAAV,EAAa;AACpC,aAAOA,CAAC,YAAYkB,KAAb,IACHkE,MAAM,CAACjE,SAAP,CAAiB8C,QAAjB,CAA0B5C,IAA1B,CAA+BrB,CAA/B,KAAqC,gBADzC;AAEH,KAZD;AAAA,QAaAqF,KAAK,GAAG,CAbR;AAAA,QAcAC,QAAQ,GAAG,MAAM,CAAC,CAAC,IAAIC,IAAJ,EAAF,EAAYtB,QAAZ,CAAqB,EAArB,CAdjB;AAAA,QAeAuB,EAAE,GAAG,YAAY;AACb,aAAOF,QAAQ,GAAG,CAACD,KAAK,EAAN,EAAUpB,QAAV,CAAmB,EAAnB,CAAlB;AACH,KAjBD;AAAA,QAkBAwB,IAAI,GAAG,UAAUzF,CAAV,EAAaC,CAAb,EAAgByF,CAAhB,EAAmBC,CAAnB,EAAsB;AACzB,UAAIR,OAAO,CAACnF,CAAD,CAAX,EAAgB;AACZ4F,QAAAA,GAAG,GAAG,EAAN;;AACA,aAAK,IAAIrF,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGR,CAAC,CAACS,MAAvB,EAA+BF,CAAC,GAAGC,EAAnC,EAAuCD,CAAC,EAAxC,EAA4C;AACxCqF,UAAAA,GAAG,CAACrF,CAAD,CAAH,GAASkF,IAAI,CAACzF,CAAC,CAACO,CAAD,CAAF,EAAON,CAAP,EAAUyF,CAAC,CAACnF,CAAD,CAAX,EAAgBoF,CAAhB,CAAb;AACH;;AACD,eAAOC,GAAP;AACH;;AACD,UAAIC,GAAG,GAAG,CAACH,CAAC,GAAG1F,CAAL,KAAW2F,CAAC,GAAG1F,CAAf,CAAV;AACA,aAAO,UAAU6F,EAAV,EAAc;AACjB,eAAO9F,CAAC,GAAG6F,GAAG,IAAIC,EAAE,GAAG7F,CAAT,CAAd;AACH,OAFD;AAGH,KA9BD;AAAA,QA+BA8F,KAAK,GAAGR,IAAI,CAACS,GAAL,IAAY,YAAY;AAC5B,aAAO,CAAC,IAAIT,IAAJ,EAAR;AACH,KAjCD;AAAA,QAkCAU,GAAG,GAAG,UAAUC,GAAV,EAAe;AACjB,UAAIlG,CAAC,GAAG,IAAR;;AACA,UAAIkG,GAAG,IAAI,IAAX,EAAiB;AACb,eAAOlG,CAAC,CAACmG,CAAT;AACH;;AACD,UAAIC,EAAE,GAAGpG,CAAC,CAACmG,CAAF,GAAMD,GAAf;AACAlG,MAAAA,CAAC,CAACC,CAAF,IAAOD,CAAC,CAACqG,GAAF,GAAQD,EAAf;AACApG,MAAAA,CAAC,CAAC2F,CAAF,IAAO3F,CAAC,CAACqG,GAAF,GAAQD,EAAf;AACApG,MAAAA,CAAC,CAACmG,CAAF,GAAMD,GAAN;AACH,KA3CD;AAAA,QA4CAI,KAAK,GAAG,UAAUJ,GAAV,EAAe;AACnB,UAAIlG,CAAC,GAAG,IAAR;;AACA,UAAIkG,GAAG,IAAI,IAAX,EAAiB;AACb,eAAOlG,CAAC,CAACuG,GAAT;AACH;;AACDvG,MAAAA,CAAC,CAACuG,GAAF,GAAQL,GAAR;AACH,KAlDD;AAAA,QAmDAM,QAAQ,GAAG,UAAUN,GAAV,EAAe;AACtB,UAAIlG,CAAC,GAAG,IAAR;;AACA,UAAIkG,GAAG,IAAI,IAAX,EAAiB;AACb,eAAOlG,CAAC,CAACqG,GAAT;AACH;;AACDrG,MAAAA,CAAC,CAACmG,CAAF,GAAMnG,CAAC,CAACmG,CAAF,GAAMD,GAAN,GAAYlG,CAAC,CAACqG,GAApB;AACArG,MAAAA,CAAC,CAACqG,GAAF,GAAQH,GAAR;AACH,KA1DD;AAAA,QA2DAO,MAAM,GAAG,YAAY;AACjB,UAAIzG,CAAC,GAAG,IAAR;AACA,aAAO0E,UAAU,CAAC1E,CAAC,CAAC0G,EAAH,CAAjB;AACA1G,MAAAA,CAAC,CAAC2G,MAAF;AACAhG,MAAAA,GAAG,CAAC,eAAeX,CAAC,CAAC0G,EAAlB,EAAsB1G,CAAtB,CAAH;AACH,KAhED;AAAA,QAiEA4G,KAAK,GAAG,YAAY;AAChB,UAAI5G,CAAC,GAAG,IAAR;;AACA,UAAIA,CAAC,CAAC6G,IAAN,EAAY;AACR;AACH;;AACD,aAAOnC,UAAU,CAAC1E,CAAC,CAAC0G,EAAH,CAAjB;AACA1G,MAAAA,CAAC,CAAC2G,MAAF;AACA3G,MAAAA,CAAC,CAAC6G,IAAF,GAAS7G,CAAC,CAAC8G,GAAF,KAAU9G,CAAC,CAACC,CAArB;AACH,KAzED;AAAA,QA0EA8G,MAAM,GAAG,YAAY;AACjB,UAAI/G,CAAC,GAAG,IAAR;;AACA,UAAI,CAACA,CAAC,CAAC6G,IAAP,EAAa;AACT;AACH;;AACD7G,MAAAA,CAAC,CAACC,CAAF,GAAMD,CAAC,CAAC8G,GAAF,KAAU9G,CAAC,CAAC6G,IAAlB;AACA,aAAO7G,CAAC,CAAC6G,IAAT;AACAnC,MAAAA,UAAU,CAAC1E,CAAC,CAAC0G,EAAH,CAAV,GAAmB1G,CAAnB;AACH,KAlFD;AAAA,QAmFA2G,MAAM,GAAG,YAAY;AACjB,UAAI3G,CAAC,GAAG,IAAR;AAAA,UACI4F,GADJ;;AAEA,UAAIT,OAAO,CAACnF,CAAC,CAACgH,KAAH,CAAX,EAAsB;AAClBpB,QAAAA,GAAG,GAAG,EAAN;;AACA,aAAK,IAAIlD,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAG3C,CAAC,CAACgH,KAAF,CAAQvG,MAA7B,EAAqCiC,CAAC,GAAGC,EAAzC,EAA6CD,CAAC,EAA9C,EAAkD;AAC9CkD,UAAAA,GAAG,CAAClD,CAAD,CAAH,GAAS,CAAC1C,CAAC,CAACgH,KAAF,CAAQtE,CAAR,CAAD,GACL,CAAC1C,CAAC,CAACiH,GAAF,CAAMvE,CAAN,IAAW1C,CAAC,CAACgH,KAAF,CAAQtE,CAAR,CAAZ,IAA0B1C,CAAC,CAACkH,MAAF,CAASlH,CAAC,CAACmG,CAAX,CAD9B;AAEH;AACJ,OAND,MAMO;AACHP,QAAAA,GAAG,GAAG,CAAC5F,CAAC,CAACgH,KAAH,GAAW,CAAChH,CAAC,CAACiH,GAAF,GAAQjH,CAAC,CAACgH,KAAX,IAAoBhH,CAAC,CAACkH,MAAF,CAASlH,CAAC,CAACmG,CAAX,CAArC;AACH;;AACDnG,MAAAA,CAAC,CAACmH,GAAF,CAAMvB,GAAN;AACH,KAhGD;AAAA,QAiGAwB,KAAK,GAAG,YAAY;AAChB,UAAIC,GAAG,GAAG,CAAV;;AACA,WAAK,IAAI9G,CAAT,IAAcmE,UAAd,EAA0B,IAAIA,UAAU,CAACzB,cAAX,CAA0B1C,CAA1B,CAAJ,EAAkC;AACxD,YAAIP,CAAC,GAAG0E,UAAU,CAACnE,CAAD,CAAlB;AAAA,YACIN,CAAC,GAAGD,CAAC,CAAC8G,GAAF,EADR;AAAA,YAEIlB,GAFJ;AAGAyB,QAAAA,GAAG;AACHrH,QAAAA,CAAC,CAACmG,CAAF,GAAM,CAAClG,CAAC,GAAGD,CAAC,CAACC,CAAP,KAAaD,CAAC,CAACqG,GAAF,GAAQrG,CAAC,CAACuG,GAAvB,CAAN;;AACA,YAAIvG,CAAC,CAACmG,CAAF,IAAO,CAAX,EAAc;AACV,iBAAOzB,UAAU,CAACnE,CAAD,CAAjB;AACAP,UAAAA,CAAC,CAACmG,CAAF,GAAM,CAAN;AACAkB,UAAAA,GAAG;;AACF,qBAAUrH,CAAV,EAAa;AACVkF,YAAAA,UAAU,CAAC,YAAY;AACnBvE,cAAAA,GAAG,CAAC,iBAAiBX,CAAC,CAAC0G,EAApB,EAAwB1G,CAAxB,CAAH;AACH,aAFS,CAAV;AAGH,WAJA,EAICA,CAJD,CAAD;AAKH;;AACDA,QAAAA,CAAC,CAAC2G,MAAF;AACH;;AACDU,MAAAA,GAAG,IAAI1C,gBAAgB,CAACyC,KAAD,CAAvB;AACH,KAtHD;;AAuHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA3C,IAAAA,IAAI,GAAG,UAAUzE,CAAV,EAAa0F,CAAb,EAAgBzF,CAAhB,EAAmB0F,CAAnB,EAAsBmB,GAAtB,EAA2BK,GAA3B,EAAgCD,MAAhC,EAAwC;AAC3C,UAAII,IAAI,GAAG;AACPZ,QAAAA,EAAE,EAAElB,EAAE,EADC;AAEPwB,QAAAA,KAAK,EAAEhH,CAFA;AAGPiH,QAAAA,GAAG,EAAEvB,CAHE;AAIPzF,QAAAA,CAAC,EAAEA,CAJI;AAKPkG,QAAAA,CAAC,EAAE,CALI;AAMPE,QAAAA,GAAG,EAAEV,CAAC,GAAG1F,CANF;AAOPsG,QAAAA,GAAG,EAAE,CAPE;AAQPO,QAAAA,GAAG,EAAEA,GARE;AASPK,QAAAA,GAAG,EAAEA,GATE;AAUPD,QAAAA,MAAM,EAAEA,MAAM,IAAIzC,IAAI,CAAC8C,MAVhB;AAWPC,QAAAA,MAAM,EAAEvB,GAXD;AAYPK,QAAAA,KAAK,EAAEA,KAZA;AAaPE,QAAAA,QAAQ,EAAEA,QAbH;AAcPrG,QAAAA,IAAI,EAAEsG,MAdC;AAePG,QAAAA,KAAK,EAAEA,KAfA;AAgBPG,QAAAA,MAAM,EAAEA,MAhBD;AAiBPJ,QAAAA,MAAM,EAAEA;AAjBD,OAAX;AAmBAjC,MAAAA,UAAU,CAAC4C,IAAI,CAACZ,EAAN,CAAV,GAAsBY,IAAtB;AACA,UAAID,GAAG,GAAG,CAAV;AAAA,UAAa9G,CAAb;;AACA,WAAKA,CAAL,IAAUmE,UAAV,EAAsB,IAAIA,UAAU,CAACzB,cAAX,CAA0B1C,CAA1B,CAAJ,EAAkC;AACpD8G,QAAAA,GAAG;;AACH,YAAIA,GAAG,IAAI,CAAX,EAAc;AACV;AACH;AACJ;;AACDA,MAAAA,GAAG,IAAI,CAAP,IAAY1C,gBAAgB,CAACyC,KAAD,CAA5B;AACA,aAAOE,IAAP;AACH,KAvLD;AAwLA;;;;;;;;;;;AASA7C,IAAAA,IAAI,CAACgD,IAAL,GAAY1B,KAAZ;AACA;;;;;;;;;AAQAtB,IAAAA,IAAI,CAACiD,OAAL,GAAe,UAAUhB,EAAV,EAAc;AACzB,aAAOhC,UAAU,CAACgC,EAAD,CAAV,IAAkB,IAAzB;AACH,KAFD;AAIA;;;;;;;;;;AAQAjC,IAAAA,IAAI,CAAC8C,MAAL,GAAc,UAAUlH,CAAV,EAAa;AACvB,aAAOA,CAAP;AACH,KAFD;AAGA;;;;;;;;;;AAQAoE,IAAAA,IAAI,CAACkD,OAAL,GAAe,UAAUtH,CAAV,EAAa;AACxB,aAAOuH,IAAI,CAACC,GAAL,CAASxH,CAAT,EAAY,GAAZ,CAAP;AACH,KAFD;AAGA;;;;;;;;;;AAQAoE,IAAAA,IAAI,CAACqD,MAAL,GAAc,UAAUzH,CAAV,EAAa;AACvB,aAAOuH,IAAI,CAACC,GAAL,CAASxH,CAAT,EAAY,GAAZ,CAAP;AACH,KAFD;AAGA;;;;;;;;;;AAQAoE,IAAAA,IAAI,CAACsD,SAAL,GAAiB,UAAU1H,CAAV,EAAa;AAC1B,UAAIA,CAAC,IAAI,CAAT,EAAY;AACR,eAAO,CAAP;AACH;;AACD,UAAIA,CAAC,IAAI,CAAT,EAAY;AACR,eAAO,CAAP;AACH;;AACD,UAAI2H,CAAC,GAAG,MAAM3H,CAAC,GAAG,IAAlB;AAAA,UACI4H,CAAC,GAAGL,IAAI,CAACM,IAAL,CAAU,QAAQF,CAAC,GAAGA,CAAtB,CADR;AAAA,UAEIG,CAAC,GAAGF,CAAC,GAAGD,CAFZ;AAAA,UAGII,CAAC,GAAGR,IAAI,CAACC,GAAL,CAASD,IAAI,CAACS,GAAL,CAASF,CAAT,CAAT,EAAsB,IAAI,CAA1B,KAAgCA,CAAC,GAAG,CAAJ,GAAQ,CAAC,CAAT,GAAa,CAA7C,CAHR;AAAA,UAIIG,CAAC,GAAG,CAACL,CAAD,GAAKD,CAJb;AAAA,UAKIO,CAAC,GAAGX,IAAI,CAACC,GAAL,CAASD,IAAI,CAACS,GAAL,CAASC,CAAT,CAAT,EAAsB,IAAI,CAA1B,KAAgCA,CAAC,GAAG,CAAJ,GAAQ,CAAC,CAAT,GAAa,CAA7C,CALR;AAAA,UAMIE,CAAC,GAAGJ,CAAC,GAAGG,CAAJ,GAAQ,EANhB;AAOA,aAAO,CAAC,IAAIC,CAAL,IAAU,CAAV,GAAcA,CAAd,GAAkBA,CAAlB,GAAsBA,CAAC,GAAGA,CAAJ,GAAQA,CAArC;AACH,KAfD;AAgBA;;;;;;;;;;AAQA/D,IAAAA,IAAI,CAACgE,MAAL,GAAc,UAAUpI,CAAV,EAAa;AACvB,UAAIA,CAAC,IAAI,CAAT,EAAY;AACR,eAAO,CAAP;AACH;;AACD,UAAI8F,CAAC,GAAG,OAAR;AACA,aAAO9F,CAAC,GAAGA,CAAJ,IAAS,CAAC8F,CAAC,GAAG,CAAL,IAAU9F,CAAV,GAAc8F,CAAvB,CAAP;AACH,KAND;AAOA;;;;;;;;;;AAQA1B,IAAAA,IAAI,CAACiE,OAAL,GAAe,UAAUrI,CAAV,EAAa;AACxB,UAAIA,CAAC,IAAI,CAAT,EAAY;AACR,eAAO,CAAP;AACH;;AACDA,MAAAA,CAAC,GAAGA,CAAC,GAAG,CAAR;AACA,UAAI8F,CAAC,GAAG,OAAR;AACA,aAAO9F,CAAC,GAAGA,CAAJ,IAAS,CAAC8F,CAAC,GAAG,CAAL,IAAU9F,CAAV,GAAc8F,CAAvB,IAA4B,CAAnC;AACH,KAPD;AAQA;;;;;;;;;;AAQA1B,IAAAA,IAAI,CAACkE,OAAL,GAAe,UAAUtI,CAAV,EAAa;AACxB,UAAIA,CAAC,IAAI,CAAC,CAACA,CAAX,EAAc;AACV,eAAOA,CAAP;AACH;;AACD,aAAOuH,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,CAAC,EAAD,GAAMxH,CAAlB,IAAuBuH,IAAI,CAACgB,GAAL,CAAS,CAACvI,CAAC,GAAG,IAAL,KAClC,IAAIuH,IAAI,CAACiB,EADyB,IACnB,EADU,CAAvB,GACmB,CAD1B;AAEH,KAND;AAOA;;;;;;;;;;AAQApE,IAAAA,IAAI,CAACqE,MAAL,GAAc,UAAUzI,CAAV,EAAa;AACvB,UAAI8F,CAAC,GAAG,MAAR;AAAA,UACI4C,CAAC,GAAG,IADR;AAAA,UAEIrH,CAFJ;;AAGA,UAAIrB,CAAC,GAAI,IAAI0I,CAAb,EAAiB;AACbrH,QAAAA,CAAC,GAAGyE,CAAC,GAAG9F,CAAJ,GAAQA,CAAZ;AACH,OAFD,MAEO;AACH,YAAIA,CAAC,GAAI,IAAI0I,CAAb,EAAiB;AACb1I,UAAAA,CAAC,IAAK,MAAM0I,CAAZ;AACArH,UAAAA,CAAC,GAAGyE,CAAC,GAAG9F,CAAJ,GAAQA,CAAR,GAAY,GAAhB;AACH,SAHD,MAGO;AACH,cAAIA,CAAC,GAAI,MAAM0I,CAAf,EAAmB;AACf1I,YAAAA,CAAC,IAAK,OAAO0I,CAAb;AACArH,YAAAA,CAAC,GAAGyE,CAAC,GAAG9F,CAAJ,GAAQA,CAAR,GAAY,KAAhB;AACH,WAHD,MAGO;AACHA,YAAAA,CAAC,IAAK,QAAQ0I,CAAd;AACArH,YAAAA,CAAC,GAAGyE,CAAC,GAAG9F,CAAJ,GAAQA,CAAR,GAAY,OAAhB;AACH;AACJ;AACJ;;AACD,aAAOqB,CAAP;AACH,KArBD;;AAsBA8C,IAAAA,MAAM,CAACC,IAAP,GAAcA,IAAd;AACA,WAAOA,IAAP;AACH,GAtVU,CAsVR,OAAO9D,GAAP,IAAc,WAAd,GAA4B,YAAY,CAAE,CAA1C,GAA6CA,GAtVrC,CAAX,CAfyC,CAsWzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAIqI,IAAI,GAAI,UAASC,IAAT,EAAe;AAC3BD,IAAAA,IAAI,CAACvJ,OAAL,GAAe,OAAf;AACA;;;;;;;;;;;;;;;;;AAgBA,aAASuJ,IAAT,CAAcE,CAAd,EAAiBC,CAAjB,EAAoB;AAChB,UAAID,CAAJ,EAAO;AACH,YAAIA,CAAC,CAACE,QAAN,EAAgB;AACZ,iBAAOC,IAAI,CAACH,CAAD,CAAX;AACH;;AACD,YAAII,EAAE,CAACJ,CAAD,EAAI,OAAJ,CAAF,IAAkBF,IAAI,CAAC7B,GAA3B,EAAgC;AAC5B,iBAAO6B,IAAI,CAAC7B,GAAL,CAAShF,KAAT,CAAe6G,IAAf,EAAqBE,CAArB,CAAP;AACH;;AACD,YAAIA,CAAC,YAAYK,OAAjB,EAA0B;AACtB,iBAAOL,CAAP;AACH;;AACD,YAAIC,CAAC,IAAI,IAAT,EAAe;AACXD,UAAAA,CAAC,GAAG1J,IAAI,CAACgK,GAAL,CAASC,aAAT,CAAuB3I,MAAM,CAACoI,CAAD,CAA7B,CAAJ;AACA,iBAAOG,IAAI,CAACH,CAAD,CAAX;AACH;AACJ;;AACDA,MAAAA,CAAC,GAAGA,CAAC,IAAI,IAAL,GAAY,MAAZ,GAAqBA,CAAzB;AACAC,MAAAA,CAAC,GAAGA,CAAC,IAAI,IAAL,GAAY,MAAZ,GAAqBA,CAAzB;AACA,aAAO,IAAIO,KAAJ,CAAUR,CAAV,EAAaC,CAAb,CAAP;AACH;;AACDH,IAAAA,IAAI,CAAC/E,QAAL,GAAgB,YAAY;AACxB,aAAO,WAAW,KAAKxE,OAAvB;AACH,KAFD;;AAGAuJ,IAAAA,IAAI,CAACW,CAAL,GAAS,EAAT;AACA,QAAInK,IAAI,GAAG;AACPoK,MAAAA,GAAG,EAAEX,IAAI,CAACzE,MADH;AAEPgF,MAAAA,GAAG,EAAEP,IAAI,CAACzE,MAAL,CAAYqF;AAFV,KAAX;AAIAb,IAAAA,IAAI,CAACW,CAAL,CAAOnK,IAAP,GAAcA,IAAd;;AACA,QAAIE,GAAG,GAAG,gBAAV;AAAA,QACIoK,GAAG,GAAGhJ,MADV;AAAA,QAEIiJ,OAAO,GAAGC,UAFd;AAAA,QAGIC,KAAK,GAAGC,QAHZ;AAAA,QAIIC,IAAI,GAAGvC,IAJX;AAAA,QAKIwC,IAAI,GAAGD,IAAI,CAACE,GALhB;AAAA,QAMIC,IAAI,GAAGH,IAAI,CAACI,GANhB;AAAA,QAOIlC,GAAG,GAAG8B,IAAI,CAAC9B,GAPf;AAAA,QAQIR,GAAG,GAAGsC,IAAI,CAACtC,GARf;AAAA,QASIgB,EAAE,GAAGsB,IAAI,CAACtB,EATd;AAAA,QAUI2B,KAAK,GAAGL,IAAI,CAACK,KAVjB;AAAA,QAWIC,CAAC,GAAG,EAXR;AAAA,QAYIC,CAAC,GAAG,GAZR;AAAA,QAaIC,cAAc,GAAGvF,MAAM,CAACjE,SAAP,CAAiB8C,QAbtC;AAAA,QAcI2G,KAAK,GAAG,+BAdZ;AAAA,QAeIC,YAAY,GAAG,kTAfnB;AAAA,QAgBIC,QAAQ,GAAG,wDAhBf;AAAA,QAiBIC,UAAU,GAAG,oBAjBjB;AAAA,QAkBIpL,SAAS,GAAGqJ,IAAI,CAACW,CAAL,CAAOhK,SAAP,GAAmB,QAlBnC;AAAA,QAmBIqL,UAAU,GAAG,OAnBjB;AAAA,QAoBIC,WAAW,GAAG,aApBlB;AAAA,QAqBIC,IAAI,GAAG;AAACC,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,EAAE,EAAE;AAAZ,KArBX;AAAA,QAsBIC,WAAW,GAAG,4DAtBlB;AAAA,QAuBIC,QAAQ,GAAG,6DAvBf;AAAA,QAwBIC,UAAU,GAAG,6CAxBjB;AAAA,QAyBIlG,KAAK,GAAG,CAzBZ;AAAA,QA0BIC,QAAQ,GAAG,MAAM,CAAC,CAAC,IAAIC,IAAJ,EAAF,EAAYtB,QAAZ,CAAqB,EAArB,CA1BrB;AAAA,QA2BIuB,EAAE,GAAG,UAAUgG,EAAV,EAAc;AACf,aAAO,CAACA,EAAE,IAAIA,EAAE,CAACC,IAAT,GAAgBD,EAAE,CAACC,IAAnB,GAA0BhB,CAA3B,IAAgCnF,QAAhC,GAA2C,CAACD,KAAK,EAAN,EAAUpB,QAAV,CAAmB,EAAnB,CAAlD;AACH,KA7BL;AAAA,QA8BIyH,KAAK,GAAG,8BA9BZ;AAAA,QA+BIC,KAAK,GAAG,4BA/BZ;AAAA,QAgCIC,GAAG,GAAG,EAhCV;AAAA,QAiCIC,GAAG,GAAG7C,IAAI,CAAC8C,GAAL,GAAW,UAAUA,GAAV,EAAe;AAC5B,aAAO,WAAWA,GAAX,GAAiB,IAAxB;AACH,KAnCL;;AAqCA,aAASC,CAAT,CAAWP,EAAX,EAAeQ,IAAf,EAAqB;AACjB,UAAIA,IAAJ,EAAU;AACN,YAAIR,EAAE,IAAI,OAAV,EAAmB;AACfA,UAAAA,EAAE,GAAGhM,IAAI,CAACgK,GAAL,CAASyC,cAAT,CAAwBD,IAAI,CAACE,IAAL,IAAaF,IAAI,CAAC,OAAD,CAAjB,IAA8B,EAAtD,CAAL;AACH;;AACD,YAAIR,EAAE,IAAI,UAAV,EAAsB;AAClBA,UAAAA,EAAE,GAAGhM,IAAI,CAACgK,GAAL,CAAS2C,aAAT,CAAuBH,IAAI,CAACE,IAAL,IAAaF,IAAI,CAAC,OAAD,CAAjB,IAA8B,EAArD,CAAL;AACH;;AACD,YAAI,OAAOR,EAAP,IAAa,QAAjB,EAA2B;AACvBA,UAAAA,EAAE,GAAGO,CAAC,CAACP,EAAD,CAAN;AACH;;AACD,YAAI,OAAOQ,IAAP,IAAe,QAAnB,EAA6B;AACzB,cAAIR,EAAE,CAACpC,QAAH,IAAe,CAAnB,EAAsB;AAClB,gBAAI4C,IAAI,CAACI,SAAL,CAAe,CAAf,EAAkB,CAAlB,KAAwB,QAA5B,EAAsC;AAClC,qBAAOZ,EAAE,CAACa,cAAH,CAAkBX,KAAlB,EAAyBM,IAAI,CAACI,SAAL,CAAe,CAAf,CAAzB,CAAP;AACH;;AACD,gBAAIJ,IAAI,CAACI,SAAL,CAAe,CAAf,EAAkB,CAAlB,KAAwB,MAA5B,EAAoC;AAChC,qBAAOZ,EAAE,CAACa,cAAH,CAAkBV,KAAlB,EAAyBK,IAAI,CAACI,SAAL,CAAe,CAAf,CAAzB,CAAP;AACH;;AACD,mBAAOZ,EAAE,CAACc,YAAH,CAAgBN,IAAhB,CAAP;AACH,WARD,MAQO,IAAIA,IAAI,IAAI,MAAZ,EAAoB;AACvB,mBAAOR,EAAE,CAACe,SAAV;AACH,WAFM,MAEA;AACH,mBAAO,IAAP;AACH;AACJ;;AACD,YAAIf,EAAE,CAACpC,QAAH,IAAe,CAAnB,EAAsB;AAClB,eAAK,IAAIzF,GAAT,IAAgBqI,IAAhB,EAAsB,IAAIA,IAAI,CAACtM,GAAD,CAAJ,CAAUiE,GAAV,CAAJ,EAAoB;AACtC,gBAAIuC,GAAG,GAAG4D,GAAG,CAACkC,IAAI,CAACrI,GAAD,CAAL,CAAb;;AACA,gBAAIuC,GAAJ,EAAS;AACL,kBAAIvC,GAAG,CAACyI,SAAJ,CAAc,CAAd,EAAiB,CAAjB,KAAuB,QAA3B,EAAqC;AACjCZ,gBAAAA,EAAE,CAACgB,cAAH,CAAkBd,KAAlB,EAAyB/H,GAAG,CAACyI,SAAJ,CAAc,CAAd,CAAzB,EAA2ClG,GAA3C;AACH,eAFD,MAEO,IAAIvC,GAAG,CAACyI,SAAJ,CAAc,CAAd,EAAiB,CAAjB,KAAuB,MAA3B,EAAmC;AACtCZ,gBAAAA,EAAE,CAACgB,cAAH,CAAkBb,KAAlB,EAAyBhI,GAAG,CAACyI,SAAJ,CAAc,CAAd,CAAzB,EAA2ClG,GAA3C;AACH,eAFM,MAEA;AACHsF,gBAAAA,EAAE,CAACiB,YAAH,CAAgB9I,GAAhB,EAAqBuC,GAArB;AACH;AACJ,aARD,MAQO;AACHsF,cAAAA,EAAE,CAACkB,eAAH,CAAmB/I,GAAnB;AACH;AACJ;AACJ,SAfD,MAeO,IAAI,UAAUqI,IAAd,EAAoB;AACvBR,UAAAA,EAAE,CAACe,SAAH,GAAeP,IAAI,CAACE,IAApB;AACH;AACJ,OA3CD,MA2CO;AACHV,QAAAA,EAAE,GAAGhM,IAAI,CAACgK,GAAL,CAASmD,eAAT,CAAyBhB,KAAzB,EAAgCH,EAAhC,CAAL;AACH;;AACD,aAAOA,EAAP;AACH;;AACDxC,IAAAA,IAAI,CAACW,CAAL,CAAOoC,CAAP,GAAWA,CAAX;AACA/C,IAAAA,IAAI,CAACW,CAAL,CAAOjD,EAAP,GAAYlB,EAAZ;;AACA,aAASoH,QAAT,CAAkBpB,EAAlB,EAAsB;AAClB,UAAIrI,KAAK,GAAGqI,EAAE,CAACqB,UAAf;AAAA,UACIjM,IADJ;AAAA,UAEIiB,GAAG,GAAG,EAFV;;AAGA,WAAK,IAAItB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4C,KAAK,CAAC1C,MAA1B,EAAkCF,CAAC,EAAnC,EAAuC;AACnC,YAAI4C,KAAK,CAAC5C,CAAD,CAAL,CAASuM,YAAT,IAAyBpB,KAA7B,EAAoC;AAChC9K,UAAAA,IAAI,GAAG,QAAP;AACH,SAFD,MAEO;AACHA,UAAAA,IAAI,GAAG,EAAP;AACH;;AACDA,QAAAA,IAAI,IAAIuC,KAAK,CAAC5C,CAAD,CAAL,CAASK,IAAjB;AACAiB,QAAAA,GAAG,CAACjB,IAAD,CAAH,GAAYuC,KAAK,CAAC5C,CAAD,CAAL,CAASwM,WAArB;AACH;;AACD,aAAOlL,GAAP;AACH;;AACD,aAASyH,EAAT,CAAY0D,CAAZ,EAAevB,IAAf,EAAqB;AACjBA,MAAAA,IAAI,GAAG3B,GAAG,CAAC3I,SAAJ,CAAc8L,WAAd,CAA0B5L,IAA1B,CAA+BoK,IAA/B,CAAP;;AACA,UAAIA,IAAI,IAAI,QAAZ,EAAsB;AAClB,eAAOyB,QAAQ,CAACF,CAAD,CAAf;AACH;;AACD,UAAIvB,IAAI,IAAI,OAAR,KACCuB,CAAC,YAAY9L,KAAb,IAAsBA,KAAK,CAACiE,OAAN,IAAiBjE,KAAK,CAACiE,OAAN,CAAc6H,CAAd,CADxC,CAAJ,EAC+D;AAC3D,eAAO,IAAP;AACH;;AACD,aAASvB,IAAI,IAAI,MAAR,IAAkBuB,CAAC,KAAK,IAAzB,IACCvB,IAAI,IAAI,OAAOuB,CAAf,IAAoBA,CAAC,KAAK,IAD3B,IAECvB,IAAI,IAAI,QAAR,IAAoBuB,CAAC,KAAK5H,MAAM,CAAC4H,CAAD,CAFjC,IAGArC,cAAc,CAACtJ,IAAf,CAAoB2L,CAApB,EAAuB5L,KAAvB,CAA6B,CAA7B,EAAgC,CAAC,CAAjC,EAAoC6L,WAApC,MAAqDxB,IAH7D;AAIH;AACD;;;;;;;;;;;;;;;;;;;;;;;AAqBAzC,IAAAA,IAAI,CAACmE,MAAL,GAAe,YAAY;AACvB,UAAIC,UAAU,GAAG,eAAjB;AAAA,UACIC,gBAAgB,GAAG,0DADvB;AAAA,UACmF;AAC/EC,MAAAA,QAAQ,GAAG,UAAUC,GAAV,EAAe5J,GAAf,EAAoB6J,GAApB,EAAyB;AAChC,YAAI5H,GAAG,GAAG4H,GAAV;AACA7J,QAAAA,GAAG,CAAC8J,OAAJ,CAAYJ,gBAAZ,EAA8B,UAAUE,GAAV,EAAe3M,IAAf,EAAqB8M,KAArB,EAA4BC,UAA5B,EAAwCC,MAAxC,EAAgD;AAC1EhN,UAAAA,IAAI,GAAGA,IAAI,IAAI+M,UAAf;;AACA,cAAI/H,GAAJ,EAAS;AACL,gBAAIhF,IAAI,IAAIgF,GAAZ,EAAiB;AACbA,cAAAA,GAAG,GAAGA,GAAG,CAAChF,IAAD,CAAT;AACH;;AACD,mBAAOgF,GAAP,IAAc,UAAd,IAA4BgI,MAA5B,KAAuChI,GAAG,GAAGA,GAAG,EAAhD;AACH;AACJ,SARD;AASAA,QAAAA,GAAG,GAAG,CAACA,GAAG,IAAI,IAAP,IAAeA,GAAG,IAAI4H,GAAtB,GAA4BD,GAA5B,GAAkC3H,GAAnC,IAA0C,EAAhD;AACA,eAAOA,GAAP;AACH,OAfL;;AAgBA,aAAO,UAAUiI,GAAV,EAAeL,GAAf,EAAoB;AACvB,eAAO1D,GAAG,CAAC+D,GAAD,CAAH,CAASJ,OAAT,CAAiBL,UAAjB,EAA6B,UAAUG,GAAV,EAAe5J,GAAf,EAAoB;AACpD,iBAAO2J,QAAQ,CAACC,GAAD,EAAM5J,GAAN,EAAW6J,GAAX,CAAf;AACH,SAFM,CAAP;AAGH,OAJD;AAKH,KAtBa,EAAd;;AAuBA,aAASM,KAAT,CAAeN,GAAf,EAAoB;AAChB,UAAI,OAAOA,GAAP,IAAc,UAAd,IAA4BpI,MAAM,CAACoI,GAAD,CAAN,KAAgBA,GAAhD,EAAqD;AACjD,eAAOA,GAAP;AACH;;AACD,UAAI5H,GAAG,GAAG,IAAI4H,GAAG,CAACO,WAAR,EAAV;;AACA,WAAK,IAAIpK,GAAT,IAAgB6J,GAAhB,EAAqB,IAAIA,GAAG,CAAC9N,GAAD,CAAH,CAASiE,GAAT,CAAJ,EAAmB;AACpCiC,QAAAA,GAAG,CAACjC,GAAD,CAAH,GAAWmK,KAAK,CAACN,GAAG,CAAC7J,GAAD,CAAJ,CAAhB;AACH;;AACD,aAAOiC,GAAP;AACH;;AACDoD,IAAAA,IAAI,CAACW,CAAL,CAAOmE,KAAP,GAAeA,KAAf;;AACA,aAASE,MAAT,CAAgBC,KAAhB,EAAuB1L,IAAvB,EAA6B;AACzB,WAAK,IAAIhC,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGyN,KAAK,CAACxN,MAA3B,EAAmCF,CAAC,GAAGC,EAAvC,EAA2CD,CAAC,EAA5C,EAAgD,IAAI0N,KAAK,CAAC1N,CAAD,CAAL,KAAagC,IAAjB,EAAuB;AACnE,eAAO0L,KAAK,CAACjM,IAAN,CAAWiM,KAAK,CAACrK,MAAN,CAAarD,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAX,CAAP;AACH;AACJ;;AACD,aAAS2N,MAAT,CAAgBzM,CAAhB,EAAmBZ,KAAnB,EAA0BsN,aAA1B,EAAyC;AACrC,eAASC,IAAT,GAAgB;AACZ,YAAIC,GAAG,GAAGnN,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAAV;AAAA,YACIL,IAAI,GAAGoN,GAAG,CAACC,IAAJ,CAAS,QAAT,CADX;AAAA,YAEIC,KAAK,GAAGH,IAAI,CAACG,KAAL,GAAaH,IAAI,CAACG,KAAL,IAAc,EAFvC;AAAA,YAGIC,KAAK,GAAGJ,IAAI,CAACI,KAAL,GAAaJ,IAAI,CAACI,KAAL,IAAc,EAHvC;;AAIA,YAAID,KAAK,CAAC7O,GAAD,CAAL,CAAWuB,IAAX,CAAJ,EAAsB;AAClB+M,UAAAA,MAAM,CAACQ,KAAD,EAAQvN,IAAR,CAAN;AACA,iBAAOkN,aAAa,GAAGA,aAAa,CAACI,KAAK,CAACtN,IAAD,CAAN,CAAhB,GAAgCsN,KAAK,CAACtN,IAAD,CAAzD;AACH;;AACDuN,QAAAA,KAAK,CAAC/N,MAAN,IAAgB,GAAhB,IAAuB,OAAO8N,KAAK,CAACC,KAAK,CAACC,KAAN,EAAD,CAAnC;AACAD,QAAAA,KAAK,CAACxM,IAAN,CAAWf,IAAX;AACAsN,QAAAA,KAAK,CAACtN,IAAD,CAAL,GAAcQ,CAAC,CAACU,KAAF,CAAQtB,KAAR,EAAewN,GAAf,CAAd;AACA,eAAOF,aAAa,GAAGA,aAAa,CAACI,KAAK,CAACtN,IAAD,CAAN,CAAhB,GAAgCsN,KAAK,CAACtN,IAAD,CAAzD;AACH;;AACD,aAAOmN,IAAP;AACH;;AACDpF,IAAAA,IAAI,CAACW,CAAL,CAAOuE,MAAP,GAAgBA,MAAhB;;AACA,aAASQ,KAAT,CAAeC,EAAf,EAAmBC,EAAnB,EAAuBC,EAAvB,EAA2BC,EAA3B,EAA+BC,EAA/B,EAAmCC,EAAnC,EAAuC;AACnC,UAAID,EAAE,IAAI,IAAV,EAAgB;AACZ,YAAI5G,CAAC,GAAGwG,EAAE,GAAGE,EAAb;AAAA,YACIvG,CAAC,GAAGsG,EAAE,GAAGE,EADb;;AAEA,YAAI,CAAC3G,CAAD,IAAM,CAACG,CAAX,EAAc;AACV,iBAAO,CAAP;AACH;;AACD,eAAO,CAAC,MAAM6B,IAAI,CAAC8E,KAAL,CAAW,CAAC3G,CAAZ,EAAe,CAACH,CAAhB,IAAqB,GAArB,GAA2BU,EAAjC,GAAsC,GAAvC,IAA8C,GAArD;AACH,OAPD,MAOO;AACH,eAAO6F,KAAK,CAACC,EAAD,EAAKC,EAAL,EAASG,EAAT,EAAaC,EAAb,CAAL,GAAwBN,KAAK,CAACG,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,CAApC;AACH;AACJ;;AACD,aAASE,GAAT,CAAaC,GAAb,EAAkB;AACd,aAAOA,GAAG,GAAG,GAAN,GAAYtG,EAAZ,GAAiB,GAAxB;AACH;;AACD,aAASsG,GAAT,CAAaD,GAAb,EAAkB;AACd,aAAOA,GAAG,GAAG,GAAN,GAAYrG,EAAZ,GAAiB,GAAxB;AACH;;AACD,aAASuG,GAAT,GAAe;AACX,aAAO,KAAKjH,CAAL,GAASuC,CAAT,GAAa,KAAKpC,CAAzB;AACH;;AACD,aAAS+G,OAAT,GAAmB;AACf,aAAO,KAAKlH,CAAL,GAASuC,CAAT,GAAa,KAAKpC,CAAlB,GAAsBoC,CAAtB,GAA0B,KAAK4E,KAA/B,GAAuC,QAAvC,GAAkD,KAAKC,MAA9D;AACH;AAED;;;;;;;;;;AAQAvG,IAAAA,IAAI,CAACkG,GAAL,GAAWA,GAAX;AACA;;;;;;;;;AAQAlG,IAAAA,IAAI,CAACmG,GAAL,GAAWA,GAAX;AACA;;;;;;;;;AAQAnG,IAAAA,IAAI,CAACJ,GAAL,GAAW,UAAU8F,KAAV,EAAiB;AACxB,aAAOvE,IAAI,CAACvB,GAAL,CAASI,IAAI,CAACkG,GAAL,CAASR,KAAT,CAAT,CAAP;AACH,KAFD;AAGA;;;;;;;;;;AAQA1F,IAAAA,IAAI,CAACwG,GAAL,GAAW,UAAUd,KAAV,EAAiB;AACxB,aAAOvE,IAAI,CAACqF,GAAL,CAASxG,IAAI,CAACkG,GAAL,CAASR,KAAT,CAAT,CAAP;AACH,KAFD;AAGA;;;;;;;;;;AAQA1F,IAAAA,IAAI,CAACyG,GAAL,GAAW,UAAUf,KAAV,EAAiB;AACxB,aAAOvE,IAAI,CAACsF,GAAL,CAASzG,IAAI,CAACkG,GAAL,CAASR,KAAT,CAAT,CAAP;AACH,KAFD;AAGA;;;;;;;;;;AAQA1F,IAAAA,IAAI,CAAC0G,IAAL,GAAY,UAAUC,GAAV,EAAe;AACvB,aAAO3G,IAAI,CAACmG,GAAL,CAAShF,IAAI,CAACuF,IAAL,CAAUC,GAAV,CAAT,CAAP;AACH,KAFD;AAGA;;;;;;;;;;AAQA3G,IAAAA,IAAI,CAAC4G,IAAL,GAAY,UAAUD,GAAV,EAAe;AACvB,aAAO3G,IAAI,CAACmG,GAAL,CAAShF,IAAI,CAACyF,IAAL,CAAUD,GAAV,CAAT,CAAP;AACH,KAFD;AAGA;;;;;;;;;;AAQA3G,IAAAA,IAAI,CAAC6G,IAAL,GAAY,UAAUF,GAAV,EAAe;AACvB,aAAO3G,IAAI,CAACmG,GAAL,CAAShF,IAAI,CAAC0F,IAAL,CAAUF,GAAV,CAAT,CAAP;AACH,KAFD;AAGA;;;;;;;;;;AAQA3G,IAAAA,IAAI,CAACiG,KAAL,GAAa,UAAUU,GAAV,EAAe;AACxB,aAAO3G,IAAI,CAACmG,GAAL,CAAShF,IAAI,CAAC8E,KAAL,CAAWU,GAAX,CAAT,CAAP;AACH,KAFD;AAGA;;;;;;;;;;;;;;;;AAcA3G,IAAAA,IAAI,CAAC0F,KAAL,GAAaA,KAAb;AACA;;;;;;;;;;;;;AAYA1F,IAAAA,IAAI,CAAC3B,GAAL,GAAW,UAAUsH,EAAV,EAAcC,EAAd,EAAkBC,EAAlB,EAAsBC,EAAtB,EAA0B;AACjC,aAAOlH,IAAI,CAACM,IAAL,CAAUc,IAAI,CAAC8G,IAAL,CAAUnB,EAAV,EAAcC,EAAd,EAAkBC,EAAlB,EAAsBC,EAAtB,CAAV,CAAP;AACH,KAFD;AAGA;;;;;;;;;;;;;;AAYA9F,IAAAA,IAAI,CAAC8G,IAAL,GAAY,UAAUnB,EAAV,EAAcC,EAAd,EAAkBC,EAAlB,EAAsBC,EAAtB,EAA0B;AAClC,aAAO,CAACH,EAAE,GAAGE,EAAN,KAAaF,EAAE,GAAGE,EAAlB,IAAwB,CAACD,EAAE,GAAGE,EAAN,KAAaF,EAAE,GAAGE,EAAlB,CAA/B;AACH,KAFD;AAGA;;;;;;;;;;;;;;;;;AAiBA;;;AACA9F,IAAAA,IAAI,CAAC+G,YAAL,GAAoB,UAAUC,IAAV,EAAgB7H,CAAhB,EAAmBG,CAAnB,EAAsB;AACtC,eAAS2H,SAAT,CAAmBlH,CAAnB,EAAsB;AAClB,YAAImH,EAAE,GAAGnH,CAAC,CAACZ,CAAF,GAAMA,CAAf;AAAA,YACIgI,EAAE,GAAGpH,CAAC,CAACT,CAAF,GAAMA,CADf;AAEA,eAAO4H,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAtB;AACH;;AACD,UAAIC,QAAQ,GAAGJ,IAAI,CAACK,IAApB;AAAA,UACIC,UAAU,GAAGF,QAAQ,CAACG,cAAT,EADjB;AAAA,UAEIC,SAAS,GAAGF,UAAU,GAAGF,QAAQ,CAACK,WAAT,CAAqBC,aAAlC,GAAkD,IAFlE;AAAA,UAGIC,IAHJ;AAAA,UAIIC,UAJJ;AAAA,UAKIC,YAAY,GAAGC,QALnB,CANsC,CAatC;;AACA,WAAK,IAAIC,IAAJ,EAAUC,UAAU,GAAG,CAAvB,EAA0BC,YAA/B,EAA6CD,UAAU,IAAIV,UAA3D,EAAuEU,UAAU,IAAIR,SAArF,EAAgG;AAC5F,YAAI,CAACS,YAAY,GAAGhB,SAAS,CAACc,IAAI,GAAGX,QAAQ,CAACc,gBAAT,CAA0BF,UAA1B,CAAR,CAAzB,IAA2EH,YAA/E,EAA6F;AACzFF,UAAAA,IAAI,GAAGI,IAAP,EAAaH,UAAU,GAAGI,UAA1B,EAAsCH,YAAY,GAAGI,YAArD;AACH;AACJ,OAlBqC,CAoBtC;;;AACAT,MAAAA,SAAS,IAAI,EAAb;;AACA,aAAOA,SAAS,GAAG,EAAnB,EAAuB;AACnB,YAAIW,MAAJ,EACIC,KADJ,EAEIC,YAFJ,EAGIC,WAHJ,EAIIC,cAJJ,EAKIC,aALJ;;AAMA,YAAI,CAACH,YAAY,GAAGT,UAAU,GAAGJ,SAA7B,KAA2C,CAA3C,IAAgD,CAACe,cAAc,GAAGtB,SAAS,CAACkB,MAAM,GAAGf,QAAQ,CAACc,gBAAT,CAA0BG,YAA1B,CAAV,CAA3B,IAAiFR,YAArI,EAAmJ;AAC/IF,UAAAA,IAAI,GAAGQ,MAAP,EAAeP,UAAU,GAAGS,YAA5B,EAA0CR,YAAY,GAAGU,cAAzD;AACH,SAFD,MAEO,IAAI,CAACD,WAAW,GAAGV,UAAU,GAAGJ,SAA5B,KAA0CF,UAA1C,IAAwD,CAACkB,aAAa,GAAGvB,SAAS,CAACmB,KAAK,GAAGhB,QAAQ,CAACc,gBAAT,CAA0BI,WAA1B,CAAT,CAA1B,IAA8ET,YAA1I,EAAwJ;AAC3JF,UAAAA,IAAI,GAAGS,KAAP,EAAcR,UAAU,GAAGU,WAA3B,EAAwCT,YAAY,GAAGW,aAAvD;AACH,SAFM,MAEA;AACHhB,UAAAA,SAAS,IAAI,EAAb;AACH;AACJ;;AAEDG,MAAAA,IAAI,GAAG;AACHxI,QAAAA,CAAC,EAAEwI,IAAI,CAACxI,CADL;AAEHG,QAAAA,CAAC,EAAEqI,IAAI,CAACrI,CAFL;AAGH7H,QAAAA,MAAM,EAAEmQ,UAHL;AAIHa,QAAAA,QAAQ,EAAE7J,IAAI,CAACM,IAAL,CAAU2I,YAAV;AAJP,OAAP;AAMA,aAAOF,IAAP;AACH,KA7CD;AA8CA;;;;;;;;;;;AASA3H,IAAAA,IAAI,CAACM,EAAL,GAAUA,EAAV;AACA;;;;;;;;;;;AAUAN,IAAAA,IAAI,CAAC0I,MAAL,GAAc,UAAUC,MAAV,EAAkBC,KAAlB,EAAyBC,SAAzB,EAAoC;AAC9CA,MAAAA,SAAS,GAAGvI,EAAE,CAACuI,SAAD,EAAY,QAAZ,CAAF,GAA0BA,SAA1B,GAAsC,EAAlD;;AACA,UAAIvI,EAAE,CAACqI,MAAD,EAAS,OAAT,CAAN,EAAyB;AACrB,YAAIpR,CAAC,GAAGoR,MAAM,CAAClR,MAAf;;AACA,eAAOF,CAAC,EAAR,EAAY,IAAI8H,GAAG,CAACsJ,MAAM,CAACpR,CAAD,CAAN,GAAYqR,KAAb,CAAH,IAA0BC,SAA9B,EAAyC;AACjD,iBAAOF,MAAM,CAACpR,CAAD,CAAb;AACH;AACJ,OALD,MAKO;AACHoR,QAAAA,MAAM,GAAG,CAACA,MAAV;AACA,YAAIG,GAAG,GAAGF,KAAK,GAAGD,MAAlB;;AACA,YAAIG,GAAG,GAAGD,SAAV,EAAqB;AACjB,iBAAOD,KAAK,GAAGE,GAAf;AACH;;AACD,YAAIA,GAAG,GAAGH,MAAM,GAAGE,SAAnB,EAA8B;AAC1B,iBAAOD,KAAK,GAAGE,GAAR,GAAcH,MAArB;AACH;AACJ;;AACD,aAAOC,KAAP;AACH,KAlBD,CA3e2B,CA8f3B;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA5I,IAAAA,IAAI,CAAC+I,MAAL,GAAc7D,MAAM,CAAC,UAAU8D,MAAV,EAAkB;AACnC,UAAI,CAACA,MAAD,IAAW,CAAC,EAAE,CAACA,MAAM,GAAGlI,GAAG,CAACkI,MAAD,CAAb,EAAuBC,OAAvB,CAA+B,GAA/B,IAAsC,CAAxC,CAAhB,EAA4D;AACxD,eAAO;AAACC,UAAAA,CAAC,EAAE,CAAC,CAAL;AAAQC,UAAAA,CAAC,EAAE,CAAC,CAAZ;AAAelS,UAAAA,CAAC,EAAE,CAAC,CAAnB;AAAsBmS,UAAAA,GAAG,EAAE,MAA3B;AAAmCC,UAAAA,KAAK,EAAE,CAA1C;AAA6CpO,UAAAA,QAAQ,EAAEqO;AAAvD,SAAP;AACH;;AACD,UAAIN,MAAM,IAAI,MAAd,EAAsB;AAClB,eAAO;AAACE,UAAAA,CAAC,EAAE,CAAC,CAAL;AAAQC,UAAAA,CAAC,EAAE,CAAC,CAAZ;AAAelS,UAAAA,CAAC,EAAE,CAAC,CAAnB;AAAsBmS,UAAAA,GAAG,EAAE,MAA3B;AAAmCnO,UAAAA,QAAQ,EAAEqO;AAA7C,SAAP;AACH;;AACD,QAAEpH,IAAI,CAACxL,GAAD,CAAJ,CAAUsS,MAAM,CAAC/E,WAAP,GAAqBb,SAArB,CAA+B,CAA/B,EAAkC,CAAlC,CAAV,KAAmD4F,MAAM,CAACO,MAAP,MAAmB,GAAxE,MAAiFP,MAAM,GAAGQ,KAAK,CAACR,MAAD,CAA/F;;AACA,UAAI,CAACA,MAAL,EAAa;AACT,eAAO;AAACE,UAAAA,CAAC,EAAE,CAAC,CAAL;AAAQC,UAAAA,CAAC,EAAE,CAAC,CAAZ;AAAelS,UAAAA,CAAC,EAAE,CAAC,CAAnB;AAAsBmS,UAAAA,GAAG,EAAE,MAA3B;AAAmCC,UAAAA,KAAK,EAAE,CAA1C;AAA6CpO,UAAAA,QAAQ,EAAEqO;AAAvD,SAAP;AACH;;AACD,UAAI1M,GAAJ;AAAA,UACI6M,GADJ;AAAA,UAEIC,KAFJ;AAAA,UAGIC,IAHJ;AAAA,UAIIC,OAJJ;AAAA,UAKIpK,CALJ;AAAA,UAMImJ,MANJ;AAAA,UAOIkB,GAAG,GAAGb,MAAM,CAACc,KAAP,CAAajI,YAAb,CAPV;;AAQA,UAAIgI,GAAJ,EAAS;AACL,YAAIA,GAAG,CAAC,CAAD,CAAP,EAAY;AACRF,UAAAA,IAAI,GAAG1I,KAAK,CAAC4I,GAAG,CAAC,CAAD,CAAH,CAAOzG,SAAP,CAAiB,CAAjB,CAAD,EAAsB,EAAtB,CAAZ;AACAsG,UAAAA,KAAK,GAAGzI,KAAK,CAAC4I,GAAG,CAAC,CAAD,CAAH,CAAOzG,SAAP,CAAiB,CAAjB,EAAoB,CAApB,CAAD,EAAyB,EAAzB,CAAb;AACAqG,UAAAA,GAAG,GAAGxI,KAAK,CAAC4I,GAAG,CAAC,CAAD,CAAH,CAAOzG,SAAP,CAAiB,CAAjB,EAAoB,CAApB,CAAD,EAAyB,EAAzB,CAAX;AACH;;AACD,YAAIyG,GAAG,CAAC,CAAD,CAAP,EAAY;AACRF,UAAAA,IAAI,GAAG1I,KAAK,CAAC,CAACzB,CAAC,GAAGqK,GAAG,CAAC,CAAD,CAAH,CAAON,MAAP,CAAc,CAAd,CAAL,IAAyB/J,CAA1B,EAA6B,EAA7B,CAAZ;AACAkK,UAAAA,KAAK,GAAGzI,KAAK,CAAC,CAACzB,CAAC,GAAGqK,GAAG,CAAC,CAAD,CAAH,CAAON,MAAP,CAAc,CAAd,CAAL,IAAyB/J,CAA1B,EAA6B,EAA7B,CAAb;AACAiK,UAAAA,GAAG,GAAGxI,KAAK,CAAC,CAACzB,CAAC,GAAGqK,GAAG,CAAC,CAAD,CAAH,CAAON,MAAP,CAAc,CAAd,CAAL,IAAyB/J,CAA1B,EAA6B,EAA7B,CAAX;AACH;;AACD,YAAIqK,GAAG,CAAC,CAAD,CAAP,EAAY;AACRlB,UAAAA,MAAM,GAAGkB,GAAG,CAAC,CAAD,CAAH,CAAOvQ,KAAP,CAAa2I,WAAb,CAAT;AACAwH,UAAAA,GAAG,GAAG1I,OAAO,CAAC4H,MAAM,CAAC,CAAD,CAAP,CAAb;AACAA,UAAAA,MAAM,CAAC,CAAD,CAAN,CAAUvQ,KAAV,CAAgB,CAAC,CAAjB,KAAuB,GAAvB,KAA+BqR,GAAG,IAAI,IAAtC;AACAC,UAAAA,KAAK,GAAG3I,OAAO,CAAC4H,MAAM,CAAC,CAAD,CAAP,CAAf;AACAA,UAAAA,MAAM,CAAC,CAAD,CAAN,CAAUvQ,KAAV,CAAgB,CAAC,CAAjB,KAAuB,GAAvB,KAA+BsR,KAAK,IAAI,IAAxC;AACAC,UAAAA,IAAI,GAAG5I,OAAO,CAAC4H,MAAM,CAAC,CAAD,CAAP,CAAd;AACAA,UAAAA,MAAM,CAAC,CAAD,CAAN,CAAUvQ,KAAV,CAAgB,CAAC,CAAjB,KAAuB,GAAvB,KAA+BuR,IAAI,IAAI,IAAvC;AACAE,UAAAA,GAAG,CAAC,CAAD,CAAH,CAAO5F,WAAP,GAAqB7L,KAArB,CAA2B,CAA3B,EAA8B,CAA9B,KAAoC,MAApC,KAA+CwR,OAAO,GAAG7I,OAAO,CAAC4H,MAAM,CAAC,CAAD,CAAP,CAAhE;AACAA,UAAAA,MAAM,CAAC,CAAD,CAAN,IAAaA,MAAM,CAAC,CAAD,CAAN,CAAUvQ,KAAV,CAAgB,CAAC,CAAjB,KAAuB,GAApC,KAA4CwR,OAAO,IAAI,GAAvD;AACH;;AACD,YAAIC,GAAG,CAAC,CAAD,CAAP,EAAY;AACRlB,UAAAA,MAAM,GAAGkB,GAAG,CAAC,CAAD,CAAH,CAAOvQ,KAAP,CAAa2I,WAAb,CAAT;AACAwH,UAAAA,GAAG,GAAG1I,OAAO,CAAC4H,MAAM,CAAC,CAAD,CAAP,CAAb;AACAA,UAAAA,MAAM,CAAC,CAAD,CAAN,CAAUvQ,KAAV,CAAgB,CAAC,CAAjB,KAAuB,GAAvB,KAA+BqR,GAAG,IAAI,GAAtC;AACAC,UAAAA,KAAK,GAAG3I,OAAO,CAAC4H,MAAM,CAAC,CAAD,CAAP,CAAf;AACAA,UAAAA,MAAM,CAAC,CAAD,CAAN,CAAUvQ,KAAV,CAAgB,CAAC,CAAjB,KAAuB,GAAvB,KAA+BsR,KAAK,IAAI,GAAxC;AACAC,UAAAA,IAAI,GAAG5I,OAAO,CAAC4H,MAAM,CAAC,CAAD,CAAP,CAAd;AACAA,UAAAA,MAAM,CAAC,CAAD,CAAN,CAAUvQ,KAAV,CAAgB,CAAC,CAAjB,KAAuB,GAAvB,KAA+BuR,IAAI,IAAI,GAAvC;AACA,WAAChB,MAAM,CAAC,CAAD,CAAN,CAAUvQ,KAAV,CAAgB,CAAC,CAAjB,KAAuB,KAAvB,IAAgCuQ,MAAM,CAAC,CAAD,CAAN,CAAUvQ,KAAV,CAAgB,CAAC,CAAjB,KAAuB,MAAxD,MAAoEqR,GAAG,IAAI,GAA3E;AACAI,UAAAA,GAAG,CAAC,CAAD,CAAH,CAAO5F,WAAP,GAAqB7L,KAArB,CAA2B,CAA3B,EAA8B,CAA9B,KAAoC,MAApC,KAA+CwR,OAAO,GAAG7I,OAAO,CAAC4H,MAAM,CAAC,CAAD,CAAP,CAAhE;AACAA,UAAAA,MAAM,CAAC,CAAD,CAAN,IAAaA,MAAM,CAAC,CAAD,CAAN,CAAUvQ,KAAV,CAAgB,CAAC,CAAjB,KAAuB,GAApC,KAA4CwR,OAAO,IAAI,GAAvD;AACA,iBAAO5J,IAAI,CAAC+J,OAAL,CAAaN,GAAb,EAAkBC,KAAlB,EAAyBC,IAAzB,EAA+BC,OAA/B,CAAP;AACH;;AACD,YAAIC,GAAG,CAAC,CAAD,CAAP,EAAY;AACRlB,UAAAA,MAAM,GAAGkB,GAAG,CAAC,CAAD,CAAH,CAAOvQ,KAAP,CAAa2I,WAAb,CAAT;AACAwH,UAAAA,GAAG,GAAG1I,OAAO,CAAC4H,MAAM,CAAC,CAAD,CAAP,CAAb;AACAA,UAAAA,MAAM,CAAC,CAAD,CAAN,CAAUvQ,KAAV,CAAgB,CAAC,CAAjB,KAAuB,GAAvB,KAA+BqR,GAAG,IAAI,GAAtC;AACAC,UAAAA,KAAK,GAAG3I,OAAO,CAAC4H,MAAM,CAAC,CAAD,CAAP,CAAf;AACAA,UAAAA,MAAM,CAAC,CAAD,CAAN,CAAUvQ,KAAV,CAAgB,CAAC,CAAjB,KAAuB,GAAvB,KAA+BsR,KAAK,IAAI,GAAxC;AACAC,UAAAA,IAAI,GAAG5I,OAAO,CAAC4H,MAAM,CAAC,CAAD,CAAP,CAAd;AACAA,UAAAA,MAAM,CAAC,CAAD,CAAN,CAAUvQ,KAAV,CAAgB,CAAC,CAAjB,KAAuB,GAAvB,KAA+BuR,IAAI,IAAI,GAAvC;AACA,WAAChB,MAAM,CAAC,CAAD,CAAN,CAAUvQ,KAAV,CAAgB,CAAC,CAAjB,KAAuB,KAAvB,IAAgCuQ,MAAM,CAAC,CAAD,CAAN,CAAUvQ,KAAV,CAAgB,CAAC,CAAjB,KAAuB,MAAxD,MAAoEqR,GAAG,IAAI,GAA3E;AACAI,UAAAA,GAAG,CAAC,CAAD,CAAH,CAAO5F,WAAP,GAAqB7L,KAArB,CAA2B,CAA3B,EAA8B,CAA9B,KAAoC,MAApC,KAA+CwR,OAAO,GAAG7I,OAAO,CAAC4H,MAAM,CAAC,CAAD,CAAP,CAAhE;AACAA,UAAAA,MAAM,CAAC,CAAD,CAAN,IAAaA,MAAM,CAAC,CAAD,CAAN,CAAUvQ,KAAV,CAAgB,CAAC,CAAjB,KAAuB,GAApC,KAA4CwR,OAAO,IAAI,GAAvD;AACA,iBAAO5J,IAAI,CAACgK,OAAL,CAAaP,GAAb,EAAkBC,KAAlB,EAAyBC,IAAzB,EAA+BC,OAA/B,CAAP;AACH;;AACDH,QAAAA,GAAG,GAAGnI,IAAI,CAACH,IAAI,CAACK,KAAL,CAAWiI,GAAX,CAAD,EAAkB,GAAlB,CAAV;AACAC,QAAAA,KAAK,GAAGpI,IAAI,CAACH,IAAI,CAACK,KAAL,CAAWkI,KAAX,CAAD,EAAoB,GAApB,CAAZ;AACAC,QAAAA,IAAI,GAAGrI,IAAI,CAACH,IAAI,CAACK,KAAL,CAAWmI,IAAX,CAAD,EAAmB,GAAnB,CAAX;AACAC,QAAAA,OAAO,GAAGtI,IAAI,CAACF,IAAI,CAACwI,OAAD,EAAU,CAAV,CAAL,EAAmB,CAAnB,CAAd;AACAC,QAAAA,GAAG,GAAG;AAACX,UAAAA,CAAC,EAAEO,GAAJ;AAASN,UAAAA,CAAC,EAAEO,KAAZ;AAAmBzS,UAAAA,CAAC,EAAE0S,IAAtB;AAA4B1O,UAAAA,QAAQ,EAAEqO;AAAtC,SAAN;AACAO,QAAAA,GAAG,CAACT,GAAJ,GAAU,MAAM,CAAC,WAAWO,IAAX,GAAmBD,KAAK,IAAI,CAA5B,GAAkCD,GAAG,IAAI,EAA1C,EAA+CxO,QAA/C,CAAwD,EAAxD,EAA4D7C,KAA5D,CAAkE,CAAlE,CAAhB;AACAyR,QAAAA,GAAG,CAACD,OAAJ,GAActJ,EAAE,CAACsJ,OAAD,EAAU,QAAV,CAAF,GAAwBA,OAAxB,GAAkC,CAAhD;AACA,eAAOC,GAAP;AACH;;AACD,aAAO;AAACX,QAAAA,CAAC,EAAE,CAAC,CAAL;AAAQC,QAAAA,CAAC,EAAE,CAAC,CAAZ;AAAelS,QAAAA,CAAC,EAAE,CAAC,CAAnB;AAAsBmS,QAAAA,GAAG,EAAE,MAA3B;AAAmCC,QAAAA,KAAK,EAAE,CAA1C;AAA6CpO,QAAAA,QAAQ,EAAEqO;AAAvD,OAAP;AACH,KA7EmB,EA6EjBtJ,IA7EiB,CAApB;AA8EA;;;;;;;;;;;AAUAA,IAAAA,IAAI,CAACiK,GAAL,GAAW/E,MAAM,CAAC,UAAU/E,CAAV,EAAahD,CAAb,EAAgBlG,CAAhB,EAAmB;AACjC,aAAO+I,IAAI,CAAC+J,OAAL,CAAa5J,CAAb,EAAgBhD,CAAhB,EAAmBlG,CAAnB,EAAsBmS,GAA7B;AACH,KAFgB,CAAjB;AAGA;;;;;;;;;;;AAUApJ,IAAAA,IAAI,CAACkK,GAAL,GAAWhF,MAAM,CAAC,UAAU/E,CAAV,EAAahD,CAAb,EAAgBzE,CAAhB,EAAmB;AACjC,aAAOsH,IAAI,CAACgK,OAAL,CAAa7J,CAAb,EAAgBhD,CAAhB,EAAmBzE,CAAnB,EAAsB0Q,GAA7B;AACH,KAFgB,CAAjB;AAGA;;;;;;;;;;;AAUApJ,IAAAA,IAAI,CAAC6J,GAAL,GAAW3E,MAAM,CAAC,UAAUgE,CAAV,EAAaC,CAAb,EAAgBlS,CAAhB,EAAmB+M,CAAnB,EAAsB;AACpC,UAAI1D,EAAE,CAAC0D,CAAD,EAAI,QAAJ,CAAN,EAAqB;AACjB,YAAIxC,KAAK,GAAGL,IAAI,CAACK,KAAjB;AACA,eAAO,UAAU,CAACA,KAAK,CAAC0H,CAAD,CAAN,EAAW1H,KAAK,CAAC2H,CAAD,CAAhB,EAAqB3H,KAAK,CAACvK,CAAD,CAA1B,EAA+B,CAAC+M,CAAC,CAACmG,OAAF,CAAU,CAAV,CAAhC,CAAV,GAA0D,GAAjE;AACH;;AACD,aAAO,MAAM,CAAC,WAAWlT,CAAX,GAAgBkS,CAAC,IAAI,CAArB,GAA2BD,CAAC,IAAI,EAAjC,EAAsCjO,QAAtC,CAA+C,EAA/C,EAAmD7C,KAAnD,CAAyD,CAAzD,CAAb;AACH,KANgB,CAAjB;;AAOA,QAAIoR,KAAK,GAAG,UAAUY,KAAV,EAAiB;AACzB,UAAI7S,CAAC,GAAGf,IAAI,CAACgK,GAAL,CAAS6J,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,KAA4C7T,IAAI,CAACgK,GAAL,CAAS6J,oBAAT,CAA8B,KAA9B,EAAqC,CAArC,CAApD;AAAA,UACIZ,GAAG,GAAG,gBADV;AAEAD,MAAAA,KAAK,GAAGtE,MAAM,CAAC,UAAUkF,KAAV,EAAiB;AAC5B,YAAIA,KAAK,CAACnG,WAAN,MAAuB,KAA3B,EAAkC;AAC9B,iBAAOwF,GAAP;AACH;;AACDlS,QAAAA,CAAC,CAAC+S,KAAF,CAAQF,KAAR,GAAgBX,GAAhB;AACAlS,QAAAA,CAAC,CAAC+S,KAAF,CAAQF,KAAR,GAAgBA,KAAhB;AACA,YAAIvR,GAAG,GAAGrC,IAAI,CAACgK,GAAL,CAAS+J,WAAT,CAAqBC,gBAArB,CAAsCjT,CAAtC,EAAyCkK,CAAzC,EAA4CgJ,gBAA5C,CAA6D,OAA7D,CAAV;AACA,eAAO5R,GAAG,IAAI4Q,GAAP,GAAa,IAAb,GAAoB5Q,GAA3B;AACH,OARa,CAAd;AASA,aAAO2Q,KAAK,CAACY,KAAD,CAAZ;AACH,KAbD;AAAA,QAcAM,WAAW,GAAG,YAAY;AACtB,aAAO,SAAS,CAAC,KAAKvK,CAAN,EAAS,KAAKhD,CAAd,EAAiB,KAAKlG,CAAtB,CAAT,GAAoC,GAA3C;AACH,KAhBD;AAAA,QAiBA0T,WAAW,GAAG,YAAY;AACtB,aAAO,SAAS,CAAC,KAAKxK,CAAN,EAAS,KAAKhD,CAAd,EAAiB,KAAKzE,CAAtB,CAAT,GAAoC,GAA3C;AACH,KAnBD;AAAA,QAoBA4Q,WAAW,GAAG,YAAY;AACtB,aAAO,KAAKM,OAAL,IAAgB,CAAhB,IAAqB,KAAKA,OAAL,IAAgB,IAArC,GACC,KAAKR,GADN,GAEC,UAAU,CAAC,KAAKF,CAAN,EAAS,KAAKC,CAAd,EAAiB,KAAKlS,CAAtB,EAAyB,KAAK2S,OAA9B,CAAV,GAAmD,GAF3D;AAGH,KAxBD;AAAA,QAyBAgB,UAAU,GAAG,UAAU1B,CAAV,EAAaC,CAAb,EAAgBlS,CAAhB,EAAmB;AAC5B,UAAIkS,CAAC,IAAI,IAAL,IAAa7I,EAAE,CAAC4I,CAAD,EAAI,QAAJ,CAAf,IAAgC,OAAOA,CAAvC,IAA4C,OAAOA,CAAnD,IAAwD,OAAOA,CAAnE,EAAsE;AAClEjS,QAAAA,CAAC,GAAGiS,CAAC,CAACjS,CAAN;AACAkS,QAAAA,CAAC,GAAGD,CAAC,CAACC,CAAN;AACAD,QAAAA,CAAC,GAAGA,CAAC,CAACA,CAAN;AACH;;AACD,UAAIC,CAAC,IAAI,IAAL,IAAa7I,EAAE,CAAC4I,CAAD,EAAI2B,MAAJ,CAAnB,EAAgC;AAC5B,YAAIC,GAAG,GAAG9K,IAAI,CAAC+I,MAAL,CAAYG,CAAZ,CAAV;AACAA,QAAAA,CAAC,GAAG4B,GAAG,CAAC5B,CAAR;AACAC,QAAAA,CAAC,GAAG2B,GAAG,CAAC3B,CAAR;AACAlS,QAAAA,CAAC,GAAG6T,GAAG,CAAC7T,CAAR;AACH;;AACD,UAAIiS,CAAC,GAAG,CAAJ,IAASC,CAAC,GAAG,CAAb,IAAkBlS,CAAC,GAAG,CAA1B,EAA6B;AACzBiS,QAAAA,CAAC,IAAI,GAAL;AACAC,QAAAA,CAAC,IAAI,GAAL;AACAlS,QAAAA,CAAC,IAAI,GAAL;AACH;;AAED,aAAO,CAACiS,CAAD,EAAIC,CAAJ,EAAOlS,CAAP,CAAP;AACH,KA5CD;AAAA,QA6CA8T,UAAU,GAAG,UAAU7B,CAAV,EAAaC,CAAb,EAAgBlS,CAAhB,EAAmB+M,CAAnB,EAAsB;AAC/BkF,MAAAA,CAAC,GAAG/H,IAAI,CAACK,KAAL,CAAW0H,CAAC,GAAG,GAAf,CAAJ;AACAC,MAAAA,CAAC,GAAGhI,IAAI,CAACK,KAAL,CAAW2H,CAAC,GAAG,GAAf,CAAJ;AACAlS,MAAAA,CAAC,GAAGkK,IAAI,CAACK,KAAL,CAAWvK,CAAC,GAAG,GAAf,CAAJ;AACA,UAAI4S,GAAG,GAAG;AACNX,QAAAA,CAAC,EAAEA,CADG;AAENC,QAAAA,CAAC,EAAEA,CAFG;AAGNlS,QAAAA,CAAC,EAAEA,CAHG;AAIN2S,QAAAA,OAAO,EAAEtJ,EAAE,CAAC0D,CAAD,EAAI,QAAJ,CAAF,GAAkBA,CAAlB,GAAsB,CAJzB;AAKNoF,QAAAA,GAAG,EAAEpJ,IAAI,CAAC6J,GAAL,CAASX,CAAT,EAAYC,CAAZ,EAAelS,CAAf,CALC;AAMNgE,QAAAA,QAAQ,EAAEqO;AANJ,OAAV;AAQAhJ,MAAAA,EAAE,CAAC0D,CAAD,EAAI,QAAJ,CAAF,KAAoB6F,GAAG,CAACD,OAAJ,GAAc5F,CAAlC;AACA,aAAO6F,GAAP;AACH,KA3DD;AA4DA;;;;;;;;;;;;;;;;;;;;;AAmBA7J,IAAAA,IAAI,CAACoK,KAAL,GAAa,UAAUU,GAAV,EAAe;AACxB,UAAIjB,GAAJ;;AACA,UAAIvJ,EAAE,CAACwK,GAAD,EAAM,QAAN,CAAF,IAAqB,OAAOA,GAA5B,IAAmC,OAAOA,GAA1C,IAAiD,OAAOA,GAA5D,EAAiE;AAC7DjB,QAAAA,GAAG,GAAG7J,IAAI,CAAC+J,OAAL,CAAae,GAAb,CAAN;AACAA,QAAAA,GAAG,CAAC5B,CAAJ,GAAQW,GAAG,CAACX,CAAZ;AACA4B,QAAAA,GAAG,CAAC3B,CAAJ,GAAQU,GAAG,CAACV,CAAZ;AACA2B,QAAAA,GAAG,CAAC7T,CAAJ,GAAQ4S,GAAG,CAAC5S,CAAZ;AACA6T,QAAAA,GAAG,CAAClB,OAAJ,GAAc,CAAd;AACAkB,QAAAA,GAAG,CAAC1B,GAAJ,GAAUS,GAAG,CAACT,GAAd;AACH,OAPD,MAOO,IAAI9I,EAAE,CAACwK,GAAD,EAAM,QAAN,CAAF,IAAqB,OAAOA,GAA5B,IAAmC,OAAOA,GAA1C,IAAiD,OAAOA,GAA5D,EAAiE;AACpEjB,QAAAA,GAAG,GAAG7J,IAAI,CAACgK,OAAL,CAAac,GAAb,CAAN;AACAA,QAAAA,GAAG,CAAC5B,CAAJ,GAAQW,GAAG,CAACX,CAAZ;AACA4B,QAAAA,GAAG,CAAC3B,CAAJ,GAAQU,GAAG,CAACV,CAAZ;AACA2B,QAAAA,GAAG,CAAC7T,CAAJ,GAAQ4S,GAAG,CAAC5S,CAAZ;AACA6T,QAAAA,GAAG,CAAClB,OAAJ,GAAc,CAAd;AACAkB,QAAAA,GAAG,CAAC1B,GAAJ,GAAUS,GAAG,CAACT,GAAd;AACH,OAPM,MAOA;AACH,YAAI9I,EAAE,CAACwK,GAAD,EAAM,QAAN,CAAN,EAAuB;AACnBA,UAAAA,GAAG,GAAG9K,IAAI,CAAC+I,MAAL,CAAY+B,GAAZ,CAAN;AACH;;AACD,YAAIxK,EAAE,CAACwK,GAAD,EAAM,QAAN,CAAF,IAAqB,OAAOA,GAA5B,IAAmC,OAAOA,GAA1C,IAAiD,OAAOA,GAAxD,IAA+D,EAAE,WAAWA,GAAb,CAAnE,EAAsF;AAClFjB,UAAAA,GAAG,GAAG7J,IAAI,CAACgL,OAAL,CAAaF,GAAb,CAAN;AACAA,UAAAA,GAAG,CAAC3K,CAAJ,GAAQ0J,GAAG,CAAC1J,CAAZ;AACA2K,UAAAA,GAAG,CAAC3N,CAAJ,GAAQ0M,GAAG,CAAC1M,CAAZ;AACA2N,UAAAA,GAAG,CAACpS,CAAJ,GAAQmR,GAAG,CAACnR,CAAZ;AACAmR,UAAAA,GAAG,GAAG7J,IAAI,CAACiL,OAAL,CAAaH,GAAb,CAAN;AACAA,UAAAA,GAAG,CAACI,CAAJ,GAAQrB,GAAG,CAAC5S,CAAZ;AACH,SAPD,MAOO;AACH6T,UAAAA,GAAG,GAAG;AAAC1B,YAAAA,GAAG,EAAE;AAAN,WAAN;AACA0B,UAAAA,GAAG,CAAC5B,CAAJ,GAAQ4B,GAAG,CAAC3B,CAAJ,GAAQ2B,GAAG,CAAC7T,CAAJ,GAAQ6T,GAAG,CAAC3K,CAAJ,GAAQ2K,GAAG,CAAC3N,CAAJ,GAAQ2N,GAAG,CAACI,CAAJ,GAAQJ,GAAG,CAACpS,CAAJ,GAAQ,CAAC,CAAzD;AACAoS,UAAAA,GAAG,CAACzB,KAAJ,GAAY,CAAZ;AACH;AACJ;;AACDyB,MAAAA,GAAG,CAAC7P,QAAJ,GAAeqO,WAAf;AACA,aAAOwB,GAAP;AACH,KAnCD;AAoCA;;;;;;;;;;;;;;;;;;AAgBA9K,IAAAA,IAAI,CAAC+J,OAAL,GAAe,UAAU5J,CAAV,EAAahD,CAAb,EAAgB+N,CAAhB,EAAmBlH,CAAnB,EAAsB;AACjC,UAAI1D,EAAE,CAACH,CAAD,EAAI,QAAJ,CAAF,IAAmB,OAAOA,CAA1B,IAA+B,OAAOA,CAAtC,IAA2C,OAAOA,CAAtD,EAAyD;AACrD+K,QAAAA,CAAC,GAAG/K,CAAC,CAAClJ,CAAN;AACAkG,QAAAA,CAAC,GAAGgD,CAAC,CAAChD,CAAN;AACA6G,QAAAA,CAAC,GAAG7D,CAAC,CAAC6D,CAAN;AACA7D,QAAAA,CAAC,GAAGA,CAAC,CAACA,CAAN;AACH;;AACDA,MAAAA,CAAC,IAAI,GAAL;AACA,UAAIgL,CAAJ,EAAOC,CAAP,EAAUzO,CAAV,EAAayC,CAAb,EAAgBiM,CAAhB;AACAlL,MAAAA,CAAC,GAAIA,CAAC,GAAG,GAAL,GAAY,EAAhB;AACAkL,MAAAA,CAAC,GAAGH,CAAC,GAAG/N,CAAR;AACAiC,MAAAA,CAAC,GAAGiM,CAAC,IAAI,IAAIhM,GAAG,CAACc,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAX,CAAL;AACAgL,MAAAA,CAAC,GAAGC,CAAC,GAAGzO,CAAC,GAAGuO,CAAC,GAAGG,CAAhB;AAEAlL,MAAAA,CAAC,GAAG,CAAC,CAACA,CAAN;AACAgL,MAAAA,CAAC,IAAI,CAACE,CAAD,EAAIjM,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAaA,CAAb,EAAgBiM,CAAhB,EAAmBlL,CAAnB,CAAL;AACAiL,MAAAA,CAAC,IAAI,CAAChM,CAAD,EAAIiM,CAAJ,EAAOA,CAAP,EAAUjM,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmBe,CAAnB,CAAL;AACAxD,MAAAA,CAAC,IAAI,CAAC,CAAD,EAAI,CAAJ,EAAOyC,CAAP,EAAUiM,CAAV,EAAaA,CAAb,EAAgBjM,CAAhB,EAAmBe,CAAnB,CAAL;AACA,aAAO4K,UAAU,CAACI,CAAD,EAAIC,CAAJ,EAAOzO,CAAP,EAAUqH,CAAV,CAAjB;AACH,KAnBD;AAoBA;;;;;;;;;;;;;;;;;;AAgBAhE,IAAAA,IAAI,CAACgK,OAAL,GAAe,UAAU7J,CAAV,EAAahD,CAAb,EAAgBzE,CAAhB,EAAmBsL,CAAnB,EAAsB;AACjC,UAAI1D,EAAE,CAACH,CAAD,EAAI,QAAJ,CAAF,IAAmB,OAAOA,CAA1B,IAA+B,OAAOA,CAAtC,IAA2C,OAAOA,CAAtD,EAAyD;AACrDzH,QAAAA,CAAC,GAAGyH,CAAC,CAACzH,CAAN;AACAyE,QAAAA,CAAC,GAAGgD,CAAC,CAAChD,CAAN;AACAgD,QAAAA,CAAC,GAAGA,CAAC,CAACA,CAAN;AACH;;AACD,UAAIA,CAAC,GAAG,CAAJ,IAAShD,CAAC,GAAG,CAAb,IAAkBzE,CAAC,GAAG,CAA1B,EAA6B;AACzByH,QAAAA,CAAC,IAAI,GAAL;AACAhD,QAAAA,CAAC,IAAI,GAAL;AACAzE,QAAAA,CAAC,IAAI,GAAL;AACH;;AACDyH,MAAAA,CAAC,IAAI,GAAL;AACA,UAAIgL,CAAJ,EAAOC,CAAP,EAAUzO,CAAV,EAAayC,CAAb,EAAgBiM,CAAhB;AACAlL,MAAAA,CAAC,GAAIA,CAAC,GAAG,GAAL,GAAY,EAAhB;AACAkL,MAAAA,CAAC,GAAG,IAAIlO,CAAJ,IAASzE,CAAC,GAAG,EAAJ,GAASA,CAAT,GAAa,IAAIA,CAA1B,CAAJ;AACA0G,MAAAA,CAAC,GAAGiM,CAAC,IAAI,IAAIhM,GAAG,CAACc,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAX,CAAL;AACAgL,MAAAA,CAAC,GAAGC,CAAC,GAAGzO,CAAC,GAAGjE,CAAC,GAAG2S,CAAC,GAAG,CAApB;AAEAlL,MAAAA,CAAC,GAAG,CAAC,CAACA,CAAN;AACAgL,MAAAA,CAAC,IAAI,CAACE,CAAD,EAAIjM,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAaA,CAAb,EAAgBiM,CAAhB,EAAmBlL,CAAnB,CAAL;AACAiL,MAAAA,CAAC,IAAI,CAAChM,CAAD,EAAIiM,CAAJ,EAAOA,CAAP,EAAUjM,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmBe,CAAnB,CAAL;AACAxD,MAAAA,CAAC,IAAI,CAAC,CAAD,EAAI,CAAJ,EAAOyC,CAAP,EAAUiM,CAAV,EAAaA,CAAb,EAAgBjM,CAAhB,EAAmBe,CAAnB,CAAL;AACA,aAAO4K,UAAU,CAACI,CAAD,EAAIC,CAAJ,EAAOzO,CAAP,EAAUqH,CAAV,CAAjB;AACH,KAvBD;AAwBA;;;;;;;;;;;;;;;;;AAeAhE,IAAAA,IAAI,CAACiL,OAAL,GAAe,UAAU/B,CAAV,EAAaC,CAAb,EAAgBlS,CAAhB,EAAmB;AAC9BA,MAAAA,CAAC,GAAG2T,UAAU,CAAC1B,CAAD,EAAIC,CAAJ,EAAOlS,CAAP,CAAd;AACAiS,MAAAA,CAAC,GAAGjS,CAAC,CAAC,CAAD,CAAL;AACAkS,MAAAA,CAAC,GAAGlS,CAAC,CAAC,CAAD,CAAL;AACAA,MAAAA,CAAC,GAAGA,CAAC,CAAC,CAAD,CAAL;AAEA,UAAIqU,CAAJ,EAAO5J,CAAP,EAAU6J,CAAV,EAAaF,CAAb;AACAE,MAAAA,CAAC,GAAGnK,IAAI,CAAC8H,CAAD,EAAIC,CAAJ,EAAOlS,CAAP,CAAR;AACAoU,MAAAA,CAAC,GAAGE,CAAC,GAAGjK,IAAI,CAAC4H,CAAD,EAAIC,CAAJ,EAAOlS,CAAP,CAAZ;AACAqU,MAAAA,CAAC,GAAID,CAAC,IAAI,CAAL,GAAS,IAAT,GACAE,CAAC,IAAIrC,CAAL,GAAS,CAACC,CAAC,GAAGlS,CAAL,IAAUoU,CAAnB,GACAE,CAAC,IAAIpC,CAAL,GAAS,CAAClS,CAAC,GAAGiS,CAAL,IAAUmC,CAAV,GAAc,CAAvB,GACS,CAACnC,CAAC,GAAGC,CAAL,IAAUkC,CAAV,GAAc,CAH5B;AAKAC,MAAAA,CAAC,GAAI,CAACA,CAAC,GAAG,GAAL,IAAY,CAAb,GAAkB,EAAlB,GAAuB,GAA3B;AACA5J,MAAAA,CAAC,GAAG2J,CAAC,IAAI,CAAL,GAAS,CAAT,GAAaA,CAAC,GAAGE,CAArB;AACA,aAAO;AAACpL,QAAAA,CAAC,EAAEmL,CAAJ;AAAOnO,QAAAA,CAAC,EAAEuE,CAAV;AAAazK,QAAAA,CAAC,EAAEsU,CAAhB;AAAmBtQ,QAAAA,QAAQ,EAAEyP;AAA7B,OAAP;AACH,KAjBD;AAkBA;;;;;;;;;;;;;;;;;AAeA1K,IAAAA,IAAI,CAACgL,OAAL,GAAe,UAAU9B,CAAV,EAAaC,CAAb,EAAgBlS,CAAhB,EAAmB;AAC9BA,MAAAA,CAAC,GAAG2T,UAAU,CAAC1B,CAAD,EAAIC,CAAJ,EAAOlS,CAAP,CAAd;AACAiS,MAAAA,CAAC,GAAGjS,CAAC,CAAC,CAAD,CAAL;AACAkS,MAAAA,CAAC,GAAGlS,CAAC,CAAC,CAAD,CAAL;AACAA,MAAAA,CAAC,GAAGA,CAAC,CAAC,CAAD,CAAL;AAEA,UAAIqU,CAAJ,EAAO5J,CAAP,EAAU8J,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmBL,CAAnB;AACAI,MAAAA,CAAC,GAAGrK,IAAI,CAAC8H,CAAD,EAAIC,CAAJ,EAAOlS,CAAP,CAAR;AACAyU,MAAAA,CAAC,GAAGpK,IAAI,CAAC4H,CAAD,EAAIC,CAAJ,EAAOlS,CAAP,CAAR;AACAoU,MAAAA,CAAC,GAAGI,CAAC,GAAGC,CAAR;AACAJ,MAAAA,CAAC,GAAID,CAAC,IAAI,CAAL,GAAS,IAAT,GACAI,CAAC,IAAIvC,CAAL,GAAS,CAACC,CAAC,GAAGlS,CAAL,IAAUoU,CAAnB,GACAI,CAAC,IAAItC,CAAL,GAAS,CAAClS,CAAC,GAAGiS,CAAL,IAAUmC,CAAV,GAAc,CAAvB,GACS,CAACnC,CAAC,GAAGC,CAAL,IAAUkC,CAAV,GAAc,CAH5B;AAIAC,MAAAA,CAAC,GAAI,CAACA,CAAC,GAAG,GAAL,IAAY,CAAb,GAAkB,EAAlB,GAAuB,GAA3B;AACAE,MAAAA,CAAC,GAAG,CAACC,CAAC,GAAGC,CAAL,IAAU,CAAd;AACAhK,MAAAA,CAAC,GAAI2J,CAAC,IAAI,CAAL,GAAS,CAAT,GACAG,CAAC,GAAG,EAAJ,GAASH,CAAC,IAAI,IAAIG,CAAR,CAAV,GACSH,CAAC,IAAI,IAAI,IAAIG,CAAZ,CAFf;AAGA,aAAO;AAACrL,QAAAA,CAAC,EAAEmL,CAAJ;AAAOnO,QAAAA,CAAC,EAAEuE,CAAV;AAAahJ,QAAAA,CAAC,EAAE8S,CAAhB;AAAmBvQ,QAAAA,QAAQ,EAAE0P;AAA7B,OAAP;AACH,KApBD,CAx4B2B,CA85B3B;;AACA;;;;;;;;;;;;AAUA3K,IAAAA,IAAI,CAAC2L,eAAL,GAAuB,UAAUC,UAAV,EAAsB;AACzC,UAAI,CAACA,UAAL,EAAiB;AACb,eAAO,IAAP;AACH;;AACD,UAAIC,GAAG,GAAG7L,IAAI,CAACgH,IAAL,CAAU4E,UAAV,CAAV;;AACA,UAAIC,GAAG,CAACC,GAAR,EAAa;AACT,eAAO9L,IAAI,CAACgH,IAAL,CAAUlC,KAAV,CAAgB+G,GAAG,CAACC,GAApB,CAAP;AACH;;AAED,UAAIC,WAAW,GAAG;AAAC/U,QAAAA,CAAC,EAAE,CAAJ;AAAOgV,QAAAA,CAAC,EAAE,CAAV;AAAahI,QAAAA,CAAC,EAAE,CAAhB;AAAmB7D,QAAAA,CAAC,EAAE,CAAtB;AAAyBzH,QAAAA,CAAC,EAAE,CAA5B;AAA+BgT,QAAAA,CAAC,EAAE,CAAlC;AAAqCxC,QAAAA,CAAC,EAAE,CAAxC;AAA2ClK,QAAAA,CAAC,EAAE,CAA9C;AAAiD7B,QAAAA,CAAC,EAAE,CAApD;AAAuDqC,QAAAA,CAAC,EAAE,CAA1D;AAA6D0L,QAAAA,CAAC,EAAE,CAAhE;AAAmEe,QAAAA,CAAC,EAAE,CAAtE;AAAyEzT,QAAAA,CAAC,EAAE;AAA5E,OAAlB;AAAA,UACI0T,IAAI,GAAG,EADX;;AAEA,UAAI5L,EAAE,CAACsL,UAAD,EAAa,OAAb,CAAF,IAA2BtL,EAAE,CAACsL,UAAU,CAAC,CAAD,CAAX,EAAgB,OAAhB,CAAjC,EAA2D;AAAE;AACzDM,QAAAA,IAAI,GAAGlM,IAAI,CAACgH,IAAL,CAAUlC,KAAV,CAAgB8G,UAAhB,CAAP;AACH;;AACD,UAAI,CAACM,IAAI,CAACzU,MAAV,EAAkB;AACdqJ,QAAAA,GAAG,CAAC8K,UAAD,CAAH,CAAgBnH,OAAhB,CAAwBpC,WAAxB,EAAqC,UAAUrL,CAAV,EAAaC,CAAb,EAAgB+U,CAAhB,EAAmB;AACpD,cAAIG,MAAM,GAAG,EAAb;AAAA,cACIvU,IAAI,GAAGX,CAAC,CAACgN,WAAF,EADX;AAEA+H,UAAAA,CAAC,CAACvH,OAAF,CAAUlC,UAAV,EAAsB,UAAUvL,CAAV,EAAaC,CAAb,EAAgB;AAClCA,YAAAA,CAAC,IAAIkV,MAAM,CAACnT,IAAP,CAAY,CAAC/B,CAAb,CAAL;AACH,WAFD;;AAGA,cAAIW,IAAI,IAAI,GAAR,IAAeuU,MAAM,CAAC1U,MAAP,GAAgB,CAAnC,EAAsC;AAClCyU,YAAAA,IAAI,CAAClT,IAAL,CAAU,CAAC/B,CAAD,EAAI6C,MAAJ,CAAWqS,MAAM,CAACvR,MAAP,CAAc,CAAd,EAAiB,CAAjB,CAAX,CAAV;AACAhD,YAAAA,IAAI,GAAG,GAAP;AACAX,YAAAA,CAAC,GAAGA,CAAC,IAAI,GAAL,GAAW,GAAX,GAAiB,GAArB;AACH;;AACD,cAAIW,IAAI,IAAI,GAAR,IAAeuU,MAAM,CAAC1U,MAAP,IAAiB,CAApC,EAAuC;AACnCyU,YAAAA,IAAI,CAAClT,IAAL,CAAU,CAAC/B,CAAD,EAAIkV,MAAM,CAAC,CAAD,CAAV,CAAV;AACH;;AACD,cAAIvU,IAAI,IAAI,GAAZ,EAAiB;AACbsU,YAAAA,IAAI,CAAClT,IAAL,CAAU,CAAC/B,CAAD,EAAI6C,MAAJ,CAAWqS,MAAX,CAAV;AACH,WAFD,MAEO,OAAOA,MAAM,CAAC1U,MAAP,IAAiBsU,WAAW,CAACnU,IAAD,CAAnC,EAA2C;AAC9CsU,YAAAA,IAAI,CAAClT,IAAL,CAAU,CAAC/B,CAAD,EAAI6C,MAAJ,CAAWqS,MAAM,CAACvR,MAAP,CAAc,CAAd,EAAiBmR,WAAW,CAACnU,IAAD,CAA5B,CAAX,CAAV;;AACA,gBAAI,CAACmU,WAAW,CAACnU,IAAD,CAAhB,EAAwB;AACpB;AACH;AACJ;AACJ,SAtBD;AAuBH;;AACDsU,MAAAA,IAAI,CAACjR,QAAL,GAAgB+E,IAAI,CAACgH,IAAL,CAAU/L,QAA1B;AACA4Q,MAAAA,GAAG,CAACC,GAAJ,GAAU9L,IAAI,CAACgH,IAAL,CAAUlC,KAAV,CAAgBoH,IAAhB,CAAV;AACA,aAAOA,IAAP;AACH,KA1CD;AA2CA;;;;;;;;;;;;AAUA,QAAIE,oBAAoB,GAAGpM,IAAI,CAACoM,oBAAL,GAA4B,UAAUC,OAAV,EAAmB;AACtE,UAAI,CAACA,OAAL,EAAc;AACV,eAAO,IAAP;AACH;;AACD,UAAIN,WAAW,GAAG;AAAC7C,QAAAA,CAAC,EAAE,CAAJ;AAAO/L,QAAAA,CAAC,EAAE,CAAV;AAAaqC,QAAAA,CAAC,EAAE,CAAhB;AAAmBkM,QAAAA,CAAC,EAAE;AAAtB,OAAlB;AAAA,UACIQ,IAAI,GAAG,EADX;;AAEA,UAAI5L,EAAE,CAAC+L,OAAD,EAAU,OAAV,CAAF,IAAwB/L,EAAE,CAAC+L,OAAO,CAAC,CAAD,CAAR,EAAa,OAAb,CAA9B,EAAqD;AAAE;AACnDH,QAAAA,IAAI,GAAGlM,IAAI,CAACgH,IAAL,CAAUlC,KAAV,CAAgBuH,OAAhB,CAAP;AACH;;AACD,UAAI,CAACH,IAAI,CAACzU,MAAV,EAAkB;AACdqJ,QAAAA,GAAG,CAACuL,OAAD,CAAH,CAAa5H,OAAb,CAAqBnC,QAArB,EAA+B,UAAUtL,CAAV,EAAaC,CAAb,EAAgB+U,CAAhB,EAAmB;AAC9C,cAAIG,MAAM,GAAG,EAAb;AAAA,cACIvU,IAAI,GAAGX,CAAC,CAACgN,WAAF,EADX;AAEA+H,UAAAA,CAAC,CAACvH,OAAF,CAAUlC,UAAV,EAAsB,UAAUvL,CAAV,EAAaC,CAAb,EAAgB;AAClCA,YAAAA,CAAC,IAAIkV,MAAM,CAACnT,IAAP,CAAY,CAAC/B,CAAb,CAAL;AACH,WAFD;AAGAiV,UAAAA,IAAI,CAAClT,IAAL,CAAU,CAAC/B,CAAD,EAAI6C,MAAJ,CAAWqS,MAAX,CAAV;AACH,SAPD;AAQH;;AACDD,MAAAA,IAAI,CAACjR,QAAL,GAAgB+E,IAAI,CAACgH,IAAL,CAAU/L,QAA1B;AACA,aAAOiR,IAAP;AACH,KArBD;;AAsBA,aAASI,mBAAT,CAA6BC,IAA7B,EAAmC;AAC/B,UAAI3P,GAAG,GAAG,EAAV;AACA2P,MAAAA,IAAI,GAAGA,IAAI,CAAC9H,OAAL,CAAa,2BAAb,EAA0C,UAAUF,GAAV,EAAe3M,IAAf,EAAqBuU,MAArB,EAA6B;AAC1EA,QAAAA,MAAM,GAAGA,MAAM,CAAC7S,KAAP,CAAa,aAAb,CAAT;;AACA,YAAI1B,IAAI,IAAI,QAAR,IAAoBuU,MAAM,CAAC1U,MAAP,IAAiB,CAAzC,EAA4C;AACxC0U,UAAAA,MAAM,CAACnT,IAAP,CAAY,CAAZ,EAAe,CAAf;AACH;;AACD,YAAIpB,IAAI,IAAI,OAAZ,EAAqB;AACjB,cAAIuU,MAAM,CAAC1U,MAAP,GAAgB,CAApB,EAAuB;AACnB0U,YAAAA,MAAM,GAAGA,MAAM,CAAC/T,KAAP,CAAa,CAAb,EAAgB,CAAhB,CAAT;AACH,WAFD,MAEO,IAAI+T,MAAM,CAAC1U,MAAP,IAAiB,CAArB,EAAwB;AAC3B0U,YAAAA,MAAM,CAACnT,IAAP,CAAY,CAAZ,EAAe,CAAf;AACH;;AACD,cAAImT,MAAM,CAAC1U,MAAP,IAAiB,CAArB,EAAwB;AACpB0U,YAAAA,MAAM,CAACnT,IAAP,CAAYmT,MAAM,CAAC,CAAD,CAAlB,EAAuB,CAAvB,EAA0B,CAA1B;AACH;AACJ;;AACD,YAAIvU,IAAI,IAAI,OAAZ,EAAqB;AACjBgF,UAAAA,GAAG,CAAC5D,IAAJ,CAAS,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,EAAYmI,IAAI,CAACqF,GAAL,CAASN,GAAG,CAACiG,MAAM,CAAC,CAAD,CAAP,CAAZ,CAAZ,EAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C,CAAT;AACH,SAFD,MAEO,IAAIvU,IAAI,IAAI,OAAZ,EAAqB;AACxBgF,UAAAA,GAAG,CAAC5D,IAAJ,CAAS,CAAC,GAAD,EAAM,CAAN,EAASmI,IAAI,CAACqF,GAAL,CAASN,GAAG,CAACiG,MAAM,CAAC,CAAD,CAAP,CAAZ,CAAT,EAAmC,CAAnC,EAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C,CAAT;AACH,SAFM,MAEA;AACHvP,UAAAA,GAAG,CAAC5D,IAAJ,CAAS,CAACpB,IAAI,CAAC2R,MAAL,CAAY,CAAZ,CAAD,EAAiBzP,MAAjB,CAAwBqS,MAAxB,CAAT;AACH;;AACD,eAAO5H,GAAP;AACH,OAvBM,CAAP;AAwBA,aAAO3H,GAAP;AACH;;AACDoD,IAAAA,IAAI,CAACW,CAAL,CAAO2L,mBAAP,GAA6BA,mBAA7B;AACAtM,IAAAA,IAAI,CAACW,CAAL,CAAO6L,WAAP,GAAqB,qBAArB;;AACA,aAASC,gBAAT,CAA0BF,IAA1B,EAAgCG,IAAhC,EAAsC;AAClC,UAAIC,KAAK,GAAGP,oBAAoB,CAACG,IAAD,CAAhC;AAAA,UACIb,CAAC,GAAG,IAAI1L,IAAI,CAAC4M,MAAT,EADR;;AAEA,UAAID,KAAJ,EAAW;AACP,aAAK,IAAIpV,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGmV,KAAK,CAAClV,MAA3B,EAAmCF,CAAC,GAAGC,EAAvC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5C,cAAIiI,CAAC,GAAGmN,KAAK,CAACpV,CAAD,CAAb;AAAA,cACIsV,IAAI,GAAGrN,CAAC,CAAC/H,MADb;AAAA,cAEIqV,OAAO,GAAGhM,GAAG,CAACtB,CAAC,CAAC,CAAD,CAAF,CAAH,CAAUyE,WAAV,EAFd;AAAA,cAGI8I,QAAQ,GAAGvN,CAAC,CAAC,CAAD,CAAD,IAAQsN,OAHvB;AAAA,cAIIE,KAAK,GAAGD,QAAQ,GAAGrB,CAAC,CAACuB,MAAF,EAAH,GAAgB,CAJpC;AAAA,cAKItH,EALJ;AAAA,cAMIC,EANJ;AAAA,cAOIC,EAPJ;AAAA,cAQIC,EARJ;AAAA,cASIhJ,EATJ;;AAUA,cAAIgQ,OAAO,IAAI,GAAX,IAAkBD,IAAI,IAAI,CAA9B,EAAgC;AAC5BnB,YAAAA,CAAC,CAACwB,SAAF,CAAY1N,CAAC,CAAC,CAAD,CAAb,EAAkB,CAAlB;AACH,WAFD,MAEO,IAAIsN,OAAO,IAAI,GAAX,IAAkBD,IAAI,IAAI,CAA9B,EAAiC;AACpC,gBAAIE,QAAJ,EAAc;AACVpH,cAAAA,EAAE,GAAGqH,KAAK,CAAC7N,CAAN,CAAQ,CAAR,EAAW,CAAX,CAAL;AACAyG,cAAAA,EAAE,GAAGoH,KAAK,CAAC1N,CAAN,CAAQ,CAAR,EAAW,CAAX,CAAL;AACAuG,cAAAA,EAAE,GAAGmH,KAAK,CAAC7N,CAAN,CAAQK,CAAC,CAAC,CAAD,CAAT,EAAcA,CAAC,CAAC,CAAD,CAAf,CAAL;AACAsG,cAAAA,EAAE,GAAGkH,KAAK,CAAC1N,CAAN,CAAQE,CAAC,CAAC,CAAD,CAAT,EAAcA,CAAC,CAAC,CAAD,CAAf,CAAL;AACAkM,cAAAA,CAAC,CAACwB,SAAF,CAAYrH,EAAE,GAAGF,EAAjB,EAAqBG,EAAE,GAAGF,EAA1B;AACH,aAND,MAMO;AACH8F,cAAAA,CAAC,CAACwB,SAAF,CAAY1N,CAAC,CAAC,CAAD,CAAb,EAAkBA,CAAC,CAAC,CAAD,CAAnB;AACH;AACJ,WAVM,MAUA,IAAIsN,OAAO,IAAI,GAAf,EAAoB;AACvB,gBAAID,IAAI,IAAI,CAAZ,EAAe;AACX/P,cAAAA,EAAE,GAAGA,EAAE,IAAI4P,IAAX;AACAhB,cAAAA,CAAC,CAACyB,MAAF,CAAS3N,CAAC,CAAC,CAAD,CAAV,EAAe1C,EAAE,CAACqC,CAAH,GAAOrC,EAAE,CAACwJ,KAAH,GAAW,CAAjC,EAAoCxJ,EAAE,CAACwC,CAAH,GAAOxC,EAAE,CAACyJ,MAAH,GAAY,CAAvD;AACH,aAHD,MAGO,IAAIsG,IAAI,IAAI,CAAZ,EAAe;AAClB,kBAAIE,QAAJ,EAAc;AACVlH,gBAAAA,EAAE,GAAGmH,KAAK,CAAC7N,CAAN,CAAQK,CAAC,CAAC,CAAD,CAAT,EAAcA,CAAC,CAAC,CAAD,CAAf,CAAL;AACAsG,gBAAAA,EAAE,GAAGkH,KAAK,CAAC1N,CAAN,CAAQE,CAAC,CAAC,CAAD,CAAT,EAAcA,CAAC,CAAC,CAAD,CAAf,CAAL;AACAkM,gBAAAA,CAAC,CAACyB,MAAF,CAAS3N,CAAC,CAAC,CAAD,CAAV,EAAeqG,EAAf,EAAmBC,EAAnB;AACH,eAJD,MAIO;AACH4F,gBAAAA,CAAC,CAACyB,MAAF,CAAS3N,CAAC,CAAC,CAAD,CAAV,EAAeA,CAAC,CAAC,CAAD,CAAhB,EAAqBA,CAAC,CAAC,CAAD,CAAtB;AACH;AACJ;AACJ,WAbM,MAaA,IAAIsN,OAAO,IAAI,GAAf,EAAoB;AACvB,gBAAID,IAAI,IAAI,CAAR,IAAaA,IAAI,IAAI,CAAzB,EAA4B;AACxB/P,cAAAA,EAAE,GAAGA,EAAE,IAAI4P,IAAX;AACAhB,cAAAA,CAAC,CAAC0B,KAAF,CAAQ5N,CAAC,CAAC,CAAD,CAAT,EAAcA,CAAC,CAACqN,IAAI,GAAG,CAAR,CAAf,EAA2B/P,EAAE,CAACqC,CAAH,GAAOrC,EAAE,CAACwJ,KAAH,GAAW,CAA7C,EAAgDxJ,EAAE,CAACwC,CAAH,GAAOxC,EAAE,CAACyJ,MAAH,GAAY,CAAnE;AACH,aAHD,MAGO,IAAIsG,IAAI,IAAI,CAAZ,EAAe;AAClB,kBAAIE,QAAJ,EAAc;AACVlH,gBAAAA,EAAE,GAAGmH,KAAK,CAAC7N,CAAN,CAAQK,CAAC,CAAC,CAAD,CAAT,EAAcA,CAAC,CAAC,CAAD,CAAf,CAAL;AACAsG,gBAAAA,EAAE,GAAGkH,KAAK,CAAC1N,CAAN,CAAQE,CAAC,CAAC,CAAD,CAAT,EAAcA,CAAC,CAAC,CAAD,CAAf,CAAL;AACAkM,gBAAAA,CAAC,CAAC0B,KAAF,CAAQ5N,CAAC,CAAC,CAAD,CAAT,EAAcA,CAAC,CAAC,CAAD,CAAf,EAAoBqG,EAApB,EAAwBC,EAAxB;AACH,eAJD,MAIO;AACH4F,gBAAAA,CAAC,CAAC0B,KAAF,CAAQ5N,CAAC,CAAC,CAAD,CAAT,EAAcA,CAAC,CAAC,CAAD,CAAf,EAAoBA,CAAC,CAAC,CAAD,CAArB,EAA0BA,CAAC,CAAC,CAAD,CAA3B;AACH;AACJ,aARM,MAQA,IAAIqN,IAAI,IAAI,CAAZ,EAAe;AAClB,kBAAIE,QAAJ,EAAc;AACVlH,gBAAAA,EAAE,GAAGmH,KAAK,CAAC7N,CAAN,CAAQK,CAAC,CAAC,CAAD,CAAT,EAAcA,CAAC,CAAC,CAAD,CAAf,CAAL;AACAsG,gBAAAA,EAAE,GAAGkH,KAAK,CAAC1N,CAAN,CAAQE,CAAC,CAAC,CAAD,CAAT,EAAcA,CAAC,CAAC,CAAD,CAAf,CAAL;AACAkM,gBAAAA,CAAC,CAAC0B,KAAF,CAAQ5N,CAAC,CAAC,CAAD,CAAT,EAAcA,CAAC,CAAC,CAAD,CAAf,EAAoBqG,EAApB,EAAwBC,EAAxB;AACH,eAJD,MAIO;AACH4F,gBAAAA,CAAC,CAAC0B,KAAF,CAAQ5N,CAAC,CAAC,CAAD,CAAT,EAAcA,CAAC,CAAC,CAAD,CAAf,EAAoBA,CAAC,CAAC,CAAD,CAArB,EAA0BA,CAAC,CAAC,CAAD,CAA3B;AACH;AACJ;AACJ,WArBM,MAqBA,IAAIsN,OAAO,IAAI,GAAX,IAAkBD,IAAI,IAAI,CAA9B,EAAiC;AACpCnB,YAAAA,CAAC,CAAC2B,GAAF,CAAM7N,CAAC,CAAC,CAAD,CAAP,EAAYA,CAAC,CAAC,CAAD,CAAb,EAAkBA,CAAC,CAAC,CAAD,CAAnB,EAAwBA,CAAC,CAAC,CAAD,CAAzB,EAA8BA,CAAC,CAAC,CAAD,CAA/B,EAAoCA,CAAC,CAAC,CAAD,CAArC;AACH;AACJ;AACJ;;AACD,aAAOkM,CAAP;AACH;;AACD1L,IAAAA,IAAI,CAACW,CAAL,CAAO8L,gBAAP,GAA0BA,gBAA1B;AACAzM,IAAAA,IAAI,CAACsN,QAAL,GAAgBC,OAAhB;AACA,QAAIC,QAAQ,GAAGhX,IAAI,CAACgK,GAAL,CAASgN,QAAT,IAAqBhX,IAAI,CAACgK,GAAL,CAASiN,uBAA9B,GACX,UAAUzW,CAAV,EAAaC,CAAb,EAAgB;AACZ,UAAIyW,KAAK,GAAG1W,CAAC,CAACoJ,QAAF,IAAc,CAAd,GAAkBpJ,CAAC,CAAC2W,eAApB,GAAsC3W,CAAlD;AAAA,UACI4W,GAAG,GAAG3W,CAAC,IAAIA,CAAC,CAAC4W,UADjB;AAEI,aAAO7W,CAAC,IAAI4W,GAAL,IAAY,CAAC,EAAEA,GAAG,IAAIA,GAAG,CAACxN,QAAJ,IAAgB,CAAvB,KAClBsN,KAAK,CAACF,QAAN,GACIE,KAAK,CAACF,QAAN,CAAeI,GAAf,CADJ,GAEI5W,CAAC,CAACyW,uBAAF,IAA6BzW,CAAC,CAACyW,uBAAF,CAA0BG,GAA1B,IAAiC,EAHhD,CAAF,CAApB;AAKP,KATU,GAUX,UAAU5W,CAAV,EAAaC,CAAb,EAAgB;AACZ,UAAIA,CAAJ,EAAO;AACH,eAAOA,CAAP,EAAU;AACNA,UAAAA,CAAC,GAAGA,CAAC,CAAC4W,UAAN;;AACA,cAAI5W,CAAC,IAAID,CAAT,EAAY;AACR,mBAAO,IAAP;AACH;AACJ;AACJ;;AACD,aAAO,KAAP;AACH,KApBL;;AAqBA,aAAS8W,WAAT,CAAqBtL,EAArB,EAAyB;AACrB,UAAIzC,CAAC,GAAIyC,EAAE,CAAC6E,IAAH,CAAQ0G,eAAR,IAA2B1N,IAAI,CAACmC,EAAE,CAAC6E,IAAH,CAAQ0G,eAAT,CAAhC,IACCvL,EAAE,CAAC6E,IAAH,CAAQwG,UAAR,IAAsBxN,IAAI,CAACmC,EAAE,CAAC6E,IAAH,CAAQwG,UAAT,CAD3B,IAEA7N,IAAI,CAACgO,MAAL,CAAY,KAAZ,CAFA,IAGAhO,IAAI,CAAC,CAAD,EAAI,CAAJ,CAHZ;AAAA,UAIIiO,KAAK,GAAGlO,CAAC,CAACiO,MAAF,CAAS,MAAT,CAJZ;AAAA,UAKIE,IAAI,GAAID,KAAK,IAAI,IAAT,GAAgB,KAAhB,GAAwBA,KAAK,CAAC5G,IAL1C;;AAMA,UAAI,CAAC6G,IAAL,EAAW;AACPA,QAAAA,IAAI,GAAGC,IAAI,CAAC,MAAD,EAASpO,CAAC,CAACsH,IAAX,CAAJ,CAAqBA,IAA5B;AACH;;AACD,aAAO6G,IAAP;AACH;;AACD,aAASE,UAAT,CAAoB5L,EAApB,EAAwB;AACpB,aAAOA,EAAE,CAAC6E,IAAH,CAAQ0G,eAAR,IAA2B1N,IAAI,CAACmC,EAAE,CAAC6E,IAAH,CAAQ0G,eAAT,CAA/B,IAA4D/N,IAAI,CAACgO,MAAL,CAAY,KAAZ,CAAnE;AACH;;AACDhO,IAAAA,IAAI,CAACW,CAAL,CAAOmN,WAAP,GAAqBA,WAArB;AACA9N,IAAAA,IAAI,CAACW,CAAL,CAAOyN,UAAP,GAAoBA,UAApB;;AACA,aAASb,OAAT,CAAiB/K,EAAjB,EAAqB5K,IAArB,EAA2BgR,KAA3B,EAAkC;AAC9B,UAAIyF,GAAG,GAAGD,UAAU,CAAC5L,EAAD,CAAV,CAAe6E,IAAzB;AAAA,UACIxO,GAAG,GAAG,EADV;AAAA,UAEIyV,GAAG,GAAGD,GAAG,CAAC5N,aAAJ,CAAkB,YAAlB,CAFV;;AAGA,UAAI,CAAC6N,GAAL,EAAU;AACNA,QAAAA,GAAG,GAAGvL,CAAC,CAAC,MAAD,CAAP;AACAA,QAAAA,CAAC,CAACuL,GAAD,EAAM;AAACnP,UAAAA,CAAC,EAAE,CAAC,GAAL;AAAUG,UAAAA,CAAC,EAAE,CAAC,GAAd;AAAmBgH,UAAAA,KAAK,EAAE,EAA1B;AAA8BC,UAAAA,MAAM,EAAE,EAAtC;AAA0C,mBAAS,WAAnD;AAAgEgI,UAAAA,IAAI,EAAE;AAAtE,SAAN,CAAD;AACAF,QAAAA,GAAG,CAACG,WAAJ,CAAgBF,GAAhB;AACH;;AACD,eAASG,IAAT,CAAcvR,GAAd,EAAmB;AACf,YAAIA,GAAG,IAAI,IAAX,EAAiB;AACb,iBAAOuE,CAAP;AACH;;AACD,YAAIvE,GAAG,IAAI,CAACA,GAAZ,EAAiB;AACb,iBAAOA,GAAP;AACH;;AACD6F,QAAAA,CAAC,CAACuL,GAAD,EAAM;AAAChI,UAAAA,KAAK,EAAEpJ;AAAR,SAAN,CAAD;;AACA,YAAI;AACA,iBAAOoR,GAAG,CAACI,OAAJ,GAAcpI,KAArB;AACH,SAFD,CAEE,OAAOvO,CAAP,EAAU;AACR,iBAAO,CAAP;AACH;AACJ;;AACD,eAAS4W,IAAT,CAAczR,GAAd,EAAmB;AACf,YAAIA,GAAG,IAAI,IAAX,EAAiB;AACb,iBAAOuE,CAAP;AACH;;AACD,YAAIvE,GAAG,IAAI,CAACA,GAAZ,EAAiB;AACb,iBAAOA,GAAP;AACH;;AACD6F,QAAAA,CAAC,CAACuL,GAAD,EAAM;AAAC/H,UAAAA,MAAM,EAAErJ;AAAT,SAAN,CAAD;;AACA,YAAI;AACA,iBAAOoR,GAAG,CAACI,OAAJ,GAAcnI,MAArB;AACH,SAFD,CAEE,OAAOxO,CAAP,EAAU;AACR,iBAAO,CAAP;AACH;AACJ;;AACD,eAASoG,GAAT,CAAayQ,GAAb,EAAkBnW,CAAlB,EAAqB;AACjB,YAAIb,IAAI,IAAI,IAAZ,EAAkB;AACdiB,UAAAA,GAAG,CAAC+V,GAAD,CAAH,GAAWnW,CAAC,CAAC+J,EAAE,CAACQ,IAAH,CAAQ4L,GAAR,KAAgB,CAAjB,CAAZ;AACH,SAFD,MAEO,IAAIA,GAAG,IAAIhX,IAAX,EAAiB;AACpBiB,UAAAA,GAAG,GAAGJ,CAAC,CAACmQ,KAAK,IAAI,IAAT,GAAgBpG,EAAE,CAACQ,IAAH,CAAQ4L,GAAR,KAAgB,CAAhC,GAAoChG,KAArC,CAAP;AACH;AACJ;;AACD,cAAQpG,EAAE,CAACC,IAAX;AACI,aAAK,MAAL;AACItE,UAAAA,GAAG,CAAC,IAAD,EAAOsQ,IAAP,CAAH;AACAtQ,UAAAA,GAAG,CAAC,IAAD,EAAOwQ,IAAP,CAAH;;AACJ,aAAK,OAAL;AACIxQ,UAAAA,GAAG,CAAC,OAAD,EAAUsQ,IAAV,CAAH;AACAtQ,UAAAA,GAAG,CAAC,QAAD,EAAWwQ,IAAX,CAAH;;AACJ,aAAK,MAAL;AACIxQ,UAAAA,GAAG,CAAC,GAAD,EAAMsQ,IAAN,CAAH;AACAtQ,UAAAA,GAAG,CAAC,GAAD,EAAMwQ,IAAN,CAAH;AACJ;;AACA,aAAK,QAAL;AACIxQ,UAAAA,GAAG,CAAC,IAAD,EAAOsQ,IAAP,CAAH;AACAtQ,UAAAA,GAAG,CAAC,IAAD,EAAOwQ,IAAP,CAAH;AACAxQ,UAAAA,GAAG,CAAC,GAAD,EAAMsQ,IAAN,CAAH;AACJ;;AACA,aAAK,SAAL;AACItQ,UAAAA,GAAG,CAAC,IAAD,EAAOsQ,IAAP,CAAH;AACAtQ,UAAAA,GAAG,CAAC,IAAD,EAAOwQ,IAAP,CAAH;AACAxQ,UAAAA,GAAG,CAAC,IAAD,EAAOsQ,IAAP,CAAH;AACAtQ,UAAAA,GAAG,CAAC,IAAD,EAAOwQ,IAAP,CAAH;AACJ;;AACA,aAAK,MAAL;AACIxQ,UAAAA,GAAG,CAAC,IAAD,EAAOsQ,IAAP,CAAH;AACAtQ,UAAAA,GAAG,CAAC,IAAD,EAAOsQ,IAAP,CAAH;AACAtQ,UAAAA,GAAG,CAAC,IAAD,EAAOwQ,IAAP,CAAH;AACAxQ,UAAAA,GAAG,CAAC,IAAD,EAAOwQ,IAAP,CAAH;AACJ;;AACA,aAAK,QAAL;AACIxQ,UAAAA,GAAG,CAAC,MAAD,EAASsQ,IAAT,CAAH;AACAtQ,UAAAA,GAAG,CAAC,aAAD,EAAgBsQ,IAAhB,CAAH;AACAtQ,UAAAA,GAAG,CAAC,MAAD,EAASwQ,IAAT,CAAH;AACAxQ,UAAAA,GAAG,CAAC,cAAD,EAAiBwQ,IAAjB,CAAH;AACJ;;AACA,aAAK,gBAAL;AACIxQ,UAAAA,GAAG,CAAC,IAAD,EAAOsQ,IAAP,CAAH;AACAtQ,UAAAA,GAAG,CAAC,IAAD,EAAOwQ,IAAP,CAAH;AACJ;;AACA,aAAK,OAAL;AACIxQ,UAAAA,GAAG,CAAC,IAAD,EAAOsQ,IAAP,CAAH;AACAtQ,UAAAA,GAAG,CAAC,IAAD,EAAOwQ,IAAP,CAAH;AACJ;;AACA;AACIxQ,UAAAA,GAAG,CAACvG,IAAD,EAAO6W,IAAP,CAAH;AA3CR;;AA6CAJ,MAAAA,GAAG,CAACQ,WAAJ,CAAgBP,GAAhB;AACA,aAAOzV,GAAP;AACH;AACD;;;;;;;;;;AAQAmH,IAAAA,IAAI,CAACgO,MAAL,GAAc,UAAUc,KAAV,EAAiB;AAC3BA,MAAAA,KAAK,GAAGhO,GAAG,CAACgO,KAAD,CAAH,CAAWrK,OAAX,CAAmB,WAAnB,EAAgC,OAAhC,CAAR;AACA,aAAOpE,IAAI,CAAC7J,IAAI,CAACgK,GAAL,CAASC,aAAT,CAAuBqO,KAAvB,CAAD,CAAX;AACH,KAHD;AAIA;;;;;;;;;;AAQA9O,IAAAA,IAAI,CAAC+O,SAAL,GAAiB,UAAUD,KAAV,EAAiB;AAC9B,UAAIE,QAAQ,GAAGxY,IAAI,CAACgK,GAAL,CAASyO,gBAAT,CAA0BH,KAA1B,CAAf;AAAA,UACI3Q,GAAG,GAAG,CAAC6B,IAAI,CAAC7B,GAAL,IAAYjG,KAAb,GADV;;AAEA,WAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyX,QAAQ,CAACvX,MAA7B,EAAqCF,CAAC,EAAtC,EAA0C;AACtC4G,QAAAA,GAAG,CAACnF,IAAJ,CAASqH,IAAI,CAAC2O,QAAQ,CAACzX,CAAD,CAAT,CAAb;AACH;;AACD,aAAO4G,GAAP;AACH,KAPD;;AASA,aAAS+Q,SAAT,CAAmBC,IAAnB,EAAyB;AACrB,UAAI,CAAC7O,EAAE,CAAC6O,IAAD,EAAO,OAAP,CAAP,EAAwB;AACpBA,QAAAA,IAAI,GAAGjX,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAAP;AACH;;AACD,UAAIf,CAAC,GAAG,CAAR;AAAA,UACImC,CAAC,GAAG,CADR;AAAA,UAEI2N,IAAI,GAAG,KAAKA,IAFhB;;AAGA,aAAO,KAAK9P,CAAL,CAAP,EAAgB,OAAO,KAAKA,CAAC,EAAN,CAAP;;AAChB,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG4X,IAAI,CAAC1X,MAArB,EAA6BF,CAAC,EAA9B,EAAkC;AAC9B,YAAI4X,IAAI,CAAC5X,CAAD,CAAJ,CAAQkL,IAAR,IAAgB,KAApB,EAA2B;AACvB0M,UAAAA,IAAI,CAAC5X,CAAD,CAAJ,CAAQ6X,OAAR,CAAgB,UAAU5M,EAAV,EAAc;AAC1B6E,YAAAA,IAAI,CAACmH,WAAL,CAAiBhM,EAAE,CAAC6E,IAApB;AACH,WAFD;AAGH,SAJD,MAIO;AACHA,UAAAA,IAAI,CAACmH,WAAL,CAAiBW,IAAI,CAAC5X,CAAD,CAAJ,CAAQ8P,IAAzB;AACH;AACJ;;AACD,UAAIgI,QAAQ,GAAGhI,IAAI,CAACiI,UAApB;;AACA,WAAK/X,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG8X,QAAQ,CAAC5X,MAAzB,EAAiCF,CAAC,EAAlC,EAAsC;AAClC,aAAKmC,CAAC,EAAN,IAAY2G,IAAI,CAACgP,QAAQ,CAAC9X,CAAD,CAAT,CAAhB;AACH;;AACD,aAAO,IAAP;AACH,KA7wC0B,CA8wC3B;;;AACAgY,IAAAA,WAAW,CAAC,YAAY;AACpB,WAAK,IAAI5U,GAAT,IAAgBiI,GAAhB,EAAqB,IAAIA,GAAG,CAAClM,GAAD,CAAH,CAASiE,GAAT,CAAJ,EAAmB;AACpC,YAAI6H,EAAE,GAAGI,GAAG,CAACjI,GAAD,CAAZ;AAAA,YACI0M,IAAI,GAAG7E,EAAE,CAAC6E,IADd;;AAEA,YAAI7E,EAAE,CAACC,IAAH,IAAW,KAAX,IAAoB,CAAC4E,IAAI,CAAC0G,eAA1B,IAA6CvL,EAAE,CAACC,IAAH,IAAW,KAAX,KAAqB,CAAC4E,IAAI,CAACwG,UAAN,IAAoB,qBAAqBxG,IAAI,CAACwG,UAA1B,IAAwC,CAACxG,IAAI,CAAC0G,eAAvF,CAAjD,EAA0J;AACtJ,iBAAOnL,GAAG,CAACjI,GAAD,CAAV;AACH;AACJ;AACJ,KARU,EAQR,GARQ,CAAX;;AASA,aAAS4F,OAAT,CAAiBiC,EAAjB,EAAqB;AACjB,UAAIA,EAAE,CAACgN,IAAH,IAAW5M,GAAf,EAAoB;AAChB,eAAOA,GAAG,CAACJ,EAAE,CAACgN,IAAJ,CAAV;AACH;;AACD,UAAInB,GAAJ;;AACA,UAAI;AACAA,QAAAA,GAAG,GAAG7L,EAAE,CAACuL,eAAT;AACH,OAFD,CAEE,OAAMhW,CAAN,EAAS,CAAE;AACb;;;;;;;;;;;;;;AAYA,WAAKsP,IAAL,GAAY7E,EAAZ;;AACA,UAAI6L,GAAJ,EAAS;AACL,aAAKoB,KAAL,GAAa,IAAI/O,KAAJ,CAAU2N,GAAV,CAAb;AACH;AACD;;;;;;;;AAMA,WAAK5L,IAAL,GAAYD,EAAE,CAACkN,OAAH,IAAclN,EAAE,CAACmN,QAA7B;AACA,UAAIjS,EAAE,GAAG,KAAKA,EAAL,GAAUlB,EAAE,CAAC,IAAD,CAArB;AACA,WAAKoT,KAAL,GAAa,EAAb;AACA,WAAKjP,CAAL,GAAS;AACLkP,QAAAA,SAAS,EAAE;AADN,OAAT;AAGArN,MAAAA,EAAE,CAACgN,IAAH,GAAU9R,EAAV;AACAkF,MAAAA,GAAG,CAAClF,EAAD,CAAH,GAAU,IAAV;;AACA,UAAI,KAAK+E,IAAL,IAAa,GAAjB,EAAsB;AAClB,aAAK4K,GAAL,GAAW6B,SAAX;AACH;;AACD,UAAI,KAAKzM,IAAL,IAAa;AAAC0G,QAAAA,CAAC,EAAE,CAAJ;AAAO2G,QAAAA,IAAI,EAAE,CAAb;AAAgBC,QAAAA,OAAO,EAAE,CAAzB;AAA4BC,QAAAA,MAAM,EAAE;AAApC,OAAjB,EAAyD;AACrD,aAAK,IAAIC,MAAT,IAAmBvP,KAAK,CAACvI,SAAzB,EAAoC,IAAIuI,KAAK,CAACvI,SAAN,CAAgBzB,GAAhB,EAAqBuZ,MAArB,CAAJ,EAAkC;AAClE,eAAKA,MAAL,IAAevP,KAAK,CAACvI,SAAN,CAAgB8X,MAAhB,CAAf;AACH;AACJ;AACJ;AACE;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBC1P,IAAAA,OAAO,CAACpI,SAAR,CAAkB6K,IAAlB,GAAyB,UAAUmJ,MAAV,EAAkBvD,KAAlB,EAAyB;AAC9C,UAAIpG,EAAE,GAAG,IAAT;AAAA,UACI6E,IAAI,GAAG7E,EAAE,CAAC6E,IADd;;AAEA,UAAI,CAAC8E,MAAL,EAAa;AACT,YAAI9E,IAAI,CAACjH,QAAL,IAAiB,CAArB,EAAwB;AACpB,iBAAO;AACH8C,YAAAA,IAAI,EAAEmE,IAAI,CAAC9D;AADR,WAAP;AAGH;;AACD,YAAIP,IAAI,GAAGqE,IAAI,CAACxD,UAAhB;AAAA,YACIhL,GAAG,GAAG,EADV;;AAEA,aAAK,IAAItB,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGwL,IAAI,CAACvL,MAA1B,EAAkCF,CAAC,GAAGC,EAAtC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3CsB,UAAAA,GAAG,CAACmK,IAAI,CAACzL,CAAD,CAAJ,CAAQoY,QAAT,CAAH,GAAwB3M,IAAI,CAACzL,CAAD,CAAJ,CAAQgM,SAAhC;AACH;;AACD,eAAO1K,GAAP;AACH;;AACD,UAAIyH,EAAE,CAAC6L,MAAD,EAAS,QAAT,CAAN,EAA0B;AACtB,YAAI7T,SAAS,CAACb,MAAV,GAAmB,CAAvB,EAA0B;AACtB,cAAIyY,IAAI,GAAG,EAAX;AACAA,UAAAA,IAAI,CAAC/D,MAAD,CAAJ,GAAevD,KAAf;AACAuD,UAAAA,MAAM,GAAG+D,IAAT;AACH,SAJD,MAIO;AACH,iBAAOvY,GAAG,CAAC,uBAAuBwU,MAAxB,EAAgC3J,EAAhC,CAAH,CAAuClL,YAAvC,EAAP;AACH;AACJ;;AACD,WAAK,IAAI6Y,GAAT,IAAgBhE,MAAhB,EAAwB;AACpB,YAAIA,MAAM,CAACzV,GAAD,CAAN,CAAYyZ,GAAZ,CAAJ,EAAsB;AAClBxY,UAAAA,GAAG,CAAC,oBAAoBwY,GAArB,EAA0B3N,EAA1B,EAA8B2J,MAAM,CAACgE,GAAD,CAApC,CAAH;AACH;AACJ;;AACD,aAAO3N,EAAP;AACH,KA/BD;AAgCJ;;;;;;;;;;;AASAxC,IAAAA,IAAI,CAACoQ,KAAL,GAAa,UAAU/B,GAAV,EAAe;AACxB,UAAI5V,CAAC,GAAGjC,IAAI,CAACgK,GAAL,CAAS6P,sBAAT,EAAR;AAAA,UACIC,IAAI,GAAG,IADX;AAAA,UAEIC,GAAG,GAAG/Z,IAAI,CAACgK,GAAL,CAASgQ,aAAT,CAAuB,KAAvB,CAFV;AAGAnC,MAAAA,GAAG,GAAGvN,GAAG,CAACuN,GAAD,CAAT;;AACA,UAAI,CAACA,GAAG,CAACvE,KAAJ,CAAU,qBAAV,CAAL,EAAuC;AACnCuE,QAAAA,GAAG,GAAG,UAAUA,GAAV,GAAgB,QAAtB;AACAiC,QAAAA,IAAI,GAAG,KAAP;AACH;;AACDC,MAAAA,GAAG,CAACE,SAAJ,GAAgBpC,GAAhB;AACAA,MAAAA,GAAG,GAAGkC,GAAG,CAAClG,oBAAJ,CAAyB,KAAzB,EAAgC,CAAhC,CAAN;;AACA,UAAIgE,GAAJ,EAAS;AACL,YAAIiC,IAAJ,EAAU;AACN7X,UAAAA,CAAC,GAAG4V,GAAJ;AACH,SAFD,MAEO;AACH,iBAAOA,GAAG,CAACqC,UAAX,EAAuB;AACnBjY,YAAAA,CAAC,CAAC+V,WAAF,CAAcH,GAAG,CAACqC,UAAlB;AACH;AACJ;AACJ;;AACD,aAAO,IAAIC,QAAJ,CAAalY,CAAb,CAAP;AACH,KArBD;;AAsBA,aAASkY,QAAT,CAAkBC,IAAlB,EAAwB;AACpB,WAAKvJ,IAAL,GAAYuJ,IAAZ;AACH;AACD;;;;;;;;;;;AASA5Q,IAAAA,IAAI,CAAC6Q,QAAL,GAAgB,YAAY;AACxB,UAAI5Y,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAAX;AAAA,UACIG,CAAC,GAAGjC,IAAI,CAACgK,GAAL,CAAS6P,sBAAT,EADR;;AAEA,WAAK,IAAI9Y,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGS,IAAI,CAACR,MAA1B,EAAkCF,CAAC,GAAGC,EAAtC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3C,YAAIgC,IAAI,GAAGtB,IAAI,CAACV,CAAD,CAAf;;AACA,YAAIgC,IAAI,CAAC8N,IAAL,IAAa9N,IAAI,CAAC8N,IAAL,CAAUjH,QAA3B,EAAqC;AACjC3H,UAAAA,CAAC,CAAC+V,WAAF,CAAcjV,IAAI,CAAC8N,IAAnB;AACH;;AACD,YAAI9N,IAAI,CAAC6G,QAAT,EAAmB;AACf3H,UAAAA,CAAC,CAAC+V,WAAF,CAAcjV,IAAd;AACH;;AACD,YAAI,OAAOA,IAAP,IAAe,QAAnB,EAA6B;AACzBd,UAAAA,CAAC,CAAC+V,WAAF,CAAcxO,IAAI,CAACoQ,KAAL,CAAW7W,IAAX,EAAiB8N,IAA/B;AACH;AACJ;;AACD,aAAO,IAAIsJ,QAAJ,CAAalY,CAAb,CAAP;AACH,KAhBD;;AAkBA,aAAS0V,IAAT,CAAcvW,IAAd,EAAoBkZ,MAApB,EAA4B;AACxB,UAAIlU,GAAG,GAAGmG,CAAC,CAACnL,IAAD,CAAX;AACAkZ,MAAAA,MAAM,CAACtC,WAAP,CAAmB5R,GAAnB;AACA,UAAI4F,EAAE,GAAGnC,IAAI,CAACzD,GAAD,CAAb;AACA,aAAO4F,EAAP;AACH;;AACD,aAAS9B,KAAT,CAAeR,CAAf,EAAkBC,CAAlB,EAAqB;AACjB,UAAIvD,GAAJ;AAAA,UACImU,IADJ;AAAA,UAEI7C,IAFJ;AAAA,UAGI8C,KAAK,GAAGtQ,KAAK,CAACvI,SAHlB;;AAIA,UAAI+H,CAAC,IAAIA,CAAC,CAACwP,OAAF,IAAa,KAAtB,EAA6B;AACzB,YAAIxP,CAAC,CAACsP,IAAF,IAAU5M,GAAd,EAAmB;AACf,iBAAOA,GAAG,CAAC1C,CAAC,CAACsP,IAAH,CAAV;AACH;;AACD,YAAIhP,GAAG,GAAGN,CAAC,CAAC+Q,aAAZ;AACArU,QAAAA,GAAG,GAAG,IAAI2D,OAAJ,CAAYL,CAAZ,CAAN;AACA6Q,QAAAA,IAAI,GAAG7Q,CAAC,CAACmK,oBAAF,CAAuB,MAAvB,EAA+B,CAA/B,CAAP;AACA6D,QAAAA,IAAI,GAAGhO,CAAC,CAACmK,oBAAF,CAAuB,MAAvB,EAA+B,CAA/B,CAAP;;AACA,YAAI,CAAC0G,IAAL,EAAW;AACPA,UAAAA,IAAI,GAAGhO,CAAC,CAAC,MAAD,CAAR;AACAgO,UAAAA,IAAI,CAACvC,WAAL,CAAiBhO,GAAG,CAACyC,cAAJ,CAAmB,mBAAnB,CAAjB;AACArG,UAAAA,GAAG,CAACyK,IAAJ,CAASmH,WAAT,CAAqBuC,IAArB;AACH;;AACD,YAAI,CAAC7C,IAAL,EAAW;AACPA,UAAAA,IAAI,GAAGnL,CAAC,CAAC,MAAD,CAAR;AACAnG,UAAAA,GAAG,CAACyK,IAAJ,CAASmH,WAAT,CAAqBN,IAArB;AACH;;AACDtR,QAAAA,GAAG,CAACsR,IAAJ,GAAWA,IAAX;;AACA,aAAK,IAAIvT,GAAT,IAAgBqW,KAAhB,EAAuB,IAAIA,KAAK,CAACta,GAAD,CAAL,CAAWiE,GAAX,CAAJ,EAAqB;AACxCiC,UAAAA,GAAG,CAACjC,GAAD,CAAH,GAAWqW,KAAK,CAACrW,GAAD,CAAhB;AACH;;AACDiC,QAAAA,GAAG,CAAC6S,KAAJ,GAAY7S,GAAG,CAACqD,IAAJ,GAAWrD,GAAvB;AACH,OAtBD,MAsBO;AACHA,QAAAA,GAAG,GAAGuR,IAAI,CAAC,KAAD,EAAQ3X,IAAI,CAACgK,GAAL,CAAS0Q,IAAjB,CAAV;AACAnO,QAAAA,CAAC,CAACnG,GAAG,CAACyK,IAAL,EAAW;AACRd,UAAAA,MAAM,EAAEpG,CADA;AAER1J,UAAAA,OAAO,EAAE,GAFD;AAGR6P,UAAAA,KAAK,EAAEpG,CAHC;AAIRyC,UAAAA,KAAK,EAAEA;AAJC,SAAX,CAAD;AAMH;;AACD,aAAO/F,GAAP;AACH;;AACD,aAASyD,IAAT,CAAc8Q,GAAd,EAAmB;AACf,UAAI,CAACA,GAAL,EAAU;AACN,eAAOA,GAAP;AACH;;AACD,UAAIA,GAAG,YAAY5Q,OAAf,IAA0B4Q,GAAG,YAAYR,QAA7C,EAAuD;AACnD,eAAOQ,GAAP;AACH;;AACD,UAAIA,GAAG,CAACzB,OAAJ,IAAeyB,GAAG,CAACzB,OAAJ,CAAYzL,WAAZ,MAA6B,KAAhD,EAAuD;AACnD,eAAO,IAAIvD,KAAJ,CAAUyQ,GAAV,CAAP;AACH;;AACD,UAAIA,GAAG,CAACzB,OAAJ,IAAeyB,GAAG,CAACzB,OAAJ,CAAYzL,WAAZ,MAA6B,QAA5C,IAAwDkN,GAAG,CAAC1O,IAAJ,IAAY,eAAxE,EAAyF;AACrF,eAAO,IAAI/B,KAAJ,CAAUyQ,GAAG,CAACC,eAAJ,CAAoB/G,oBAApB,CAAyC,KAAzC,EAAgD,CAAhD,CAAV,CAAP;AACH;;AACD,aAAO,IAAI9J,OAAJ,CAAY4Q,GAAZ,CAAP;AACH;;AAEDnR,IAAAA,IAAI,CAACW,CAAL,CAAOwN,IAAP,GAAcA,IAAd;AACAnO,IAAAA,IAAI,CAACW,CAAL,CAAON,IAAP,GAAcA,IAAd;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAuBAK,IAAAA,KAAK,CAACvI,SAAN,CAAgBqK,EAAhB,GAAqB,UAAU5K,IAAV,EAAgBoL,IAAhB,EAAsB;AACvC,UAAIR,EAAE,GAAG2L,IAAI,CAACvW,IAAD,EAAO,KAAKyP,IAAZ,CAAb;AACArE,MAAAA,IAAI,IAAIR,EAAE,CAACQ,IAAH,CAAQA,IAAR,CAAR;AACA,aAAOR,EAAP;AACH,KAJD;AAKA;;;;;;;;;AAOAjC,IAAAA,OAAO,CAACpI,SAAR,CAAkBkX,QAAlB,GAA6B,YAAY;AACrC,UAAIxW,GAAG,GAAG,EAAV;AAAA,UACIwY,EAAE,GAAG,KAAKhK,IAAL,CAAUiI,UADnB;;AAEA,WAAK,IAAI/X,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAG6Z,EAAE,CAAC5Z,MAAxB,EAAgCF,CAAC,GAAGC,EAApC,EAAwCD,CAAC,EAAzC,EAA6C;AACzCsB,QAAAA,GAAG,CAACtB,CAAD,CAAH,GAASyI,IAAI,CAACqR,EAAE,CAAC9Z,CAAD,CAAH,CAAb;AACH;;AACD,aAAOsB,GAAP;AACH,KAPD;;AAQA,aAASyY,UAAT,CAAoBrR,IAApB,EAA0B+D,CAA1B,EAA6B;AACzB,WAAK,IAAIzM,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGyI,IAAI,CAACxI,MAA1B,EAAkCF,CAAC,GAAGC,EAAtC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3C,YAAIgC,IAAI,GAAG;AACHkJ,UAAAA,IAAI,EAAExC,IAAI,CAAC1I,CAAD,CAAJ,CAAQkL,IADX;AAEHO,UAAAA,IAAI,EAAE/C,IAAI,CAAC1I,CAAD,CAAJ,CAAQyL,IAAR;AAFH,SAAX;AAAA,YAIIqM,QAAQ,GAAGpP,IAAI,CAAC1I,CAAD,CAAJ,CAAQ8X,QAAR,EAJf;AAKArL,QAAAA,CAAC,CAAChL,IAAF,CAAOO,IAAP;;AACA,YAAI8V,QAAQ,CAAC5X,MAAb,EAAqB;AACjB6Z,UAAAA,UAAU,CAACjC,QAAD,EAAW9V,IAAI,CAAC+V,UAAL,GAAkB,EAA7B,CAAV;AACH;AACJ;AACJ;AACD;;;;;;;;;;;;;;AAYA/O,IAAAA,OAAO,CAACpI,SAAR,CAAkBoZ,MAAlB,GAA2B,YAAY;AACnC,UAAI1Y,GAAG,GAAG,EAAV;AACAyY,MAAAA,UAAU,CAAC,CAAC,IAAD,CAAD,EAASzY,GAAT,CAAV;AACA,aAAOA,GAAG,CAAC,CAAD,CAAV;AACH,KAJD,CA/jD2B,CAokD3B;;;AACAlB,IAAAA,GAAG,CAACoC,EAAJ,CAAO,mBAAP,EAA4B,YAAY;AACpC,UAAIoW,GAAG,GAAGxY,GAAG,CAACyC,EAAJ,EAAV;AACA+V,MAAAA,GAAG,GAAGA,GAAG,CAAC/M,SAAJ,CAAc+M,GAAG,CAACqB,WAAJ,CAAgB,GAAhB,IAAuB,CAArC,CAAN;AACA,UAAIC,GAAG,GAAGtB,GAAG,CAAC1L,OAAJ,CAAY,QAAZ,EAAsB,UAAUiN,MAAV,EAAkB;AAC9C,eAAO,MAAMA,MAAM,CAACzN,WAAP,EAAb;AACH,OAFS,CAAV;;AAGA,UAAI0N,OAAO,CAACjb,GAAD,CAAP,CAAa+a,GAAb,CAAJ,EAAuB;AACnB,eAAO,KAAKpK,IAAL,CAAU4J,aAAV,CAAwB1G,WAAxB,CAAoCC,gBAApC,CAAqD,KAAKnD,IAA1D,EAAgE,IAAhE,EAAsEoD,gBAAtE,CAAuFgH,GAAvF,CAAP;AACH,OAFD,MAEO;AACH,eAAO1O,CAAC,CAAC,KAAKsE,IAAN,EAAY8I,GAAZ,CAAR;AACH;AACJ,KAXD;AAYA,QAAIwB,OAAO,GAAG;AACV,4BAAsB,CADZ;AAEV,wBAAkB,CAFR;AAGV,cAAQ,CAHE;AAIV,mBAAa,CAJH;AAKV,mBAAa,CALH;AAMV,eAAS,CANC;AAOV,6BAAuB,CAPb;AAQV,qCAA+B,CARrB;AASV,uBAAiB,CATP;AAUV,yBAAmB,CAVT;AAWV,gBAAU,CAXA;AAYV,mBAAa,CAZH;AAaV,iBAAW,CAbD;AAcV,2BAAqB,CAdX;AAeV,2BAAqB,CAfX;AAgBV,cAAQ,CAhBE;AAiBV,sBAAgB,CAjBN;AAkBV,mBAAa,CAlBH;AAmBV,gBAAU,CAnBA;AAoBV,qBAAe,CApBL;AAqBV,uBAAiB,CArBP;AAsBV,cAAQ,CAtBE;AAuBV,qBAAe,CAvBL;AAwBV,mBAAa,CAxBH;AAyBV,0BAAoB,CAzBV;AA0BV,sBAAgB,CA1BN;AA2BV,oBAAc,CA3BJ;AA4BV,sBAAgB,CA5BN;AA6BV,qBAAe,CA7BL;AA8BV,sCAAgC,CA9BtB;AA+BV,oCAA8B,CA/BpB;AAgCV,yBAAmB,CAhCT;AAiCV,iBAAW,CAjCD;AAkCV,wBAAkB,CAlCR;AAmCV,wBAAkB,CAnCR;AAoCV,gBAAU,CApCA;AAqCV,oBAAc,CArCJ;AAsCV,oBAAc,CAtCJ;AAuCV,sBAAgB,CAvCN;AAwCV,cAAQ,CAxCE;AAyCV,iBAAW,CAzCD;AA0CV,kBAAY,CA1CF;AA2CV,wBAAkB,CA3CR;AA4CV,yBAAmB,CA5CT;AA6CV,oBAAc,CA7CJ;AA8CV,sBAAgB,CA9CN;AA+CV,gBAAU,CA/CA;AAgDV,0BAAoB,CAhDV;AAiDV,2BAAqB,CAjDX;AAkDV,wBAAkB,CAlDR;AAmDV,yBAAmB,CAnDT;AAoDV,2BAAqB,CApDX;AAqDV,wBAAkB,CArDR;AAsDV,sBAAgB,CAtDN;AAuDV,qBAAe,CAvDL;AAwDV,yBAAmB,CAxDT;AAyDV,wBAAkB,CAzDR;AA0DV,sBAAgB,CA1DN;AA2DV,oBAAc,CA3DJ;AA4DV,sBAAgB,CA5DN;AA6DV,sBAAgB;AA7DN,KAAd;AAgEAha,IAAAA,GAAG,CAACoC,EAAJ,CAAO,gBAAP,EAAyB,UAAU6O,KAAV,EAAiB;AACtC,UAAIuH,GAAG,GAAGxY,GAAG,CAACyC,EAAJ,EAAV;AAAA,UACI4I,IAAI,GAAG,EADX;AAEAmN,MAAAA,GAAG,GAAGA,GAAG,CAAC/M,SAAJ,CAAc+M,GAAG,CAACqB,WAAJ,CAAgB,GAAhB,IAAuB,CAArC,CAAN;AACAxO,MAAAA,IAAI,CAACmN,GAAD,CAAJ,GAAYvH,KAAZ;AACA,UAAI0B,KAAK,GAAG6F,GAAG,CAAC1L,OAAJ,CAAY,SAAZ,EAAuB,UAAUF,GAAV,EAAemN,MAAf,EAAuB;AAClD,eAAOA,MAAM,CAACE,WAAP,EAAP;AACH,OAFO,CAAZ;AAAA,UAGIH,GAAG,GAAGtB,GAAG,CAAC1L,OAAJ,CAAY,QAAZ,EAAsB,UAAUiN,MAAV,EAAkB;AAC1C,eAAO,MAAMA,MAAM,CAACzN,WAAP,EAAb;AACH,OAFK,CAHV;;AAMA,UAAI0N,OAAO,CAACjb,GAAD,CAAP,CAAa+a,GAAb,CAAJ,EAAuB;AACnB,aAAKpK,IAAL,CAAUiD,KAAV,CAAgBA,KAAhB,IAAyB1B,KAAK,IAAI,IAAT,GAAgBnH,CAAhB,GAAoBmH,KAA7C;AACH,OAFD,MAEO;AACH7F,QAAAA,CAAC,CAAC,KAAKsE,IAAN,EAAYrE,IAAZ,CAAD;AACH;AACJ,KAhBD;;AAiBC,eAAUgO,KAAV,EAAiB,CAAE,CAAnB,EAAoBtQ,KAAK,CAACvI,SAA1B,CAAD,CAlqD2B,CAoqD3B;;AACA;;;;;;;;;;;;;;;;;;AAgBA6H,IAAAA,IAAI,CAAC6R,IAAL,GAAY,UAAU/O,GAAV,EAAegP,QAAf,EAAyB7V,QAAzB,EAAmCpE,KAAnC,EAAyC;AACjD,UAAIka,GAAG,GAAG,IAAIC,cAAJ,EAAV;AAAA,UACItU,EAAE,GAAGlB,EAAE,EADX;;AAEA,UAAIuV,GAAJ,EAAS;AACL,YAAIzR,EAAE,CAACwR,QAAD,EAAW,UAAX,CAAN,EAA8B;AAC1Bja,UAAAA,KAAK,GAAGoE,QAAR;AACAA,UAAAA,QAAQ,GAAG6V,QAAX;AACAA,UAAAA,QAAQ,GAAG,IAAX;AACH,SAJD,MAIO,IAAIxR,EAAE,CAACwR,QAAD,EAAW,QAAX,CAAN,EAA4B;AAC/B,cAAIG,EAAE,GAAG,EAAT;;AACA,eAAK,IAAItX,GAAT,IAAgBmX,QAAhB,EAA0B,IAAIA,QAAQ,CAAC7X,cAAT,CAAwBU,GAAxB,CAAJ,EAAkC;AACxDsX,YAAAA,EAAE,CAACjZ,IAAH,CAAQkZ,kBAAkB,CAACvX,GAAD,CAAlB,GAA0B,GAA1B,GAAgCuX,kBAAkB,CAACJ,QAAQ,CAACnX,GAAD,CAAT,CAA1D;AACH;;AACDmX,UAAAA,QAAQ,GAAGG,EAAE,CAAC3M,IAAH,CAAQ,GAAR,CAAX;AACH;;AACDyM,QAAAA,GAAG,CAACI,IAAJ,CAAUL,QAAQ,GAAG,MAAH,GAAY,KAA9B,EAAsChP,GAAtC,EAA2C,IAA3C;;AACA,YAAIgP,QAAJ,EAAc;AACVC,UAAAA,GAAG,CAACK,gBAAJ,CAAqB,kBAArB,EAAyC,gBAAzC;AACAL,UAAAA,GAAG,CAACK,gBAAJ,CAAqB,cAArB,EAAqC,mCAArC;AACH;;AACD,YAAInW,QAAJ,EAAc;AACVtE,UAAAA,GAAG,CAACoD,IAAJ,CAAS,eAAe2C,EAAf,GAAoB,IAA7B,EAAmCzB,QAAnC;AACAtE,UAAAA,GAAG,CAACoD,IAAJ,CAAS,eAAe2C,EAAf,GAAoB,MAA7B,EAAqCzB,QAArC;AACAtE,UAAAA,GAAG,CAACoD,IAAJ,CAAS,eAAe2C,EAAf,GAAoB,MAA7B,EAAqCzB,QAArC;AACH;;AACD8V,QAAAA,GAAG,CAACM,kBAAJ,GAAyB,YAAW;AAChC,cAAIN,GAAG,CAACO,UAAJ,IAAkB,CAAtB,EAAyB;AACzB3a,UAAAA,GAAG,CAAC,eAAe+F,EAAf,GAAoB,GAApB,GAA0BqU,GAAG,CAACvT,MAA/B,EAAuC3G,KAAvC,EAA8Cka,GAA9C,CAAH;AACH,SAHD;;AAIA,YAAIA,GAAG,CAACO,UAAJ,IAAkB,CAAtB,EAAyB;AACrB,iBAAOP,GAAP;AACH;;AACDA,QAAAA,GAAG,CAACQ,IAAJ,CAAST,QAAT;AACA,eAAOC,GAAP;AACH;AACJ,KAnCD;AAoCA;;;;;;;;;;;;AAUA/R,IAAAA,IAAI,CAACwS,IAAL,GAAY,UAAU1P,GAAV,EAAe7G,QAAf,EAAyBpE,KAAzB,EAAgC;AACxCmI,MAAAA,IAAI,CAAC6R,IAAL,CAAU/O,GAAV,EAAe,UAAUiP,GAAV,EAAe;AAC1B,YAAItZ,CAAC,GAAGuH,IAAI,CAACoQ,KAAL,CAAW2B,GAAG,CAACU,YAAf,CAAR;AACA5a,QAAAA,KAAK,GAAGoE,QAAQ,CAAC5D,IAAT,CAAcR,KAAd,EAAqBY,CAArB,CAAH,GAA6BwD,QAAQ,CAACxD,CAAD,CAA1C;AACH,OAHD;AAIH,KALD;;AAMA,QAAIia,SAAS,GAAG,UAAUC,IAAV,EAAgB;AAC5B,UAAIC,GAAG,GAAGD,IAAI,CAACE,qBAAL,EAAV;AAAA,UACIrS,GAAG,GAAGmS,IAAI,CAAC1B,aADf;AAAA,UAEIC,IAAI,GAAG1Q,GAAG,CAAC0Q,IAFf;AAAA,UAGI4B,OAAO,GAAGtS,GAAG,CAACmN,eAHlB;AAAA,UAIIoF,SAAS,GAAGD,OAAO,CAACC,SAAR,IAAqB7B,IAAI,CAAC6B,SAA1B,IAAuC,CAJvD;AAAA,UAI0DC,UAAU,GAAGF,OAAO,CAACE,UAAR,IAAsB9B,IAAI,CAAC8B,UAA3B,IAAyC,CAJhH;AAAA,UAKIC,GAAG,GAAIL,GAAG,CAACK,GAAJ,IAAY9J,CAAC,CAACvI,GAAF,CAAMsS,WAAN,IAAqBJ,OAAO,CAACK,SAA7B,IAA0CjC,IAAI,CAACiC,SAA3D,IAAyEJ,SALpF;AAAA,UAMIK,IAAI,GAAGR,GAAG,CAACQ,IAAJ,IAAYjK,CAAC,CAACvI,GAAF,CAAMyS,WAAN,IAAqBP,OAAO,CAACQ,UAA7B,IAA2CpC,IAAI,CAACoC,UAA5D,IAA0EN,UANrF;AAOA,aAAO;AACH1T,QAAAA,CAAC,EAAE2T,GADA;AAEH9T,QAAAA,CAAC,EAAEiU;AAFA,OAAP;AAIH,KAZD;AAaA;;;;;;;;;;;;;;AAYApT,IAAAA,IAAI,CAACuT,iBAAL,GAAyB,UAAUpU,CAAV,EAAaG,CAAb,EAAgB;AACrC,UAAImQ,KAAK,GAAG,IAAZ;AAAA,UACIpB,GAAG,GAAGoB,KAAK,CAAC+D,MADhB;AAAA,UAEIC,MAAM,GAAGjd,IAAI,CAACgK,GAAL,CAASkT,gBAAT,CAA0BvU,CAA1B,EAA6BG,CAA7B,CAFb;;AAGA,UAAI9I,IAAI,CAACoK,GAAL,CAAS+S,KAAT,IAAkBF,MAAM,CAAC/D,OAAP,IAAkB,KAAxC,EAA+C;AAC3C,YAAIkE,EAAE,GAAGlB,SAAS,CAACe,MAAD,CAAlB;AAAA,YACII,EAAE,GAAGJ,MAAM,CAACK,aAAP,EADT;AAEAD,QAAAA,EAAE,CAAC1U,CAAH,GAAOA,CAAC,GAAGyU,EAAE,CAACzU,CAAd;AACA0U,QAAAA,EAAE,CAACvU,CAAH,GAAOA,CAAC,GAAGsU,EAAE,CAACtU,CAAd;AACAuU,QAAAA,EAAE,CAACvN,KAAH,GAAWuN,EAAE,CAACtN,MAAH,GAAY,CAAvB;AACA,YAAIwN,IAAI,GAAGN,MAAM,CAACO,mBAAP,CAA2BH,EAA3B,EAA+B,IAA/B,CAAX;;AACA,YAAIE,IAAI,CAACtc,MAAT,EAAiB;AACbgc,UAAAA,MAAM,GAAGM,IAAI,CAACA,IAAI,CAACtc,MAAL,GAAc,CAAf,CAAb;AACH;AACJ;;AACD,UAAI,CAACgc,MAAL,EAAa;AACT,eAAO,IAAP;AACH;;AACD,aAAOpT,IAAI,CAACoT,MAAD,CAAX;AACH,KAnBD;AAoBA;;;;;;;;;;;;;;;;;AAeAzT,IAAAA,IAAI,CAACiU,MAAL,GAAc,UAAUxb,CAAV,EAAa;AACvBA,MAAAA,CAAC,CAACuH,IAAD,EAAOO,OAAP,EAAgBG,KAAhB,EAAuBlK,IAAvB,EAA6Bma,QAA7B,CAAD;AACH,KAFD;;AAGAna,IAAAA,IAAI,CAACoK,GAAL,CAASZ,IAAT,GAAgBA,IAAhB;AACA,WAAOA,IAAP;AACC,GA1yDW,CA0yDVxE,MAAM,IAAI,IA1yDA,CAAZ,CApXyC,CAgqEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAwE,EAAAA,IAAI,CAACiU,MAAL,CAAY,UAAUjU,IAAV,EAAgBO,OAAhB,EAAyBG,KAAzB,EAAgClK,IAAhC,EAAsCma,QAAtC,EAAgD;AACxD,QAAIuD,OAAO,GAAG3T,OAAO,CAACpI,SAAtB;AAAA,QACImI,EAAE,GAAGN,IAAI,CAACM,EADd;AAAA,QAEIQ,GAAG,GAAGhJ,MAFV;AAAA,QAGIyV,OAAO,GAAGvN,IAAI,CAACsN,QAHnB;AAAA,QAIIvK,CAAC,GAAG/C,IAAI,CAACW,CAAL,CAAOoC,CAJf;AAAA,QAKIoL,IAAI,GAAGnO,IAAI,CAACW,CAAL,CAAOwN,IALlB;AAAA,QAMIL,WAAW,GAAG9N,IAAI,CAACW,CAAL,CAAOmN,WANzB;AAAA,QAOIpX,GAAG,GAAG,gBAPV;AAAA,QAQI2J,IAAI,GAAGL,IAAI,CAACW,CAAL,CAAON,IARlB;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA6T,IAAAA,OAAO,CAACxF,OAAR,GAAkB,UAAUyF,kBAAV,EAA8B;AAC5C,UAAI,CAACnU,IAAI,CAAC4M,MAAN,IAAgB,CAAC5M,IAAI,CAACgH,IAA1B,EAAgC;AAC5B,eAAO,KAAKK,IAAL,CAAUqH,OAAV,EAAP;AACH;;AACD,UAAIlM,EAAE,GAAG,IAAT;AAAA,UACIkJ,CAAC,GAAG,IAAI1L,IAAI,CAAC4M,MAAT,EADR;;AAEA,UAAIpK,EAAE,CAAC4R,OAAP,EAAgB;AACZ,eAAOpU,IAAI,CAACW,CAAL,CAAOiS,GAAP,EAAP;AACH;;AACD,aAAOpQ,EAAE,CAACC,IAAH,IAAW,KAAlB,EAAyB;AACrB,YAAI,CAAC0R,kBAAL,EAAyB;AACrBzI,UAAAA,CAAC,GAAGA,CAAC,CAAC2B,GAAF,CAAM7K,EAAE,CAACqN,SAAH,GAAewE,WAAf,CAA2BnH,SAA3B,CAAqC1K,EAAE,CAACQ,IAAH,CAAQ,GAAR,KAAgB,CAArD,EAAwDR,EAAE,CAACQ,IAAH,CAAQ,GAAR,KAAgB,CAAxE,CAAN,CAAJ;AACH;;AACD,YAAIR,EAAE,CAAC8R,QAAP,EAAiB;AACb9R,UAAAA,EAAE,GAAGA,EAAE,CAAC8R,QAAR;AACH,SAFD,MAEO;AACH,cAAIC,IAAI,GAAG/R,EAAE,CAACQ,IAAH,CAAQ,YAAR,CAAX;AACAR,UAAAA,EAAE,GAAGA,EAAE,CAAC8R,QAAH,GAAc9R,EAAE,CAAC6E,IAAH,CAAQ4J,aAAR,CAAsBuD,cAAtB,CAAqCD,IAAI,CAACnR,SAAL,CAAemR,IAAI,CAACtL,OAAL,CAAa,GAAb,IAAoB,CAAnC,CAArC,CAAnB;AACH;AACJ;;AACD,UAAItI,CAAC,GAAG6B,EAAE,CAAC7B,CAAX;AAAA,UACI8T,UAAU,GAAGzU,IAAI,CAACgH,IAAL,CAAUlJ,GAAV,CAAc0E,EAAE,CAACC,IAAjB,KAA0BzC,IAAI,CAACgH,IAAL,CAAUlJ,GAAV,CAAc4W,KADzD;;AAEA,UAAI;AACA,YAAIP,kBAAJ,EAAwB;AACpBxT,UAAAA,CAAC,CAACgU,MAAF,GAAWF,UAAU,GAAGzU,IAAI,CAACgH,IAAL,CAAU0H,OAAV,CAAkBlM,EAAE,CAACoS,QAAH,GAAcH,UAAU,CAACjS,EAAD,CAA1C,CAAH,GAAqDxC,IAAI,CAACW,CAAL,CAAOiS,GAAP,CAAWpQ,EAAE,CAAC6E,IAAH,CAAQqH,OAAR,EAAX,CAA1E;AACA,iBAAO1O,IAAI,CAACW,CAAL,CAAOiS,GAAP,CAAWjS,CAAC,CAACgU,MAAb,CAAP;AACH,SAHD,MAGO;AACHnS,UAAAA,EAAE,CAACoS,QAAH,GAAcH,UAAU,CAACjS,EAAD,CAAxB;AACAA,UAAAA,EAAE,CAACqS,MAAH,GAAYrS,EAAE,CAACqN,SAAH,GAAewE,WAA3B;AACA1T,UAAAA,CAAC,CAAC+L,IAAF,GAAS1M,IAAI,CAACgH,IAAL,CAAU0H,OAAV,CAAkB1O,IAAI,CAACgH,IAAL,CAAU8N,GAAV,CAActS,EAAE,CAACoS,QAAjB,EAA2BlJ,CAAC,CAAC2B,GAAF,CAAM7K,EAAE,CAACqS,MAAT,CAA3B,CAAlB,CAAT;AACA,iBAAO7U,IAAI,CAACW,CAAL,CAAOiS,GAAP,CAAWjS,CAAC,CAAC+L,IAAb,CAAP;AACH;AACJ,OAVD,CAUE,OAAO3U,CAAP,EAAU;AACR;AACA,eAAOiI,IAAI,CAACW,CAAL,CAAOiS,GAAP,EAAP;AACH;AACJ,KApCD;;AAqCA,QAAImC,UAAU,GAAG,YAAY;AACzB,aAAO,KAAKlK,MAAZ;AACH,KAFD;;AAGA,aAASmK,gBAAT,CAA0BxS,EAA1B,EAA8B+J,IAA9B,EAAoC;AAChC,UAAIA,IAAI,IAAI,IAAZ,EAAkB;AACd,YAAI0I,QAAQ,GAAG,IAAf;;AACA,YAAIzS,EAAE,CAACC,IAAH,IAAW,gBAAX,IAA+BD,EAAE,CAACC,IAAH,IAAW,gBAA9C,EAAgE;AAC5D8J,UAAAA,IAAI,GAAG/J,EAAE,CAAC6E,IAAH,CAAQ/D,YAAR,CAAqB,mBAArB,CAAP;AACH,SAFD,MAEO,IAAId,EAAE,CAACC,IAAH,IAAW,SAAf,EAA0B;AAC7B8J,UAAAA,IAAI,GAAG/J,EAAE,CAAC6E,IAAH,CAAQ/D,YAAR,CAAqB,kBAArB,CAAP;AACH,SAFM,MAEA;AACHiJ,UAAAA,IAAI,GAAG/J,EAAE,CAAC6E,IAAH,CAAQ/D,YAAR,CAAqB,WAArB,CAAP;AACH;;AACD,YAAI,CAACiJ,IAAL,EAAW;AACP,iBAAO,IAAIvM,IAAI,CAAC4M,MAAT,EAAP;AACH;;AACDL,QAAAA,IAAI,GAAGvM,IAAI,CAACW,CAAL,CAAO2L,mBAAP,CAA2BC,IAA3B,CAAP;AACH,OAbD,MAaO;AACH,YAAI,CAACvM,IAAI,CAACW,CAAL,CAAO6L,WAAP,CAAmBjS,IAAnB,CAAwBgS,IAAxB,CAAL,EAAoC;AAChCA,UAAAA,IAAI,GAAGvM,IAAI,CAACW,CAAL,CAAO2L,mBAAP,CAA2BC,IAA3B,CAAP;AACH,SAFD,MAEO;AACHA,UAAAA,IAAI,GAAGzL,GAAG,CAACyL,IAAD,CAAH,CAAU9H,OAAV,CAAkB,eAAlB,EAAmCjC,EAAE,CAAC7B,CAAH,CAAKkP,SAAL,IAAkBpO,CAArD,CAAP;AACH;;AACD,YAAInB,EAAE,CAACiM,IAAD,EAAO,OAAP,CAAN,EAAuB;AACnBA,UAAAA,IAAI,GAAGvM,IAAI,CAACgH,IAAL,GAAYhH,IAAI,CAACgH,IAAL,CAAU/L,QAAV,CAAmB5C,IAAnB,CAAwBkU,IAAxB,CAAZ,GAA4CzL,GAAG,CAACyL,IAAD,CAAtD;AACH;;AACD/J,QAAAA,EAAE,CAAC7B,CAAH,CAAKkP,SAAL,GAAiBtD,IAAjB;AACH;;AACD,UAAIb,CAAC,GAAG1L,IAAI,CAACW,CAAL,CAAO8L,gBAAP,CAAwBF,IAAxB,EAA8B/J,EAAE,CAACkM,OAAH,CAAW,CAAX,CAA9B,CAAR;;AACA,UAAIuG,QAAJ,EAAc;AACV,eAAOvJ,CAAP;AACH,OAFD,MAEO;AACHlJ,QAAAA,EAAE,CAACqS,MAAH,GAAYnJ,CAAZ;AACH;AACJ;AACD;;;;;;;;;;;;;;;;;;;;;;AAoBAwI,IAAAA,OAAO,CAACrE,SAAR,GAAoB,UAAUtD,IAAV,EAAgB;AAChC,UAAI5L,CAAC,GAAG,KAAKA,CAAb;;AACA,UAAI4L,IAAI,IAAI,IAAZ,EAAkB;AACd,YAAI2I,IAAI,GAAG,IAAX;AAAA,YACIC,MAAM,GAAG,IAAInV,IAAI,CAAC4M,MAAT,CAAgB,KAAKvF,IAAL,CAAU+N,MAAV,EAAhB,CADb;AAAA,YAEIC,KAAK,GAAGL,gBAAgB,CAAC,IAAD,CAF5B;AAAA,YAGIM,EAAE,GAAG,CAACD,KAAD,CAHT;AAAA,YAII3J,CAAC,GAAG,IAAI1L,IAAI,CAAC4M,MAAT,EAJR;AAAA,YAKIrV,CALJ;AAAA,YAMIge,WAAW,GAAGF,KAAK,CAACG,iBAAN,EANlB;AAAA,YAOI3K,MAAM,GAAG/J,GAAG,CAACuU,KAAD,CAAH,IAAcvU,GAAG,CAAC,KAAK+T,MAAN,CAAjB,GACG/T,GAAG,CAACH,CAAC,CAACkP,SAAH,CADN,GACsB0F,WARnC;;AASA,eAAOL,IAAI,CAACzS,IAAL,IAAa,KAAb,KAAuByS,IAAI,GAAGA,IAAI,CAACpE,MAAL,EAA9B,CAAP,EAAqD;AACjDwE,UAAAA,EAAE,CAACtc,IAAH,CAAQgc,gBAAgB,CAACE,IAAD,CAAxB;AACH;;AACD3d,QAAAA,CAAC,GAAG+d,EAAE,CAAC7d,MAAP;;AACA,eAAOF,CAAC,EAAR,EAAY;AACRmU,UAAAA,CAAC,CAAC2B,GAAF,CAAMiI,EAAE,CAAC/d,CAAD,CAAR;AACH;;AACD,eAAO;AACHsT,UAAAA,MAAM,EAAEA,MADL;AAEH4K,UAAAA,YAAY,EAAEN,MAFX;AAGHO,UAAAA,WAAW,EAAEhK,CAHV;AAIH2I,UAAAA,WAAW,EAAEgB,KAJV;AAKHM,UAAAA,UAAU,EAAER,MAAM,CAACrQ,KAAP,GAAeuI,GAAf,CAAmBgI,KAAK,CAACpI,MAAN,EAAnB,CALT;AAMHkI,UAAAA,MAAM,EAAEA,MAAM,CAACK,iBAAP,EANL;AAOHI,UAAAA,KAAK,EAAElK,CAAC,CAAC8J,iBAAF,EAPJ;AAQHH,UAAAA,KAAK,EAAEE,WARJ;AASHta,UAAAA,QAAQ,EAAE8Z;AATP,SAAP;AAWH;;AACD,UAAIxI,IAAI,YAAYvM,IAAI,CAAC4M,MAAzB,EAAiC;AAC7B,aAAKiI,MAAL,GAActI,IAAd;AACA,aAAK5L,CAAL,CAAOkP,SAAP,GAAmBtD,IAAI,CAACiJ,iBAAL,EAAnB;AACH,OAHD,MAGO;AACHR,QAAAA,gBAAgB,CAAC,IAAD,EAAOzI,IAAP,CAAhB;AACH;;AAED,UAAI,KAAKlF,IAAT,EAAe;AACX,YAAI,KAAK5E,IAAL,IAAa,gBAAb,IAAiC,KAAKA,IAAL,IAAa,gBAAlD,EAAoE;AAChEM,UAAAA,CAAC,CAAC,KAAKsE,IAAN,EAAY;AAACwO,YAAAA,iBAAiB,EAAE,KAAKhB;AAAzB,WAAZ,CAAD;AACH,SAFD,MAEO,IAAI,KAAKpS,IAAL,IAAa,SAAjB,EAA4B;AAC/BM,UAAAA,CAAC,CAAC,KAAKsE,IAAN,EAAY;AAACyO,YAAAA,gBAAgB,EAAE,KAAKjB;AAAxB,WAAZ,CAAD;AACH,SAFM,MAEA;AACH9R,UAAAA,CAAC,CAAC,KAAKsE,IAAN,EAAY;AAACwI,YAAAA,SAAS,EAAE,KAAKgF;AAAjB,WAAZ,CAAD;AACH;AACJ;;AAED,aAAO,IAAP;AACH,KAjDD;AAkDA;;;;;;;;;;AAQAX,IAAAA,OAAO,CAACpD,MAAR,GAAiB,YAAY;AACzB,aAAOzQ,IAAI,CAAC,KAAKgH,IAAL,CAAUwG,UAAX,CAAX;AACH,KAFD;AAGA;;;;;;;;;;AASA;;;;;;;;AAMAqG,IAAAA,OAAO,CAAC6B,MAAR,GAAiB7B,OAAO,CAAC7G,GAAR,GAAc,UAAU7K,EAAV,EAAc;AACzC,UAAIA,EAAJ,EAAQ;AACJ,YAAIA,EAAE,CAACC,IAAH,IAAW,KAAf,EAAsB;AAClB,cAAIuT,EAAE,GAAG,IAAT;AACAxT,UAAAA,EAAE,CAAC4M,OAAH,CAAW,UAAU5M,EAAV,EAAc;AACrBwT,YAAAA,EAAE,CAAC3I,GAAH,CAAO7K,EAAP;AACH,WAFD;AAGA,iBAAO,IAAP;AACH;;AACDA,QAAAA,EAAE,GAAGnC,IAAI,CAACmC,EAAD,CAAT;AACA,aAAK6E,IAAL,CAAUmH,WAAV,CAAsBhM,EAAE,CAAC6E,IAAzB;AACA7E,QAAAA,EAAE,CAACiN,KAAH,GAAW,KAAKA,KAAhB;AACH;;AACD,aAAO,IAAP;AACH,KAdD;AAeA;;;;;;;;;;;AASAyE,IAAAA,OAAO,CAAC+B,QAAR,GAAmB,UAAUzT,EAAV,EAAc;AAC7B,UAAIA,EAAJ,EAAQ;AACJA,QAAAA,EAAE,GAAGnC,IAAI,CAACmC,EAAD,CAAT;AACAA,QAAAA,EAAE,CAACuT,MAAH,CAAU,IAAV;AACH;;AACD,aAAO,IAAP;AACH,KAND;AAOA;;;;;;;;;;;AASA7B,IAAAA,OAAO,CAACgC,OAAR,GAAkB,UAAU1T,EAAV,EAAc;AAC5B,UAAIA,EAAJ,EAAQ;AACJ,YAAIA,EAAE,CAACC,IAAH,IAAW,KAAf,EAAsB;AAClB,cAAIuT,EAAE,GAAG,IAAT;AAAA,cACIG,KADJ;AAEA3T,UAAAA,EAAE,CAAC4M,OAAH,CAAW,UAAU5M,EAAV,EAAc;AACrB,gBAAI2T,KAAJ,EAAW;AACPA,cAAAA,KAAK,CAAC/N,KAAN,CAAY5F,EAAZ;AACH,aAFD,MAEO;AACHwT,cAAAA,EAAE,CAACE,OAAH,CAAW1T,EAAX;AACH;;AACD2T,YAAAA,KAAK,GAAG3T,EAAR;AACH,WAPD;AAQA,iBAAO,IAAP;AACH;;AACDA,QAAAA,EAAE,GAAGnC,IAAI,CAACmC,EAAD,CAAT;AACA,YAAIsO,MAAM,GAAGtO,EAAE,CAACsO,MAAH,EAAb;AACA,aAAKzJ,IAAL,CAAU+O,YAAV,CAAuB5T,EAAE,CAAC6E,IAA1B,EAAgC,KAAKA,IAAL,CAAUqJ,UAA1C;AACA,aAAKrD,GAAL,IAAY,KAAKA,GAAL,EAAZ;AACA7K,QAAAA,EAAE,CAACiN,KAAH,GAAW,KAAKA,KAAhB;AACA,aAAKqB,MAAL,MAAiB,KAAKA,MAAL,GAAczD,GAAd,EAAjB;AACAyD,QAAAA,MAAM,IAAIA,MAAM,CAACzD,GAAP,EAAV;AACH;;AACD,aAAO,IAAP;AACH,KAxBD;AAyBA;;;;;;;;;;;AASA6G,IAAAA,OAAO,CAACmC,SAAR,GAAoB,UAAU7T,EAAV,EAAc;AAC9BA,MAAAA,EAAE,GAAGnC,IAAI,CAACmC,EAAD,CAAT;AACAA,MAAAA,EAAE,CAAC0T,OAAH,CAAW,IAAX;AACA,aAAO,IAAP;AACH,KAJD;AAKA;;;;;;;;;;;AASAhC,IAAAA,OAAO,CAAC/L,MAAR,GAAiB,UAAU3F,EAAV,EAAc;AAC3B,UAAIA,EAAE,CAACC,IAAH,IAAW,KAAf,EAAsB;AAClB,YAAIuT,EAAE,GAAG,IAAT;AACAxT,QAAAA,EAAE,CAAC4M,OAAH,CAAW,UAAU5M,EAAV,EAAc;AACrB,cAAIsO,MAAM,GAAGtO,EAAE,CAACsO,MAAH,EAAb;AACAkF,UAAAA,EAAE,CAAC3O,IAAH,CAAQwG,UAAR,CAAmBuI,YAAnB,CAAgC5T,EAAE,CAAC6E,IAAnC,EAAyC2O,EAAE,CAAC3O,IAA5C;AACAyJ,UAAAA,MAAM,IAAIA,MAAM,CAACzD,GAAP,EAAV;AACH,SAJD;AAKA,aAAKyD,MAAL,GAAczD,GAAd;AACA,eAAO,IAAP;AACH;;AACD7K,MAAAA,EAAE,GAAGnC,IAAI,CAACmC,EAAD,CAAT;AACA,UAAIsO,MAAM,GAAGtO,EAAE,CAACsO,MAAH,EAAb;AACA,WAAKzJ,IAAL,CAAUwG,UAAV,CAAqBuI,YAArB,CAAkC5T,EAAE,CAAC6E,IAArC,EAA2C,KAAKA,IAAhD;AACA,WAAKyJ,MAAL,MAAiB,KAAKA,MAAL,GAAczD,GAAd,EAAjB;AACAyD,MAAAA,MAAM,IAAIA,MAAM,CAACzD,GAAP,EAAV;AACA7K,MAAAA,EAAE,CAACiN,KAAH,GAAW,KAAKA,KAAhB;AACA,aAAO,IAAP;AACH,KAlBD;AAmBA;;;;;;;;;;;AASAyE,IAAAA,OAAO,CAAC9L,KAAR,GAAgB,UAAU5F,EAAV,EAAc;AAC1BA,MAAAA,EAAE,GAAGnC,IAAI,CAACmC,EAAD,CAAT;AACA,UAAIsO,MAAM,GAAGtO,EAAE,CAACsO,MAAH,EAAb;;AACA,UAAI,KAAKzJ,IAAL,CAAUiP,WAAd,EAA2B;AACvB,aAAKjP,IAAL,CAAUwG,UAAV,CAAqBuI,YAArB,CAAkC5T,EAAE,CAAC6E,IAArC,EAA2C,KAAKA,IAAL,CAAUiP,WAArD;AACH,OAFD,MAEO;AACH,aAAKjP,IAAL,CAAUwG,UAAV,CAAqBW,WAArB,CAAiChM,EAAE,CAAC6E,IAApC;AACH;;AACD,WAAKyJ,MAAL,MAAiB,KAAKA,MAAL,GAAczD,GAAd,EAAjB;AACAyD,MAAAA,MAAM,IAAIA,MAAM,CAACzD,GAAP,EAAV;AACA7K,MAAAA,EAAE,CAACiN,KAAH,GAAW,KAAKA,KAAhB;AACA,aAAO,IAAP;AACH,KAZD;AAaA;;;;;;;;;;;AASAyE,IAAAA,OAAO,CAACkC,YAAR,GAAuB,UAAU5T,EAAV,EAAc;AACjCA,MAAAA,EAAE,GAAGnC,IAAI,CAACmC,EAAD,CAAT;AACA,UAAIsO,MAAM,GAAG,KAAKA,MAAL,EAAb;AACAtO,MAAAA,EAAE,CAAC6E,IAAH,CAAQwG,UAAR,CAAmBuI,YAAnB,CAAgC,KAAK/O,IAArC,EAA2C7E,EAAE,CAAC6E,IAA9C;AACA,WAAKoI,KAAL,GAAajN,EAAE,CAACiN,KAAhB;AACAqB,MAAAA,MAAM,IAAIA,MAAM,CAACzD,GAAP,EAAV;AACA7K,MAAAA,EAAE,CAACsO,MAAH,MAAetO,EAAE,CAACsO,MAAH,GAAYzD,GAAZ,EAAf;AACA,aAAO,IAAP;AACH,KARD;AASA;;;;;;;;;;;AASA6G,IAAAA,OAAO,CAACqC,WAAR,GAAsB,UAAU/T,EAAV,EAAc;AAChCA,MAAAA,EAAE,GAAGnC,IAAI,CAACmC,EAAD,CAAT;AACA,UAAIsO,MAAM,GAAG,KAAKA,MAAL,EAAb;AACAtO,MAAAA,EAAE,CAAC6E,IAAH,CAAQwG,UAAR,CAAmBuI,YAAnB,CAAgC,KAAK/O,IAArC,EAA2C7E,EAAE,CAAC6E,IAAH,CAAQiP,WAAnD;AACA,WAAK7G,KAAL,GAAajN,EAAE,CAACiN,KAAhB;AACAqB,MAAAA,MAAM,IAAIA,MAAM,CAACzD,GAAP,EAAV;AACA7K,MAAAA,EAAE,CAACsO,MAAH,MAAetO,EAAE,CAACsO,MAAH,GAAYzD,GAAZ,EAAf;AACA,aAAO,IAAP;AACH,KARD;AASA;;;;;;;;;AAOA6G,IAAAA,OAAO,CAACsC,MAAR,GAAiB,YAAY;AACzB,UAAI1F,MAAM,GAAG,KAAKA,MAAL,EAAb;AACA,WAAKzJ,IAAL,CAAUwG,UAAV,IAAwB,KAAKxG,IAAL,CAAUwG,UAAV,CAAqBgB,WAArB,CAAiC,KAAKxH,IAAtC,CAAxB;AACA,aAAO,KAAKoI,KAAZ;AACA,WAAK2E,OAAL,GAAe,IAAf;AACAtD,MAAAA,MAAM,IAAIA,MAAM,CAACzD,GAAP,EAAV;AACA,aAAO,IAAP;AACH,KAPD;AAQA;;;;;;;;;;;AASA6G,IAAAA,OAAO,CAAClG,MAAR,GAAiB,UAAUc,KAAV,EAAiB;AAC9BA,MAAAA,KAAK,GAAGhO,GAAG,CAACgO,KAAD,CAAH,CAAWrK,OAAX,CAAmB,WAAnB,EAAgC,OAAhC,CAAR;AACA,aAAOpE,IAAI,CAAC,KAAKgH,IAAL,CAAU5G,aAAV,CAAwBqO,KAAxB,CAAD,CAAX;AACH,KAHD;AAIA;;;;;;;;;;;AASAoF,IAAAA,OAAO,CAACnF,SAAR,GAAoB,UAAUD,KAAV,EAAiB;AACjC,UAAIE,QAAQ,GAAG,KAAK3H,IAAL,CAAU4H,gBAAV,CAA2BH,KAA3B,CAAf;AAAA,UACI3Q,GAAG,GAAG,CAAC6B,IAAI,CAAC7B,GAAL,IAAYjG,KAAb,GADV;;AAEA,WAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyX,QAAQ,CAACvX,MAA7B,EAAqCF,CAAC,EAAtC,EAA0C;AACtC4G,QAAAA,GAAG,CAACnF,IAAJ,CAASqH,IAAI,CAAC2O,QAAQ,CAACzX,CAAD,CAAT,CAAb;AACH;;AACD,aAAO4G,GAAP;AACH,KAPD;AAQA;;;;;;;;;;;;AAUA+V,IAAAA,OAAO,CAACuC,IAAR,GAAe,UAAUzT,IAAV,EAAgB4F,KAAhB,EAAuB;AAClC,UAAIA,KAAK,IAAI,IAAb,EAAmB;AACfA,QAAAA,KAAK,GAAG,KAAK5F,IAAL,CAAUA,IAAV,CAAR;AACH;;AACD,aAAO,CAACuK,OAAO,CAAC,IAAD,EAAOvK,IAAP,EAAa4F,KAAb,CAAf;AACH,KALD,CAvawD,CA6axD;;AACA;;;;;;;;;;AAQAsL,IAAAA,OAAO,CAACwC,GAAR,GAAc,YAAY;AACtB,UAAIA,GAAJ;AAAA,UACIhZ,EAAE,GAAG,KAAK2J,IAAL,CAAU3J,EADnB;;AAEA,UAAI,CAACA,EAAL,EAAS;AACLA,QAAAA,EAAE,GAAG,KAAKA,EAAV;AACAqF,QAAAA,CAAC,CAAC,KAAKsE,IAAN,EAAY;AACT3J,UAAAA,EAAE,EAAEA;AADK,SAAZ,CAAD;AAGH;;AACD,UAAI,KAAK+E,IAAL,IAAa,gBAAb,IAAiC,KAAKA,IAAL,IAAa,gBAA9C,IACA,KAAKA,IAAL,IAAa,SADjB,EAC4B;AACxBiU,QAAAA,GAAG,GAAGvI,IAAI,CAAC,KAAK1L,IAAN,EAAY,KAAK4E,IAAL,CAAUwG,UAAtB,CAAV;AACH,OAHD,MAGO;AACH6I,QAAAA,GAAG,GAAGvI,IAAI,CAAC,KAAD,EAAQ,KAAK9G,IAAL,CAAUwG,UAAlB,CAAV;AACH;;AACD9K,MAAAA,CAAC,CAAC2T,GAAG,CAACrP,IAAL,EAAW;AACR,sBAAc,MAAM3J;AADZ,OAAX,CAAD;AAGAgZ,MAAAA,GAAG,CAACpC,QAAJ,GAAe,IAAf;AACA,aAAOoC,GAAP;AACH,KApBD;;AAqBA,aAASC,MAAT,CAAgBnU,EAAhB,EAAoB;AAChB,UAAIoU,GAAG,GAAGpU,EAAE,CAACuM,SAAH,CAAa,GAAb,CAAV;AAAA,UACIiH,EADJ;AAAA,UAEIlT,GAAG,GAAG,6BAFV;AAAA,UAGI+T,GAAG,GAAG,EAHV;AAAA,UAIIC,IAAI,GAAG,EAJX;;AAKA,eAASC,OAAT,CAAiBf,EAAjB,EAAqBpe,IAArB,EAA2B;AACvB,YAAIsF,GAAG,GAAG6F,CAAC,CAACiT,EAAE,CAAC3O,IAAJ,EAAUzP,IAAV,CAAX;AACAsF,QAAAA,GAAG,GAAGA,GAAG,IAAIA,GAAG,CAAC4M,KAAJ,CAAUhH,GAAV,CAAb;AACA5F,QAAAA,GAAG,GAAGA,GAAG,IAAIA,GAAG,CAAC,CAAD,CAAhB;;AACA,YAAIA,GAAG,IAAIA,GAAG,CAACqM,MAAJ,MAAgB,GAA3B,EAAgC;AAC5BrM,UAAAA,GAAG,GAAGA,GAAG,CAACkG,SAAJ,CAAc,CAAd,CAAN;AACH,SAFD,MAEO;AACH;AACH;;AACD,YAAIlG,GAAJ,EAAS;AACL4Z,UAAAA,IAAI,CAAC5Z,GAAD,CAAJ,GAAY,CAAC4Z,IAAI,CAAC5Z,GAAD,CAAJ,IAAa,EAAd,EAAkBpD,MAAlB,CAAyB,UAAU4D,EAAV,EAAc;AAC/C,gBAAIsF,IAAI,GAAG,EAAX;AACAA,YAAAA,IAAI,CAACpL,IAAD,CAAJ,GAAaiL,GAAG,CAACnF,EAAD,CAAhB;AACAqF,YAAAA,CAAC,CAACiT,EAAE,CAAC3O,IAAJ,EAAUrE,IAAV,CAAD;AACH,WAJW,CAAZ;AAKH;AACJ;;AACD,eAASgU,QAAT,CAAkBhB,EAAlB,EAAsB;AAClB,YAAI9Y,GAAG,GAAG6F,CAAC,CAACiT,EAAE,CAAC3O,IAAJ,EAAU,YAAV,CAAX;;AACA,YAAInK,GAAG,IAAIA,GAAG,CAACqM,MAAJ,MAAgB,GAA3B,EAAgC;AAC5BrM,UAAAA,GAAG,GAAGA,GAAG,CAACkG,SAAJ,CAAc,CAAd,CAAN;AACH,SAFD,MAEO;AACH;AACH;;AACD,YAAIlG,GAAJ,EAAS;AACL4Z,UAAAA,IAAI,CAAC5Z,GAAD,CAAJ,GAAY,CAAC4Z,IAAI,CAAC5Z,GAAD,CAAJ,IAAa,EAAd,EAAkBpD,MAAlB,CAAyB,UAAU4D,EAAV,EAAc;AAC/CsY,YAAAA,EAAE,CAAChT,IAAH,CAAQ,YAAR,EAAsB,MAAMtF,EAA5B;AACH,WAFW,CAAZ;AAGH;AACJ;;AACD,WAAK,IAAInG,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGof,GAAG,CAACnf,MAAzB,EAAiCF,CAAC,GAAGC,EAArC,EAAyCD,CAAC,EAA1C,EAA8C;AAC1Cye,QAAAA,EAAE,GAAGY,GAAG,CAACrf,CAAD,CAAR;AACAwf,QAAAA,OAAO,CAACf,EAAD,EAAK,MAAL,CAAP;AACAe,QAAAA,OAAO,CAACf,EAAD,EAAK,QAAL,CAAP;AACAe,QAAAA,OAAO,CAACf,EAAD,EAAK,QAAL,CAAP;AACAe,QAAAA,OAAO,CAACf,EAAD,EAAK,MAAL,CAAP;AACAe,QAAAA,OAAO,CAACf,EAAD,EAAK,WAAL,CAAP;AACAgB,QAAAA,QAAQ,CAAChB,EAAD,CAAR;AACA,YAAIiB,KAAK,GAAGlU,CAAC,CAACiT,EAAE,CAAC3O,IAAJ,EAAU,IAAV,CAAb;;AACA,YAAI4P,KAAJ,EAAW;AACPlU,UAAAA,CAAC,CAACiT,EAAE,CAAC3O,IAAJ,EAAU;AAAC3J,YAAAA,EAAE,EAAEsY,EAAE,CAACtY;AAAR,WAAV,CAAD;AACAmZ,UAAAA,GAAG,CAAC7d,IAAJ,CAAS;AACLke,YAAAA,GAAG,EAAED,KADA;AAELvZ,YAAAA,EAAE,EAAEsY,EAAE,CAACtY;AAFF,WAAT;AAIH;AACJ;;AACD,WAAKnG,CAAC,GAAG,CAAJ,EAAOC,EAAE,GAAGqf,GAAG,CAACpf,MAArB,EAA6BF,CAAC,GAAGC,EAAjC,EAAqCD,CAAC,EAAtC,EAA0C;AACtC,YAAI4f,EAAE,GAAGL,IAAI,CAACD,GAAG,CAACtf,CAAD,CAAH,CAAO2f,GAAR,CAAb;;AACA,YAAIC,EAAJ,EAAQ;AACJ,eAAK,IAAIzd,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGwd,EAAE,CAAC1f,MAAxB,EAAgCiC,CAAC,GAAGC,EAApC,EAAwCD,CAAC,EAAzC,EAA6C;AACzCyd,YAAAA,EAAE,CAACzd,CAAD,CAAF,CAAMmd,GAAG,CAACtf,CAAD,CAAH,CAAOmG,EAAb;AACH;AACJ;AACJ;AACJ;AACD;;;;;;;;;;AAQAwW,IAAAA,OAAO,CAACpP,KAAR,GAAgB,YAAY;AACxB,UAAIA,KAAK,GAAGzE,IAAI,CAAC,KAAKgH,IAAL,CAAU+P,SAAV,CAAoB,IAApB,CAAD,CAAhB;;AACA,UAAIrU,CAAC,CAAC+B,KAAK,CAACuC,IAAP,EAAa,IAAb,CAAL,EAAyB;AACrBtE,QAAAA,CAAC,CAAC+B,KAAK,CAACuC,IAAP,EAAa;AAAC3J,UAAAA,EAAE,EAAEoH,KAAK,CAACpH;AAAX,SAAb,CAAD;AACH;;AACDiZ,MAAAA,MAAM,CAAC7R,KAAD,CAAN;AACAA,MAAAA,KAAK,CAACyR,WAAN,CAAkB,IAAlB;AACA,aAAOzR,KAAP;AACH,KARD;AASA;;;;;;;;;;AAQAoP,IAAAA,OAAO,CAACmD,MAAR,GAAiB,YAAY;AACzB,UAAInJ,IAAI,GAAGJ,WAAW,CAAC,IAAD,CAAtB;AACAI,MAAAA,IAAI,CAACM,WAAL,CAAiB,KAAKnH,IAAtB;AACA,aAAO,IAAP;AACH,KAJD;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA6M,IAAAA,OAAO,CAACnE,OAAR,GAAkBmE,OAAO,CAACoD,SAAR,GAAoB,UAAUnY,CAAV,EAAaG,CAAb,EAAgBgH,KAAhB,EAAuBC,MAAvB,EAA+B;AACjE,UAAIxG,CAAC,GAAGoO,IAAI,CAAC,SAAD,EAAYL,WAAW,CAAC,IAAD,CAAvB,CAAZ;;AACA,UAAI3O,CAAC,IAAI,IAAT,EAAe;AACXA,QAAAA,CAAC,GAAG,KAAKuP,OAAL,EAAJ;AACH;;AACD,UAAIpO,EAAE,CAACnB,CAAD,EAAI,QAAJ,CAAF,IAAmB,OAAOA,CAA9B,EAAiC;AAC7BG,QAAAA,CAAC,GAAGH,CAAC,CAACG,CAAN;AACAgH,QAAAA,KAAK,GAAGnH,CAAC,CAACmH,KAAV;AACAC,QAAAA,MAAM,GAAGpH,CAAC,CAACoH,MAAX;AACApH,QAAAA,CAAC,GAAGA,CAAC,CAACA,CAAN;AACH;;AACD4D,MAAAA,CAAC,CAAChD,CAAC,CAACsH,IAAH,EAAS;AACNlI,QAAAA,CAAC,EAAEA,CADG;AAENG,QAAAA,CAAC,EAAEA,CAFG;AAGNgH,QAAAA,KAAK,EAAEA,KAHD;AAINC,QAAAA,MAAM,EAAEA,MAJF;AAKNgR,QAAAA,YAAY,EAAE,gBALR;AAMN7Z,QAAAA,EAAE,EAAEqC,CAAC,CAACrC,EANA;AAON8Z,QAAAA,OAAO,EAAE,CAACrY,CAAD,EAAIG,CAAJ,EAAOgH,KAAP,EAAcC,MAAd,EAAsBjB,IAAtB,CAA2B,GAA3B;AAPH,OAAT,CAAD;AASAvF,MAAAA,CAAC,CAACsH,IAAF,CAAOmH,WAAP,CAAmB,KAAKnH,IAAxB;AACA,aAAOtH,CAAP;AACH,KAtBD,CA9jBwD,CAqlB5D;AACA;;AACI;;;;;;;;;;;;;;;;AAgBA;;;AACAmU,IAAAA,OAAO,CAACuD,MAAR,GAAiB,UAAUtY,CAAV,EAAaG,CAAb,EAAgBgH,KAAhB,EAAuBC,MAAvB,EAA+BmR,IAA/B,EAAqCC,IAArC,EAA2C;AACxD,UAAI5X,CAAC,GAAGoO,IAAI,CAAC,QAAD,EAAWL,WAAW,CAAC,IAAD,CAAtB,CAAZ;;AACA,UAAI3O,CAAC,IAAI,IAAT,EAAe;AACXA,QAAAA,CAAC,GAAG,KAAKuP,OAAL,EAAJ;AACH;;AACD,UAAIpO,EAAE,CAACnB,CAAD,EAAI,QAAJ,CAAF,IAAmB,OAAOA,CAA9B,EAAiC;AAC7BG,QAAAA,CAAC,GAAGH,CAAC,CAACG,CAAN;AACAgH,QAAAA,KAAK,GAAGnH,CAAC,CAACmH,KAAV;AACAC,QAAAA,MAAM,GAAGpH,CAAC,CAACoH,MAAX;AACAmR,QAAAA,IAAI,GAAGvY,CAAC,CAACuY,IAAF,IAAUvY,CAAC,CAACyY,EAAnB;AACAD,QAAAA,IAAI,GAAGxY,CAAC,CAACwY,IAAF,IAAUxY,CAAC,CAAC0Y,EAAnB;AACA1Y,QAAAA,CAAC,GAAGA,CAAC,CAACA,CAAN;AACH;;AACD4D,MAAAA,CAAC,CAAChD,CAAC,CAACsH,IAAH,EAAS;AACNmQ,QAAAA,OAAO,EAAE,CAACrY,CAAD,EAAIG,CAAJ,EAAOgH,KAAP,EAAcC,MAAd,EAAsBjB,IAAtB,CAA2B,GAA3B,CADH;AAENwS,QAAAA,WAAW,EAAExR,KAFP;AAGNyR,QAAAA,YAAY,EAAExR,MAHR;AAINyR,QAAAA,MAAM,EAAE,MAJF;AAKNN,QAAAA,IAAI,EAAEA,IAAI,IAAI,CALR;AAMNC,QAAAA,IAAI,EAAEA,IAAI,IAAI,CANR;AAONja,QAAAA,EAAE,EAAEqC,CAAC,CAACrC;AAPA,OAAT,CAAD;AASAqC,MAAAA,CAAC,CAACsH,IAAF,CAAOmH,WAAP,CAAmB,KAAKnH,IAAxB;AACA,aAAOtH,CAAP;AACH,KAxBD,CAxmBwD,CAioBxD;;;AACA,aAAS3H,KAAT,CAAe6f,IAAf,EAAqBC,EAArB,EAAyBzf,CAAzB,EAA4B;AACxB,aAAO,UAAUqT,GAAV,EAAe;AAClB,YAAIlP,GAAG,GAAGkP,GAAG,CAAC1T,KAAJ,CAAU6f,IAAV,EAAgBC,EAAhB,CAAV;;AACA,YAAItb,GAAG,CAACnF,MAAJ,IAAc,CAAlB,EAAqB;AACjBmF,UAAAA,GAAG,GAAGA,GAAG,CAAC,CAAD,CAAT;AACH;;AACD,eAAOnE,CAAC,GAAGA,CAAC,CAACmE,GAAD,CAAJ,GAAYA,GAApB;AACH,OAND;AAOH;;AACD,QAAIub,SAAS,GAAG,UAAUnV,IAAV,EAAgBsS,EAAhB,EAAoBpX,MAApB,EAA4BjC,QAA5B,EAAsC;AAClD,UAAI,OAAOiC,MAAP,IAAiB,UAAjB,IAA+B,CAACA,MAAM,CAACzG,MAA3C,EAAmD;AAC/CwE,QAAAA,QAAQ,GAAGiC,MAAX;AACAA,QAAAA,MAAM,GAAGzC,IAAI,CAAC8C,MAAd;AACH;;AACD,WAAKyE,IAAL,GAAYA,IAAZ;AACA,WAAK3F,GAAL,GAAWiY,EAAX;AACApX,MAAAA,MAAM,KAAK,KAAKA,MAAL,GAAcA,MAAnB,CAAN;AACAjC,MAAAA,QAAQ,KAAK,KAAKA,QAAL,GAAgBA,QAArB,CAAR;AACH,KATD;;AAUA+D,IAAAA,IAAI,CAACW,CAAL,CAAOwX,SAAP,GAAmBA,SAAnB;AACA;;;;;;;;;;;;;AAYAnY,IAAAA,IAAI,CAACoY,SAAL,GAAiB,UAAUpV,IAAV,EAAgBsS,EAAhB,EAAoBpX,MAApB,EAA4BjC,QAA5B,EAAsC;AACnD,aAAO,IAAIkc,SAAJ,CAAcnV,IAAd,EAAoBsS,EAApB,EAAwBpX,MAAxB,EAAgCjC,QAAhC,CAAP;AACH,KAFD;AAGA;;;;;;;;;;;;;;;;;AAeAiY,IAAAA,OAAO,CAACmE,MAAR,GAAiB,YAAY;AACzB,UAAI7V,EAAE,GAAG,IAAT;AAAA,UACI5F,GAAG,GAAG,EADV;;AAEA,WAAK,IAAIc,EAAT,IAAe8E,EAAE,CAACoN,KAAlB,EAAyB,IAAIpN,EAAE,CAACoN,KAAH,CAASlZ,GAAT,EAAcgH,EAAd,CAAJ,EAAuB;AAC3C,mBAAU1G,CAAV,EAAa;AACV4F,UAAAA,GAAG,CAAC5D,IAAJ,CAAS;AACLsF,YAAAA,IAAI,EAAE,IAAI6Z,SAAJ,CAAcnhB,CAAC,CAACshB,MAAhB,EAAwBthB,CAAC,CAACqG,GAA1B,EAA+BrG,CAAC,CAACkH,MAAjC,EAAyClH,CAAC,CAACuhB,SAA3C,CADD;AAEL9c,YAAAA,IAAI,EAAEzE,CAFD;AAGLwhB,YAAAA,SAAS,EAAExhB,CAAC,CAACwH,MAAF,EAHN;AAILA,YAAAA,MAAM,EAAE,UAAUtB,GAAV,EAAe;AACnB,qBAAOlG,CAAC,CAACwH,MAAF,CAAStB,GAAT,CAAP;AACH,aANI;AAOL/F,YAAAA,IAAI,EAAE,YAAY;AACdH,cAAAA,CAAC,CAACG,IAAF;AACH;AATI,WAAT;AAWH,SAZA,EAYCqL,EAAE,CAACoN,KAAH,CAASlS,EAAT,CAZD,CAAD;AAaH;;AACD,aAAOd,GAAP;AACH,KAnBD;AAoBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BAoD,IAAAA,IAAI,CAACyY,OAAL,GAAe,UAAUR,IAAV,EAAgBC,EAAhB,EAAoBQ,MAApB,EAA4BpD,EAA5B,EAAgCpX,MAAhC,EAAwCjC,QAAxC,EAAkD;AAC7D,UAAI,OAAOiC,MAAP,IAAiB,UAAjB,IAA+B,CAACA,MAAM,CAACzG,MAA3C,EAAmD;AAC/CwE,QAAAA,QAAQ,GAAGiC,MAAX;AACAA,QAAAA,MAAM,GAAGzC,IAAI,CAAC8C,MAAd;AACH;;AACD,UAAIvB,GAAG,GAAGvB,IAAI,CAACgD,IAAL,EAAV;AAAA,UACIH,IAAI,GAAG7C,IAAI,CAACwc,IAAD,EAAOC,EAAP,EAAWlb,GAAX,EAAgBA,GAAG,GAAGsY,EAAtB,EAA0B7Z,IAAI,CAACgD,IAA/B,EAAqCia,MAArC,EAA6Cxa,MAA7C,CADf;AAEAjC,MAAAA,QAAQ,IAAItE,GAAG,CAACoD,IAAJ,CAAS,iBAAiBuD,IAAI,CAACZ,EAA/B,EAAmCzB,QAAnC,CAAZ;AACA,aAAOqC,IAAP;AACH,KATD;AAUA;;;;;;;;;;AAQA4V,IAAAA,OAAO,CAAC/c,IAAR,GAAe,YAAY;AACvB,UAAIyY,KAAK,GAAG,KAAKyI,MAAL,EAAZ;;AACA,WAAK,IAAI9gB,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGoY,KAAK,CAACnY,MAA3B,EAAmCF,CAAC,GAAGC,EAAvC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5CqY,QAAAA,KAAK,CAACrY,CAAD,CAAL,CAASJ,IAAT;AACH;;AACD,aAAO,IAAP;AACH,KAND;AAOA;;;;;;;;;;;;;;AAYA+c,IAAAA,OAAO,CAACuE,OAAR,GAAkB,UAAUte,KAAV,EAAiBmb,EAAjB,EAAqBpX,MAArB,EAA6BjC,QAA7B,EAAuC;AACrD,UAAI,OAAOiC,MAAP,IAAiB,UAAjB,IAA+B,CAACA,MAAM,CAACzG,MAA3C,EAAmD;AAC/CwE,QAAAA,QAAQ,GAAGiC,MAAX;AACAA,QAAAA,MAAM,GAAGzC,IAAI,CAAC8C,MAAd;AACH;;AACD,UAAIpE,KAAK,YAAYge,SAArB,EAAgC;AAC5Blc,QAAAA,QAAQ,GAAG9B,KAAK,CAAC8B,QAAjB;AACAiC,QAAAA,MAAM,GAAG/D,KAAK,CAAC+D,MAAf;AACAoX,QAAAA,EAAE,GAAGpX,MAAM,CAACb,GAAZ;AACAlD,QAAAA,KAAK,GAAGA,KAAK,CAAC6I,IAAd;AACH;;AACD,UAAI2V,KAAK,GAAG,EAAZ;AAAA,UAAgBC,KAAK,GAAG,EAAxB;AAAA,UAA4BC,IAAI,GAAG,EAAnC;AAAA,UAAuCZ,IAAvC;AAAA,UAA6CC,EAA7C;AAAA,UAAiDzf,CAAjD;AAAA,UAAoDqgB,EAApD;AAAA,UACItW,EAAE,GAAG,IADT;;AAEA,WAAK,IAAI7H,GAAT,IAAgBR,KAAhB,EAAuB,IAAIA,KAAK,CAACzD,GAAD,CAAL,CAAWiE,GAAX,CAAJ,EAAqB;AACxC,YAAI6H,EAAE,CAACuW,KAAP,EAAc;AACVD,UAAAA,EAAE,GAAGtW,EAAE,CAACuW,KAAH,CAASpe,GAAT,EAAcmG,GAAG,CAAC3G,KAAK,CAACQ,GAAD,CAAN,CAAjB,CAAL;AACAsd,UAAAA,IAAI,GAAGa,EAAE,CAACb,IAAV;AACAC,UAAAA,EAAE,GAAGY,EAAE,CAACZ,EAAR;AACAzf,UAAAA,CAAC,GAAGqgB,EAAE,CAACrgB,CAAP;AACH,SALD,MAKO;AACHwf,UAAAA,IAAI,GAAG,CAACzV,EAAE,CAACQ,IAAH,CAAQrI,GAAR,CAAR;AACAud,UAAAA,EAAE,GAAG,CAAC/d,KAAK,CAACQ,GAAD,CAAX;AACH;;AACD,YAAI0D,GAAG,GAAGiC,EAAE,CAAC2X,IAAD,EAAO,OAAP,CAAF,GAAoBA,IAAI,CAACxgB,MAAzB,GAAkC,CAA5C;AACAohB,QAAAA,IAAI,CAACle,GAAD,CAAJ,GAAYvC,KAAK,CAACugB,KAAK,CAAClhB,MAAP,EAAekhB,KAAK,CAAClhB,MAAN,GAAe4G,GAA9B,EAAmC5F,CAAnC,CAAjB;AACAkgB,QAAAA,KAAK,GAAGA,KAAK,CAAC7e,MAAN,CAAame,IAAb,CAAR;AACAW,QAAAA,KAAK,GAAGA,KAAK,CAAC9e,MAAN,CAAaoe,EAAb,CAAR;AACH;;AACD,UAAIlb,GAAG,GAAGvB,IAAI,CAACgD,IAAL,EAAV;AAAA,UACIH,IAAI,GAAG7C,IAAI,CAACkd,KAAD,EAAQC,KAAR,EAAe5b,GAAf,EAAoBA,GAAG,GAAGsY,EAA1B,EAA8B7Z,IAAI,CAACgD,IAAnC,EAAyC,UAAUvB,GAAV,EAAe;AAC/D,YAAI8F,IAAI,GAAG,EAAX;;AACA,aAAK,IAAIrI,GAAT,IAAgBke,IAAhB,EAAsB,IAAIA,IAAI,CAACniB,GAAD,CAAJ,CAAUiE,GAAV,CAAJ,EAAoB;AACtCqI,UAAAA,IAAI,CAACrI,GAAD,CAAJ,GAAYke,IAAI,CAACle,GAAD,CAAJ,CAAUuC,GAAV,CAAZ;AACH;;AACDsF,QAAAA,EAAE,CAACQ,IAAH,CAAQA,IAAR;AACH,OANU,EAMR9E,MANQ,CADf;AAQAsE,MAAAA,EAAE,CAACoN,KAAH,CAAStR,IAAI,CAACZ,EAAd,IAAoBY,IAApB;AACAA,MAAAA,IAAI,CAACga,MAAL,GAAcne,KAAd;AACAmE,MAAAA,IAAI,CAACia,SAAL,GAAiBtc,QAAjB;AACAtE,MAAAA,GAAG,CAAC,sBAAsB6K,EAAE,CAAC9E,EAA1B,EAA8BY,IAA9B,CAAH;AACA3G,MAAAA,GAAG,CAACoD,IAAJ,CAAS,iBAAiBuD,IAAI,CAACZ,EAA/B,EAAmC,YAAY;AAC3C,eAAO8E,EAAE,CAACoN,KAAH,CAAStR,IAAI,CAACZ,EAAd,CAAP;AACAzB,QAAAA,QAAQ,IAAIA,QAAQ,CAAC5D,IAAT,CAAcmK,EAAd,CAAZ;AACH,OAHD;AAIA7K,MAAAA,GAAG,CAACoD,IAAJ,CAAS,eAAeuD,IAAI,CAACZ,EAA7B,EAAiC,YAAY;AACzC,eAAO8E,EAAE,CAACoN,KAAH,CAAStR,IAAI,CAACZ,EAAd,CAAP;AACH,OAFD;AAGA,aAAO8E,EAAP;AACH,KAhDD;;AAiDA,QAAIwW,MAAM,GAAG,EAAb;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAuBA9E,IAAAA,OAAO,CAAChI,IAAR,GAAe,UAAUvR,GAAV,EAAeiO,KAAf,EAAsB;AACjC,UAAIsD,IAAI,GAAG8M,MAAM,CAAC,KAAKtb,EAAN,CAAN,GAAkBsb,MAAM,CAAC,KAAKtb,EAAN,CAAN,IAAmB,EAAhD;;AACA,UAAIpF,SAAS,CAACb,MAAV,IAAoB,CAAxB,EAA0B;AACtBE,QAAAA,GAAG,CAAC,mBAAmB,KAAK+F,EAAzB,EAA6B,IAA7B,EAAmCwO,IAAnC,EAAyC,IAAzC,CAAH;AACA,eAAOA,IAAP;AACH;;AACD,UAAI5T,SAAS,CAACb,MAAV,IAAoB,CAAxB,EAA2B;AACvB,YAAIuI,IAAI,CAACM,EAAL,CAAQ3F,GAAR,EAAa,QAAb,CAAJ,EAA4B;AACxB,eAAK,IAAIpD,CAAT,IAAcoD,GAAd,EAAmB,IAAIA,GAAG,CAACjE,GAAD,CAAH,CAASa,CAAT,CAAJ,EAAiB;AAChC,iBAAK2U,IAAL,CAAU3U,CAAV,EAAaoD,GAAG,CAACpD,CAAD,CAAhB;AACH;;AACD,iBAAO,IAAP;AACH;;AACDI,QAAAA,GAAG,CAAC,mBAAmB,KAAK+F,EAAzB,EAA6B,IAA7B,EAAmCwO,IAAI,CAACvR,GAAD,CAAvC,EAA8CA,GAA9C,CAAH;AACA,eAAOuR,IAAI,CAACvR,GAAD,CAAX;AACH;;AACDuR,MAAAA,IAAI,CAACvR,GAAD,CAAJ,GAAYiO,KAAZ;AACAjR,MAAAA,GAAG,CAAC,mBAAmB,KAAK+F,EAAzB,EAA6B,IAA7B,EAAmCkL,KAAnC,EAA0CjO,GAA1C,CAAH;AACA,aAAO,IAAP;AACH,KAnBD;AAoBA;;;;;;;;;;;AASAuZ,IAAAA,OAAO,CAAC+E,UAAR,GAAqB,UAAUte,GAAV,EAAe;AAChC,UAAIA,GAAG,IAAI,IAAX,EAAiB;AACbqe,QAAAA,MAAM,CAAC,KAAKtb,EAAN,CAAN,GAAkB,EAAlB;AACH,OAFD,MAEO;AACHsb,QAAAA,MAAM,CAAC,KAAKtb,EAAN,CAAN,IAAmB,OAAOsb,MAAM,CAAC,KAAKtb,EAAN,CAAN,CAAgB/C,GAAhB,CAA1B;AACH;;AACD,aAAO,IAAP;AACH,KAPD;AAQA;;;;;;;;;;AASA;;;;;;;;AAMAuZ,IAAAA,OAAO,CAACgF,QAAR,GAAmBhF,OAAO,CAACjZ,QAAR,GAAmBA,QAAQ,CAAC,CAAD,CAA9C;AACA;;;;;;;;AAOAiZ,IAAAA,OAAO,CAACiF,QAAR,GAAmBle,QAAQ,EAA3B;;AACA,aAASA,QAAT,CAAkBwH,IAAlB,EAAwB;AACpB,aAAO,YAAY;AACf,YAAI7F,GAAG,GAAG6F,IAAI,GAAG,MAAM,KAAKA,IAAd,GAAqB,EAAnC;AAAA,YACIO,IAAI,GAAG,KAAKqE,IAAL,CAAUxD,UADrB;AAAA,YAEIuV,IAAI,GAAG,KAAK/R,IAAL,CAAUiI,UAFrB;;AAGA,YAAI7M,IAAJ,EAAU;AACN,eAAK,IAAIlL,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGwL,IAAI,CAACvL,MAA1B,EAAkCF,CAAC,GAAGC,EAAtC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3CqF,YAAAA,GAAG,IAAI,MAAMoG,IAAI,CAACzL,CAAD,CAAJ,CAAQK,IAAd,GAAqB,IAArB,GACCoL,IAAI,CAACzL,CAAD,CAAJ,CAAQqR,KAAR,CAAcnE,OAAd,CAAsB,IAAtB,EAA4B,KAA5B,CADD,GACsC,GAD7C;AAEH;AACJ;;AACD,YAAI2U,IAAI,CAAC3hB,MAAT,EAAiB;AACbgL,UAAAA,IAAI,KAAK7F,GAAG,IAAI,GAAZ,CAAJ;;AACA,eAAKrF,CAAC,GAAG,CAAJ,EAAOC,EAAE,GAAG4hB,IAAI,CAAC3hB,MAAtB,EAA8BF,CAAC,GAAGC,EAAlC,EAAsCD,CAAC,EAAvC,EAA2C;AACvC,gBAAI6hB,IAAI,CAAC7hB,CAAD,CAAJ,CAAQ6I,QAAR,IAAoB,CAAxB,EAA2B;AACvBxD,cAAAA,GAAG,IAAIwc,IAAI,CAAC7hB,CAAD,CAAJ,CAAQgM,SAAf;AACH,aAFD,MAEO,IAAI6V,IAAI,CAAC7hB,CAAD,CAAJ,CAAQ6I,QAAR,IAAoB,CAAxB,EAA2B;AAC9BxD,cAAAA,GAAG,IAAIyD,IAAI,CAAC+Y,IAAI,CAAC7hB,CAAD,CAAL,CAAJ,CAAc0D,QAAd,EAAP;AACH;AACJ;;AACDwH,UAAAA,IAAI,KAAK7F,GAAG,IAAI,OAAO,KAAK6F,IAAZ,GAAmB,GAA/B,CAAJ;AACH,SAVD,MAUO;AACHA,UAAAA,IAAI,KAAK7F,GAAG,IAAI,IAAZ,CAAJ;AACH;;AACD,eAAOA,GAAP;AACH,OAxBD;AAyBH;;AACDsX,IAAAA,OAAO,CAACmF,SAAR,GAAoB,YAAY;AAC5B,UAAI7d,MAAM,IAAIA,MAAM,CAAC8d,IAArB,EAA2B;AACvB,YAAIxc,EAAE,GAAG,KAAK4R,OAAL,EAAT;AAAA,YACIL,GAAG,GAAGrO,IAAI,CAACmE,MAAL,CAAY,wLAAZ,EAAsM;AAC5MhF,UAAAA,CAAC,EAAE,CAACrC,EAAE,CAACqC,CAAH,CAAKgL,OAAL,CAAa,CAAb,CADwM;AAE5M7K,UAAAA,CAAC,EAAE,CAACxC,EAAE,CAACwC,CAAH,CAAK6K,OAAL,CAAa,CAAb,CAFwM;AAG5M7D,UAAAA,KAAK,EAAE,CAACxJ,EAAE,CAACwJ,KAAH,CAAS6D,OAAT,CAAiB,CAAjB,CAHoM;AAI5M5D,UAAAA,MAAM,EAAE,CAACzJ,EAAE,CAACyJ,MAAH,CAAU4D,OAAV,CAAkB,CAAlB,CAJmM;AAK5MoP,UAAAA,QAAQ,EAAE,KAAKL,QAAL;AALkM,SAAtM,CADV;AAQA,eAAO,+BAA+BI,IAAI,CAACE,QAAQ,CAACtH,kBAAkB,CAAC7D,GAAD,CAAnB,CAAT,CAA1C;AACH;AACJ,KAZD;AAaA;;;;;;;;AAMAsC,IAAAA,QAAQ,CAACxY,SAAT,CAAmB6V,MAAnB,GAA4BkG,OAAO,CAAClG,MAApC;AACA;;;;;;;AAMA2C,IAAAA,QAAQ,CAACxY,SAAT,CAAmB4W,SAAnB,GAA+BmF,OAAO,CAACnF,SAAvC;AACH,GAv8BD,EA7qEyC,CAsnGzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA/O,EAAAA,IAAI,CAACiU,MAAL,CAAY,UAAUjU,IAAV,EAAgBO,OAAhB,EAAyBG,KAAzB,EAAgClK,IAAhC,EAAsCma,QAAtC,EAAgD;AACxD,QAAIhP,cAAc,GAAGvF,MAAM,CAACjE,SAAP,CAAiB8C,QAAtC;AAAA,QACI6F,GAAG,GAAGhJ,MADV;AAAA,QAEIqJ,IAAI,GAAGvC,IAFX;AAAA,QAGI6C,CAAC,GAAG,EAHR;;AAIA,aAASmL,MAAT,CAAgB5V,CAAhB,EAAmBC,CAAnB,EAAsB+U,CAAtB,EAAyByN,CAAzB,EAA4B1hB,CAA5B,EAA+BU,CAA/B,EAAkC;AAC9B,UAAIxB,CAAC,IAAI,IAAL,IAAa0K,cAAc,CAACtJ,IAAf,CAAoBrB,CAApB,KAA0B,oBAA3C,EAAiE;AAC7D,aAAKA,CAAL,GAASA,CAAC,CAACA,CAAX;AACA,aAAKC,CAAL,GAASD,CAAC,CAACC,CAAX;AACA,aAAK+U,CAAL,GAAShV,CAAC,CAACgV,CAAX;AACA,aAAKyN,CAAL,GAASziB,CAAC,CAACyiB,CAAX;AACA,aAAK1hB,CAAL,GAASf,CAAC,CAACe,CAAX;AACA,aAAKU,CAAL,GAASzB,CAAC,CAACyB,CAAX;AACA;AACH;;AACD,UAAIzB,CAAC,IAAI,IAAT,EAAe;AACX,aAAKA,CAAL,GAAS,CAACA,CAAV;AACA,aAAKC,CAAL,GAAS,CAACA,CAAV;AACA,aAAK+U,CAAL,GAAS,CAACA,CAAV;AACA,aAAKyN,CAAL,GAAS,CAACA,CAAV;AACA,aAAK1hB,CAAL,GAAS,CAACA,CAAV;AACA,aAAKU,CAAL,GAAS,CAACA,CAAV;AACH,OAPD,MAOO;AACH,aAAKzB,CAAL,GAAS,CAAT;AACA,aAAKC,CAAL,GAAS,CAAT;AACA,aAAK+U,CAAL,GAAS,CAAT;AACA,aAAKyN,CAAL,GAAS,CAAT;AACA,aAAK1hB,CAAL,GAAS,CAAT;AACA,aAAKU,CAAL,GAAS,CAAT;AACH;AACJ;;AACD,KAAC,UAAUihB,WAAV,EAAuB;AACpB;;;;;;;;;;;;;;AAcAA,MAAAA,WAAW,CAACrM,GAAZ,GAAkB,UAAUrW,CAAV,EAAaC,CAAb,EAAgB+U,CAAhB,EAAmByN,CAAnB,EAAsB1hB,CAAtB,EAAyBU,CAAzB,EAA4B;AAC1C,YAAII,GAAG,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAAV;AAAA,YACI6S,CAAC,GAAG,CAAC,CAAC,KAAK1U,CAAN,EAAS,KAAKgV,CAAd,EAAiB,KAAKjU,CAAtB,CAAD,EAA2B,CAAC,KAAKd,CAAN,EAAS,KAAKwiB,CAAd,EAAiB,KAAKhhB,CAAtB,CAA3B,EAAqD,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAArD,CADR;AAAA,YAEIoc,MAAM,GAAG,CAAC,CAAC7d,CAAD,EAAIgV,CAAJ,EAAOjU,CAAP,CAAD,EAAY,CAACd,CAAD,EAAIwiB,CAAJ,EAAOhhB,CAAP,CAAZ,EAAuB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAvB,CAFb;AAAA,YAGI0G,CAHJ;AAAA,YAGOG,CAHP;AAAA,YAGU9G,CAHV;AAAA,YAGaoE,GAHb;;AAKA,YAAI5F,CAAC,IAAIA,CAAC,YAAY4V,MAAtB,EAA8B;AAC1BiI,UAAAA,MAAM,GAAG,CAAC,CAAC7d,CAAC,CAACA,CAAH,EAAMA,CAAC,CAACgV,CAAR,EAAWhV,CAAC,CAACe,CAAb,CAAD,EAAkB,CAACf,CAAC,CAACC,CAAH,EAAMD,CAAC,CAACyiB,CAAR,EAAWziB,CAAC,CAACyB,CAAb,CAAlB,EAAmC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAnC,CAAT;AACH;;AAED,aAAK0G,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBA,CAAC,EAApB,EAAwB;AACpB,eAAKG,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBA,CAAC,EAApB,EAAwB;AACpB1C,YAAAA,GAAG,GAAG,CAAN;;AACA,iBAAKpE,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBA,CAAC,EAApB,EAAwB;AACpBoE,cAAAA,GAAG,IAAI8O,CAAC,CAACvM,CAAD,CAAD,CAAK3G,CAAL,IAAUqc,MAAM,CAACrc,CAAD,CAAN,CAAU8G,CAAV,CAAjB;AACH;;AACDzG,YAAAA,GAAG,CAACsG,CAAD,CAAH,CAAOG,CAAP,IAAY1C,GAAZ;AACH;AACJ;;AACD,aAAK5F,CAAL,GAAS6B,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAT;AACA,aAAK5B,CAAL,GAAS4B,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAT;AACA,aAAKmT,CAAL,GAASnT,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAT;AACA,aAAK4gB,CAAL,GAAS5gB,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAT;AACA,aAAKd,CAAL,GAASc,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAT;AACA,aAAKJ,CAAL,GAASI,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAT;AACA,eAAO,IAAP;AACH,OA1BD;AA2BA;;;;;;;;;AAOA6gB,MAAAA,WAAW,CAACzM,MAAZ,GAAqB,YAAY;AAC7B,YAAI0M,EAAE,GAAG,IAAT;AAAA,YACIxa,CAAC,GAAGwa,EAAE,CAAC3iB,CAAH,GAAO2iB,EAAE,CAACF,CAAV,GAAcE,EAAE,CAAC1iB,CAAH,GAAO0iB,EAAE,CAAC3N,CADhC;AAEA,eAAO,IAAIY,MAAJ,CAAW+M,EAAE,CAACF,CAAH,GAAOta,CAAlB,EAAqB,CAACwa,EAAE,CAAC1iB,CAAJ,GAAQkI,CAA7B,EAAgC,CAACwa,EAAE,CAAC3N,CAAJ,GAAQ7M,CAAxC,EAA2Cwa,EAAE,CAAC3iB,CAAH,GAAOmI,CAAlD,EAAqD,CAACwa,EAAE,CAAC3N,CAAH,GAAO2N,EAAE,CAAClhB,CAAV,GAAckhB,EAAE,CAACF,CAAH,GAAOE,EAAE,CAAC5hB,CAAzB,IAA8BoH,CAAnF,EAAsF,CAACwa,EAAE,CAAC1iB,CAAH,GAAO0iB,EAAE,CAAC5hB,CAAV,GAAc4hB,EAAE,CAAC3iB,CAAH,GAAO2iB,EAAE,CAAClhB,CAAzB,IAA8B0G,CAApH,CAAP;AACH,OAJD;AAKA;;;;;;;;;AAOAua,MAAAA,WAAW,CAAC5U,KAAZ,GAAoB,YAAY;AAC5B,eAAO,IAAI8H,MAAJ,CAAW,KAAK5V,CAAhB,EAAmB,KAAKC,CAAxB,EAA2B,KAAK+U,CAAhC,EAAmC,KAAKyN,CAAxC,EAA2C,KAAK1hB,CAAhD,EAAmD,KAAKU,CAAxD,CAAP;AACH,OAFD;AAGA;;;;;;;;;;AAQAihB,MAAAA,WAAW,CAACxM,SAAZ,GAAwB,UAAU/N,CAAV,EAAaG,CAAb,EAAgB;AACpC,eAAO,KAAK+N,GAAL,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqBlO,CAArB,EAAwBG,CAAxB,CAAP;AACH,OAFD;AAGA;;;;;;;;;;;;;AAWAoa,MAAAA,WAAW,CAACtM,KAAZ,GAAoB,UAAUjO,CAAV,EAAaG,CAAb,EAAgBsY,EAAhB,EAAoBC,EAApB,EAAwB;AACxCvY,QAAAA,CAAC,IAAI,IAAL,KAAcA,CAAC,GAAGH,CAAlB;AACA,SAACyY,EAAE,IAAIC,EAAP,KAAc,KAAKxK,GAAL,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqBuK,EAArB,EAAyBC,EAAzB,CAAd;AACA,aAAKxK,GAAL,CAASlO,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkBG,CAAlB,EAAqB,CAArB,EAAwB,CAAxB;AACA,SAACsY,EAAE,IAAIC,EAAP,KAAc,KAAKxK,GAAL,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAACuK,EAAtB,EAA0B,CAACC,EAA3B,CAAd;AACA,eAAO,IAAP;AACH,OAND;AAOA;;;;;;;;;;;AASA6B,MAAAA,WAAW,CAACvM,MAAZ,GAAqB,UAAUnW,CAAV,EAAamI,CAAb,EAAgBG,CAAhB,EAAmB;AACpCtI,QAAAA,CAAC,GAAGgJ,IAAI,CAACkG,GAAL,CAASlP,CAAT,CAAJ;AACAmI,QAAAA,CAAC,GAAGA,CAAC,IAAI,CAAT;AACAG,QAAAA,CAAC,GAAGA,CAAC,IAAI,CAAT;AACA,YAAImH,GAAG,GAAG,CAACtF,IAAI,CAACsF,GAAL,CAASzP,CAAT,EAAYmT,OAAZ,CAAoB,CAApB,CAAX;AAAA,YACIvK,GAAG,GAAG,CAACuB,IAAI,CAACvB,GAAL,CAAS5I,CAAT,EAAYmT,OAAZ,CAAoB,CAApB,CADX;AAEA,aAAKkD,GAAL,CAAS5G,GAAT,EAAc7G,GAAd,EAAmB,CAACA,GAApB,EAAyB6G,GAAzB,EAA8BtH,CAA9B,EAAiCG,CAAjC;AACA,eAAO,KAAK+N,GAAL,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAAClO,CAAtB,EAAyB,CAACG,CAA1B,CAAP;AACH,OARD;AASA;;;;;;;;;;;AASAoa,MAAAA,WAAW,CAACva,CAAZ,GAAgB,UAAUA,CAAV,EAAaG,CAAb,EAAgB;AAC5B,eAAOH,CAAC,GAAG,KAAKnI,CAAT,GAAasI,CAAC,GAAG,KAAK0M,CAAtB,GAA0B,KAAKjU,CAAtC;AACH,OAFD;AAGA;;;;;;;;;;;AASA2hB,MAAAA,WAAW,CAACpa,CAAZ,GAAgB,UAAUH,CAAV,EAAaG,CAAb,EAAgB;AAC5B,eAAOH,CAAC,GAAG,KAAKlI,CAAT,GAAaqI,CAAC,GAAG,KAAKma,CAAtB,GAA0B,KAAKhhB,CAAtC;AACH,OAFD;;AAGAihB,MAAAA,WAAW,CAAC5b,GAAZ,GAAkB,UAAUvG,CAAV,EAAa;AAC3B,eAAO,CAAC,KAAKuJ,GAAG,CAAC8Y,YAAJ,CAAiB,KAAKriB,CAAtB,CAAL,EAA+B4S,OAA/B,CAAuC,CAAvC,CAAR;AACH,OAFD;;AAGAuP,MAAAA,WAAW,CAACze,QAAZ,GAAuB,YAAY;AAC/B,eAAO,YAAY,CAAC,KAAK6C,GAAL,CAAS,CAAT,CAAD,EAAc,KAAKA,GAAL,CAAS,CAAT,CAAd,EAA2B,KAAKA,GAAL,CAAS,CAAT,CAA3B,EAAwC,KAAKA,GAAL,CAAS,CAAT,CAAxC,EAAqD,KAAKA,GAAL,CAAS,CAAT,CAArD,EAAkE,KAAKA,GAAL,CAAS,CAAT,CAAlE,EAA+EwH,IAA/E,EAAZ,GAAoG,GAA3G;AACH,OAFD;;AAGAoU,MAAAA,WAAW,CAACG,MAAZ,GAAqB,YAAY;AAC7B,eAAO,CAAC,KAAK9hB,CAAL,CAAOoS,OAAP,CAAe,CAAf,CAAD,EAAoB,KAAK1R,CAAL,CAAO0R,OAAP,CAAe,CAAf,CAApB,CAAP;AACH,OAFD;;AAGA,eAAS2P,IAAT,CAAc9iB,CAAd,EAAiB;AACb,eAAOA,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAR,GAAcA,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAA7B;AACH;;AACD,eAAS+iB,SAAT,CAAmB/iB,CAAnB,EAAsB;AAClB,YAAIgjB,GAAG,GAAG7Y,IAAI,CAACjC,IAAL,CAAU4a,IAAI,CAAC9iB,CAAD,CAAd,CAAV;AACAA,QAAAA,CAAC,CAAC,CAAD,CAAD,KAASA,CAAC,CAAC,CAAD,CAAD,IAAQgjB,GAAjB;AACAhjB,QAAAA,CAAC,CAAC,CAAD,CAAD,KAASA,CAAC,CAAC,CAAD,CAAD,IAAQgjB,GAAjB;AACH;AACD;;;;;;;;;AAOAN,MAAAA,WAAW,CAACO,WAAZ,GAA0B,YAAY;AAClC,eAAO,KAAKjjB,CAAL,GAAS,KAAKyiB,CAAd,GAAkB,KAAKxiB,CAAL,GAAS,KAAK+U,CAAvC;AACH,OAFD;AAGA;;;;;;;;;;;;;;;;AAcA0N,MAAAA,WAAW,CAACpgB,KAAZ,GAAoB,YAAY;AAC5B,YAAIT,GAAG,GAAG,EAAV,CAD4B,CAE5B;;AACAA,QAAAA,GAAG,CAACqO,EAAJ,GAAS,KAAKnP,CAAd;AACAc,QAAAA,GAAG,CAACsO,EAAJ,GAAS,KAAK1O,CAAd,CAJ4B,CAM5B;;AACA,YAAIyhB,GAAG,GAAG,CAAC,CAAC,KAAKljB,CAAN,EAAS,KAAKgV,CAAd,CAAD,EAAmB,CAAC,KAAK/U,CAAN,EAAS,KAAKwiB,CAAd,CAAnB,CAAV;AACA5gB,QAAAA,GAAG,CAACshB,MAAJ,GAAahZ,IAAI,CAACjC,IAAL,CAAU4a,IAAI,CAACI,GAAG,CAAC,CAAD,CAAJ,CAAd,CAAb;AACAH,QAAAA,SAAS,CAACG,GAAG,CAAC,CAAD,CAAJ,CAAT;AAEArhB,QAAAA,GAAG,CAACuhB,KAAJ,GAAYF,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,IAAYA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAZ,GAAwBA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,IAAYA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAhD;AACAA,QAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAACA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,IAAYA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,IAAYrhB,GAAG,CAACuhB,KAA7B,EAAoCF,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,IAAYA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,IAAYrhB,GAAG,CAACuhB,KAAhE,CAAT;AAEAvhB,QAAAA,GAAG,CAACwhB,MAAJ,GAAalZ,IAAI,CAACjC,IAAL,CAAU4a,IAAI,CAACI,GAAG,CAAC,CAAD,CAAJ,CAAd,CAAb;AACAH,QAAAA,SAAS,CAACG,GAAG,CAAC,CAAD,CAAJ,CAAT;AACArhB,QAAAA,GAAG,CAACuhB,KAAJ,IAAavhB,GAAG,CAACwhB,MAAjB;;AAEA,YAAI,KAAKJ,WAAL,KAAqB,CAAzB,EAA4B;AACxBphB,UAAAA,GAAG,CAACshB,MAAJ,GAAa,CAACthB,GAAG,CAACshB,MAAlB;AACH,SApB2B,CAsB5B;;;AACA,YAAIva,GAAG,GAAG,CAACsa,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAX;AAAA,YACIzT,GAAG,GAAGyT,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CADV;;AAEA,YAAIzT,GAAG,GAAG,CAAV,EAAa;AACT5N,UAAAA,GAAG,CAACsU,MAAJ,GAAanN,IAAI,CAACmG,GAAL,CAAShF,IAAI,CAACyF,IAAL,CAAUH,GAAV,CAAT,CAAb;;AACA,cAAI7G,GAAG,GAAG,CAAV,EAAa;AACT/G,YAAAA,GAAG,CAACsU,MAAJ,GAAa,MAAMtU,GAAG,CAACsU,MAAvB;AACH;AACJ,SALD,MAKO;AACHtU,UAAAA,GAAG,CAACsU,MAAJ,GAAanN,IAAI,CAACmG,GAAL,CAAShF,IAAI,CAACuF,IAAL,CAAU9G,GAAV,CAAT,CAAb;AACH;;AAED/G,QAAAA,GAAG,CAACyhB,QAAJ,GAAe,CAAC,CAACzhB,GAAG,CAACuhB,KAAJ,CAAUjQ,OAAV,CAAkB,CAAlB,CAAF,KAA2BtR,GAAG,CAACshB,MAAJ,CAAWhQ,OAAX,CAAmB,CAAnB,KAAyBtR,GAAG,CAACwhB,MAAJ,CAAWlQ,OAAX,CAAmB,CAAnB,CAAzB,IAAkD,CAACtR,GAAG,CAACsU,MAAlF,CAAf;AACAtU,QAAAA,GAAG,CAAC0hB,aAAJ,GAAoB,CAAC,CAAC1hB,GAAG,CAACuhB,KAAJ,CAAUjQ,OAAV,CAAkB,CAAlB,CAAF,IAA0BtR,GAAG,CAACshB,MAAJ,CAAWhQ,OAAX,CAAmB,CAAnB,KAAyBtR,GAAG,CAACwhB,MAAJ,CAAWlQ,OAAX,CAAmB,CAAnB,CAAnD,IAA4E,CAACtR,GAAG,CAACsU,MAArG;AACAtU,QAAAA,GAAG,CAAC2hB,UAAJ,GAAiB,CAAC,CAAC3hB,GAAG,CAACuhB,KAAJ,CAAUjQ,OAAV,CAAkB,CAAlB,CAAF,IAA0B,CAACtR,GAAG,CAACsU,MAAhD;AACA,eAAOtU,GAAP;AACH,OAtCD;AAuCA;;;;;;;;;AAOA6gB,MAAAA,WAAW,CAAClE,iBAAZ,GAAgC,UAAUiF,OAAV,EAAmB;AAC/C,YAAItd,CAAC,GAAGsd,OAAO,IAAI,KAAKnhB,KAAL,EAAnB;;AACA,YAAI,CAAC,CAAC6D,CAAC,CAACid,KAAF,CAAQjQ,OAAR,CAAgB,CAAhB,CAAN,EAA0B;AACtBhN,UAAAA,CAAC,CAACgd,MAAF,GAAW,CAAChd,CAAC,CAACgd,MAAF,CAAShQ,OAAT,CAAiB,CAAjB,CAAZ;AACAhN,UAAAA,CAAC,CAACkd,MAAF,GAAW,CAACld,CAAC,CAACkd,MAAF,CAASlQ,OAAT,CAAiB,CAAjB,CAAZ;AACAhN,UAAAA,CAAC,CAACgQ,MAAF,GAAW,CAAChQ,CAAC,CAACgQ,MAAF,CAAShD,OAAT,CAAiB,CAAjB,CAAZ;AACA,iBAAQ,CAAChN,CAAC,CAAC+J,EAAF,IAAQ/J,CAAC,CAACgK,EAAV,GAAe,MAAM,CAAC,CAAChK,CAAC,CAAC+J,EAAF,CAAKiD,OAAL,CAAa,CAAb,CAAF,EAAmB,CAAChN,CAAC,CAACgK,EAAF,CAAKgD,OAAL,CAAa,CAAb,CAApB,CAArB,GAA4D1I,CAA7D,KACCtE,CAAC,CAACgd,MAAF,IAAY,CAAZ,IAAiBhd,CAAC,CAACkd,MAAF,IAAY,CAA7B,GAAiC,MAAM,CAACld,CAAC,CAACgd,MAAH,EAAWhd,CAAC,CAACkd,MAAb,EAAqB,CAArB,EAAwB,CAAxB,CAAvC,GAAoE5Y,CADrE,KAECtE,CAAC,CAACgQ,MAAF,GAAW,MAAM,CAAC,CAAChQ,CAAC,CAACgQ,MAAF,CAAShD,OAAT,CAAiB,CAAjB,CAAF,EAAuB,CAAvB,EAA0B,CAA1B,CAAjB,GAAgD1I,CAFjD,CAAR;AAGH,SAPD,MAOO;AACH,iBAAO,MAAM,CAAC,KAAK3D,GAAL,CAAS,CAAT,CAAD,EAAc,KAAKA,GAAL,CAAS,CAAT,CAAd,EAA2B,KAAKA,GAAL,CAAS,CAAT,CAA3B,EAAwC,KAAKA,GAAL,CAAS,CAAT,CAAxC,EAAqD,KAAKA,GAAL,CAAS,CAAT,CAArD,EAAkE,KAAKA,GAAL,CAAS,CAAT,CAAlE,CAAb;AACH;AACJ,OAZD;AAaH,KA3OD,EA2OG8O,MAAM,CAACzU,SA3OV;AA4OA;;;;;;;;;AAOA6H,IAAAA,IAAI,CAAC4M,MAAL,GAAcA,MAAd;AACA;;;;;;;;;;;;;;;;;;AAiBA5M,IAAAA,IAAI,CAAC6U,MAAL,GAAc,UAAU7d,CAAV,EAAaC,CAAb,EAAgB+U,CAAhB,EAAmByN,CAAnB,EAAsB1hB,CAAtB,EAAyBU,CAAzB,EAA4B;AACtC,aAAO,IAAImU,MAAJ,CAAW5V,CAAX,EAAcC,CAAd,EAAiB+U,CAAjB,EAAoByN,CAApB,EAAuB1hB,CAAvB,EAA0BU,CAA1B,CAAP;AACH,KAFD;AAGH,GAvSD,EAnoGyC,CA26GzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAuH,EAAAA,IAAI,CAACiU,MAAL,CAAY,UAAUjU,IAAV,EAAgBO,OAAhB,EAAyBG,KAAzB,EAAgClK,IAAhC,EAAsCma,QAAtC,EAAgD;AACxD,QAAIja,GAAG,GAAG,gBAAV;AAAA,QACIyX,IAAI,GAAGnO,IAAI,CAACW,CAAL,CAAOwN,IADlB;AAAA,QAEI9N,IAAI,GAAGL,IAAI,CAACW,CAAL,CAAON,IAFlB;AAAA,QAGIC,EAAE,GAAGN,IAAI,CAACM,EAHd;AAAA,QAIIwN,WAAW,GAAG9N,IAAI,CAACW,CAAL,CAAOmN,WAJzB;AAAA,QAKI/L,UAAU,GAAG,oBALjB;AAAA,QAMIgB,CAAC,GAAG/C,IAAI,CAACW,CAAL,CAAOoC,CANf;AAAA,QAOIF,GAAG,GAAG7C,IAAI,CAAC8C,GAPf;AAAA,QAQIhC,GAAG,GAAGhJ,MARV;AAAA,QASInB,SAAS,GAAGqJ,IAAI,CAACW,CAAL,CAAOhK,SATvB;AAAA,QAUI8K,CAAC,GAAG,EAVR,CADwD,CAYxD;;AACA9J,IAAAA,GAAG,CAACoC,EAAJ,CAAO,qBAAP,EAA8B,UAAU6O,KAAV,EAAiB;AAC3C,UAAIA,KAAK,YAAYrI,OAAjB,IAA4BqI,KAAK,YAAY+H,QAAjD,EAA2D;AACvDhZ,QAAAA,GAAG,CAACR,IAAJ;;AACA,YAAIyR,KAAK,YAAY+H,QAAjB,IAA6B/H,KAAK,CAACvB,IAAN,CAAWiI,UAAX,CAAsB7X,MAAtB,IAAgC,CAAjE,EAAoE;AAChEmR,UAAAA,KAAK,GAAGA,KAAK,CAACvB,IAAN,CAAWqJ,UAAnB;AACA5C,UAAAA,WAAW,CAAC,IAAD,CAAX,CAAkBU,WAAlB,CAA8B5F,KAA9B;AACAA,UAAAA,KAAK,GAAGvI,IAAI,CAACuI,KAAD,CAAZ;AACH;;AACD,YAAIA,KAAK,CAACnG,IAAN,IAAc,MAAlB,EAA0B;AACtB,cAAIqN,IAAI,GAAGlH,KAAX;AACH,SAFD,MAEO;AACHkH,UAAAA,IAAI,GAAG3B,IAAI,CAAC,MAAD,EAASL,WAAW,CAAC,IAAD,CAApB,CAAX;AACAgC,UAAAA,IAAI,CAACzI,IAAL,CAAUmH,WAAV,CAAsB5F,KAAK,CAACvB,IAA5B;AACH;;AACD,SAACyI,IAAI,CAACzI,IAAL,CAAU3J,EAAX,IAAiBqF,CAAC,CAAC+M,IAAI,CAACzI,IAAN,EAAY;AAC1B3J,UAAAA,EAAE,EAAEoS,IAAI,CAACpS;AADiB,SAAZ,CAAlB;AAGAqF,QAAAA,CAAC,CAAC,KAAKsE,IAAN,EAAY;AACTyI,UAAAA,IAAI,EAAEjN,GAAG,CAACiN,IAAI,CAACpS,EAAN;AADA,SAAZ,CAAD;AAGH;AACJ,KArBD;;AAsBC,eAAUgd,MAAV,EAAkB;AACf/iB,MAAAA,GAAG,CAACoC,EAAJ,CAAO,qBAAP,EAA8B2gB,MAA9B;AACA/iB,MAAAA,GAAG,CAACoC,EAAJ,CAAO,0BAAP,EAAmC2gB,MAAnC;AACA/iB,MAAAA,GAAG,CAACoC,EAAJ,CAAO,yBAAP,EAAkC2gB,MAAlC;AACH,KAJA,EAIC,UAAU9R,KAAV,EAAiB;AACf,UAAIA,KAAK,YAAYrI,OAAjB,IAA4BqI,KAAK,YAAY+H,QAAjD,EAA2D;AACvDhZ,QAAAA,GAAG,CAACR,IAAJ;;AACA,YAAIyR,KAAK,CAACnG,IAAN,IAAc,UAAlB,EAA8B;AAC1B,cAAIkY,IAAI,GAAG/R,KAAX;AACH,SAFD,MAEO;AACH+R,UAAAA,IAAI,GAAGxM,IAAI,CAAC,UAAD,EAAaL,WAAW,CAAC,IAAD,CAAxB,CAAX;AACA6M,UAAAA,IAAI,CAACtT,IAAL,CAAUmH,WAAV,CAAsB5F,KAAK,CAACvB,IAA5B;AACA,WAACsT,IAAI,CAACtT,IAAL,CAAU3J,EAAX,IAAiBqF,CAAC,CAAC4X,IAAI,CAACtT,IAAN,EAAY;AAC1B3J,YAAAA,EAAE,EAAEid,IAAI,CAACjd;AADiB,WAAZ,CAAlB;AAGH;;AACDqF,QAAAA,CAAC,CAAC,KAAKsE,IAAN,EAAY;AACT,uBAAaxE,GAAG,CAAC8X,IAAI,CAACtT,IAAL,CAAU3J,EAAV,IAAgBid,IAAI,CAACjd,EAAtB;AADP,SAAZ,CAAD;AAGH;AACJ,KApBA,CAAD;;AAqBA,aAASkd,UAAT,CAAoBhjB,IAApB,EAA0B;AACtB,aAAO,UAAUgR,KAAV,EAAiB;AACpBjR,QAAAA,GAAG,CAACR,IAAJ;;AACA,YAAIyR,KAAK,YAAY+H,QAAjB,IAA6B/H,KAAK,CAACvB,IAAN,CAAWiI,UAAX,CAAsB7X,MAAtB,IAAgC,CAA7D,KACCmR,KAAK,CAACvB,IAAN,CAAWqJ,UAAX,CAAsBhB,OAAtB,IAAiC,gBAAjC,IACD9G,KAAK,CAACvB,IAAN,CAAWqJ,UAAX,CAAsBhB,OAAtB,IAAiC,gBADhC,IAED9G,KAAK,CAACvB,IAAN,CAAWqJ,UAAX,CAAsBhB,OAAtB,IAAiC,SAHjC,CAAJ,EAGiD;AAC7C9G,UAAAA,KAAK,GAAGA,KAAK,CAACvB,IAAN,CAAWqJ,UAAnB;AACA5C,UAAAA,WAAW,CAAC,IAAD,CAAX,CAAkBU,WAAlB,CAA8B5F,KAA9B;AACAA,UAAAA,KAAK,GAAGvI,IAAI,CAACuI,KAAD,CAAZ;AACH;;AACD,YAAIA,KAAK,YAAYrI,OAArB,EAA8B;AAC1B,cAAIqI,KAAK,CAACnG,IAAN,IAAc,gBAAd,IAAkCmG,KAAK,CAACnG,IAAN,IAAc,gBAAhD,IACEmG,KAAK,CAACnG,IAAN,IAAc,SADpB,EAC+B;AAC3B,gBAAI,CAACmG,KAAK,CAACvB,IAAN,CAAW3J,EAAhB,EAAoB;AAChBqF,cAAAA,CAAC,CAAC6F,KAAK,CAACvB,IAAP,EAAa;AACV3J,gBAAAA,EAAE,EAAEkL,KAAK,CAAClL;AADA,eAAb,CAAD;AAGH;;AACD,gBAAI6Q,IAAI,GAAG1L,GAAG,CAAC+F,KAAK,CAACvB,IAAN,CAAW3J,EAAZ,CAAd;AACH,WARD,MAQO;AACH6Q,YAAAA,IAAI,GAAG3F,KAAK,CAAC5F,IAAN,CAAWpL,IAAX,CAAP;AACH;AACJ,SAZD,MAYO;AACH2W,UAAAA,IAAI,GAAGvO,IAAI,CAACoK,KAAL,CAAWxB,KAAX,CAAP;;AACA,cAAI2F,IAAI,CAAClF,KAAT,EAAgB;AACZ,gBAAIwR,IAAI,GAAG7a,IAAI,CAAC8N,WAAW,CAAC,IAAD,CAAX,CAAkBC,eAAnB,CAAJ,CAAwC+M,QAAxC,CAAiDlS,KAAjD,CAAX;;AACA,gBAAIiS,IAAJ,EAAU;AACN,kBAAI,CAACA,IAAI,CAACxT,IAAL,CAAU3J,EAAf,EAAmB;AACfqF,gBAAAA,CAAC,CAAC8X,IAAI,CAACxT,IAAN,EAAY;AACT3J,kBAAAA,EAAE,EAAEmd,IAAI,CAACnd;AADA,iBAAZ,CAAD;AAGH;;AACD6Q,cAAAA,IAAI,GAAG1L,GAAG,CAACgY,IAAI,CAACxT,IAAL,CAAU3J,EAAX,CAAV;AACH,aAPD,MAOO;AACH6Q,cAAAA,IAAI,GAAG3F,KAAP;AACH;AACJ,WAZD,MAYO;AACH2F,YAAAA,IAAI,GAAGzN,GAAG,CAACyN,IAAD,CAAV;AACH;AACJ;;AACD,YAAIpU,KAAK,GAAG,EAAZ;AACAA,QAAAA,KAAK,CAACvC,IAAD,CAAL,GAAc2W,IAAd;AACAxL,QAAAA,CAAC,CAAC,KAAKsE,IAAN,EAAYlN,KAAZ,CAAD;AACA,aAAKkN,IAAL,CAAUiD,KAAV,CAAgB1S,IAAhB,IAAwB6J,CAAxB;AACH,OA5CD;AA6CH;;AACD9J,IAAAA,GAAG,CAACoC,EAAJ,CAAO,qBAAP,EAA8B6gB,UAAU,CAAC,MAAD,CAAxC;AACAjjB,IAAAA,GAAG,CAACoC,EAAJ,CAAO,uBAAP,EAAgC6gB,UAAU,CAAC,QAAD,CAA1C;AACA,QAAIG,MAAM,GAAG,+BAAb;AACApjB,IAAAA,GAAG,CAACoC,EAAJ,CAAO,sBAAP,EAA+B,SAASihB,SAAT,CAAmBnQ,MAAnB,EAA2B;AACtDA,MAAAA,MAAM,GAAG/J,GAAG,CAAC+J,MAAD,CAAZ;AACA,UAAIoQ,MAAM,GAAGpQ,MAAM,CAACf,KAAP,CAAaiR,MAAb,CAAb;;AACA,UAAI,CAACE,MAAL,EAAa;AACT,eAAO,IAAP;AACH;;AACD,UAAIxY,IAAI,GAAGwY,MAAM,CAAC,CAAD,CAAjB;AAAA,UACI9O,MAAM,GAAG8O,MAAM,CAAC,CAAD,CADnB;AAAA,UAEIC,KAAK,GAAGD,MAAM,CAAC,CAAD,CAFlB;AAGA9O,MAAAA,MAAM,GAAGA,MAAM,CAAC7S,KAAP,CAAa,SAAb,EAAwBwb,GAAxB,CAA4B,UAAUtS,EAAV,EAAc;AAC/C,eAAO,CAACA,EAAD,IAAOA,EAAP,GAAY,CAACA,EAAb,GAAkBA,EAAzB;AACH,OAFQ,CAAT;;AAGA,UAAI2J,MAAM,CAAC1U,MAAP,IAAiB,CAAjB,IAAsB0U,MAAM,CAAC,CAAD,CAAN,IAAa,CAAvC,EAA0C;AACtCA,QAAAA,MAAM,GAAG,EAAT;AACH;;AACD+O,MAAAA,KAAK,GAAGA,KAAK,CAAC5hB,KAAN,CAAY,GAAZ,CAAR;AACA4hB,MAAAA,KAAK,GAAGA,KAAK,CAACpG,GAAN,CAAU,UAAUtS,EAAV,EAAc;AAC5BA,QAAAA,EAAE,GAAGA,EAAE,CAAClJ,KAAH,CAAS,GAAT,CAAL;AACA,YAAIT,GAAG,GAAG;AACNuR,UAAAA,KAAK,EAAE5H,EAAE,CAAC,CAAD;AADH,SAAV;;AAGA,YAAIA,EAAE,CAAC,CAAD,CAAN,EAAW;AACP3J,UAAAA,GAAG,CAACghB,MAAJ,GAAa7Y,UAAU,CAACwB,EAAE,CAAC,CAAD,CAAH,CAAvB;AACH;;AACD,eAAO3J,GAAP;AACH,OATO,CAAR;AAUA,aAAO;AACH4J,QAAAA,IAAI,EAAEA,IADH;AAEH0J,QAAAA,MAAM,EAAEA,MAFL;AAGH+O,QAAAA,KAAK,EAAEA;AAHJ,OAAP;AAKH,KA/BD;AAiCAvjB,IAAAA,GAAG,CAACoC,EAAJ,CAAO,kBAAP,EAA2B,UAAU6O,KAAV,EAAiB;AACxCjR,MAAAA,GAAG,CAACR,IAAJ;;AACA,UAAImJ,EAAE,CAACsI,KAAD,EAAQ,OAAR,CAAF,IAAsBtI,EAAE,CAACsI,KAAK,CAAC,CAAD,CAAN,EAAW,OAAX,CAA5B,EAAiD;AAC7CA,QAAAA,KAAK,GAAG5I,IAAI,CAACgH,IAAL,CAAU/L,QAAV,CAAmB5C,IAAnB,CAAwBuQ,KAAxB,CAAR;AACH;;AACDA,MAAAA,KAAK,GAAG9H,GAAG,CAAC8H,KAAD,CAAX;;AACA,UAAIA,KAAK,CAACkB,KAAN,CAAY,QAAZ,CAAJ,EAA2B;AACvBlB,QAAAA,KAAK,GAAG5I,IAAI,CAACgH,IAAL,CAAUmU,UAAV,CAAqBvS,KAArB,CAAR;AACH;;AACD7F,MAAAA,CAAC,CAAC,KAAKsE,IAAN,EAAY;AAACoS,QAAAA,CAAC,EAAE7Q;AAAJ,OAAZ,CAAD;AACH,KAVD,EAUG,CAAC,CAVJ;AAWAjR,IAAAA,GAAG,CAACoC,EAAJ,CAAO,sBAAP,EAA+B,UAAU6O,KAAV,EAAiB;AAC5CjR,MAAAA,GAAG,CAACR,IAAJ;AACAyR,MAAAA,KAAK,GAAG9H,GAAG,CAAC8H,KAAD,CAAX;AACA,UAAIwS,GAAG,GAAG5kB,IAAI,CAACgK,GAAL,CAASyC,cAAT,CAAwB2F,KAAxB,CAAV;;AACA,aAAO,KAAKvB,IAAL,CAAUqJ,UAAjB,EAA6B;AACzB,aAAKrJ,IAAL,CAAUwH,WAAV,CAAsB,KAAKxH,IAAL,CAAUqJ,UAAhC;AACH;;AACD,WAAKrJ,IAAL,CAAUmH,WAAV,CAAsB4M,GAAtB;AACH,KARD,EAQG,CAAC,CARJ;AASAzjB,IAAAA,GAAG,CAACoC,EAAJ,CAAO,qBAAP,EAA8B,UAAU6O,KAAV,EAAiB;AAC3CjR,MAAAA,GAAG,CAACR,IAAJ;AACA,WAAK6L,IAAL,CAAU;AAACyW,QAAAA,CAAC,EAAE7Q;AAAJ,OAAV;AACH,KAHD,EAGG,CAAC,CAHJ;AAIAjR,IAAAA,GAAG,CAACoC,EAAJ,CAAO,sBAAP,EAA+B,UAAU6O,KAAV,EAAiB;AAC5CjR,MAAAA,GAAG,CAACR,IAAJ;AACA,WAAKkQ,IAAL,CAAUgU,SAAV,CAAoBC,OAApB,GAA8B1S,KAA9B;AACH,KAHD,EAGG,CAAC,CAHJ;AAIAjR,IAAAA,GAAG,CAACoC,EAAJ,CAAO,wBAAP,EAAiC,UAAU6O,KAAV,EAAiB;AAC9C,UAAI2S,EAAJ;;AACA,UAAIjb,EAAE,CAACsI,KAAD,EAAQ,QAAR,CAAF,IAAuB,OAAOA,KAAlC,EAAyC;AACrC2S,QAAAA,EAAE,GAAG,CAAC3S,KAAK,CAACzJ,CAAP,EAAUyJ,KAAK,CAACtJ,CAAhB,EAAmBsJ,KAAK,CAACtC,KAAzB,EAAgCsC,KAAK,CAACrC,MAAtC,EAA8CjB,IAA9C,CAAmD,GAAnD,CAAL;AACH,OAFD,MAEO,IAAIhF,EAAE,CAACsI,KAAD,EAAQ,OAAR,CAAN,EAAwB;AAC3B2S,QAAAA,EAAE,GAAG3S,KAAK,CAACtD,IAAN,CAAW,GAAX,CAAL;AACH,OAFM,MAEA;AACHiW,QAAAA,EAAE,GAAG3S,KAAL;AACH;;AACD7F,MAAAA,CAAC,CAAC,KAAKsE,IAAN,EAAY;AACTmQ,QAAAA,OAAO,EAAE+D;AADA,OAAZ,CAAD;AAGA5jB,MAAAA,GAAG,CAACR,IAAJ;AACH,KAbD,EAaG,CAAC,CAbJ;AAcAQ,IAAAA,GAAG,CAACoC,EAAJ,CAAO,0BAAP,EAAmC,UAAU6O,KAAV,EAAiB;AAChD,WAAKiH,SAAL,CAAejH,KAAf;AACAjR,MAAAA,GAAG,CAACR,IAAJ;AACH,KAHD,EAGG,CAAC,CAHJ;AAIAQ,IAAAA,GAAG,CAACoC,EAAJ,CAAO,kBAAP,EAA2B,UAAU6O,KAAV,EAAiB;AACxC,UAAI,KAAKnG,IAAL,IAAa,MAAjB,EAAyB;AACrB9K,QAAAA,GAAG,CAACR,IAAJ;AACA4L,QAAAA,CAAC,CAAC,KAAKsE,IAAN,EAAY;AACTmU,UAAAA,EAAE,EAAE5S,KADK;AAET6S,UAAAA,EAAE,EAAE7S;AAFK,SAAZ,CAAD;AAIH;AACJ,KARD,EAQG,CAAC,CARJ;AASAjR,IAAAA,GAAG,CAACoC,EAAJ,CAAO,yBAAP,EAAkC,UAAU6O,KAAV,EAAiB;AAC/CjR,MAAAA,GAAG,CAACR,IAAJ;;AACA,UAAI,KAAKsL,IAAL,IAAa,MAAjB,EAAyB;AACrB,YAAI/E,EAAJ,EAAQge,EAAR,EAAYrU,IAAZ;;AACA,YAAI,CAACuB,KAAD,IAAU,KAAK+S,QAAnB,EAA6B;AACzBD,UAAAA,EAAE,GAAG,KAAKC,QAAV;;AACA,iBAAOD,EAAE,CAACrU,IAAH,CAAQqJ,UAAf,EAA2B;AACvB,iBAAKrJ,IAAL,CAAUmH,WAAV,CAAsBkN,EAAE,CAACrU,IAAH,CAAQqJ,UAA9B;AACH;;AACDgL,UAAAA,EAAE,CAAClF,MAAH;AACA,iBAAO,KAAKmF,QAAZ;AACA;AACH;;AACD,YAAIrb,EAAE,CAACsI,KAAD,EAAQ,QAAR,CAAN,EAAyB;AACrB,cAAIsF,IAAI,GAAGJ,WAAW,CAAC,IAAD,CAAtB;AAAA,cACI9G,IAAI,GAAG3G,IAAI,CAAC6N,IAAI,CAACL,UAAN,CAAJ,CAAsB7G,IAAtB,CAA2B4B,KAA3B,CADX;AAEAsF,UAAAA,IAAI,CAACM,WAAL,CAAiBxH,IAAI,CAACK,IAAtB;AACA3J,UAAAA,EAAE,GAAGsJ,IAAI,CAACtJ,EAAV;AACAsJ,UAAAA,IAAI,CAAChE,IAAL,CAAU;AAACtF,YAAAA,EAAE,EAAEA;AAAL,WAAV;AACH,SAND,MAMO;AACHkL,UAAAA,KAAK,GAAGvI,IAAI,CAACuI,KAAD,CAAZ;;AACA,cAAIA,KAAK,YAAYrI,OAArB,EAA8B;AAC1B7C,YAAAA,EAAE,GAAGkL,KAAK,CAAC5F,IAAN,CAAW,IAAX,CAAL;;AACA,gBAAI,CAACtF,EAAL,EAAS;AACLA,cAAAA,EAAE,GAAGkL,KAAK,CAAClL,EAAX;AACAkL,cAAAA,KAAK,CAAC5F,IAAN,CAAW;AAACtF,gBAAAA,EAAE,EAAEA;AAAL,eAAX;AACH;AACJ;AACJ;;AACD,YAAIA,EAAJ,EAAQ;AACJge,UAAAA,EAAE,GAAG,KAAKC,QAAV;AACAtU,UAAAA,IAAI,GAAG,KAAKA,IAAZ;;AACA,cAAIqU,EAAJ,EAAQ;AACJA,YAAAA,EAAE,CAAC1Y,IAAH,CAAQ;AAAC,4BAAc,MAAMtF;AAArB,aAAR;AACH,WAFD,MAEO;AACHge,YAAAA,EAAE,GAAG3Y,CAAC,CAAC,UAAD,EAAa;AACf,4BAAc,MAAMrF;AADL,aAAb,CAAN;;AAGA,mBAAO2J,IAAI,CAACqJ,UAAZ,EAAwB;AACpBgL,cAAAA,EAAE,CAAClN,WAAH,CAAenH,IAAI,CAACqJ,UAApB;AACH;;AACDrJ,YAAAA,IAAI,CAACmH,WAAL,CAAiBkN,EAAjB;AACA,iBAAKC,QAAL,GAAgBtb,IAAI,CAACqb,EAAD,CAApB;AACH;AACJ;AACJ;AACJ,KA9CD,EA8CG,CAAC,CA9CJ;AA+CA/jB,IAAAA,GAAG,CAACoC,EAAJ,CAAO,qBAAP,EAA8B,UAAU6O,KAAV,EAAiB;AAC3C,UAAI,KAAKnG,IAAL,IAAa,MAAjB,EAAyB;AACrB,YAAIlL,CAAC,GAAG,CAAR;AAAA,YACI8P,IAAI,GAAG,KAAKA,IADhB;AAAA,YAEIuU,KAAK,GAAG,UAAUC,KAAV,EAAiB;AACrB,cAAIhjB,GAAG,GAAGkK,CAAC,CAAC,OAAD,CAAX;;AACA,cAAIzC,EAAE,CAACub,KAAD,EAAQ,OAAR,CAAN,EAAwB;AACpB,iBAAK,IAAItkB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGskB,KAAK,CAACpkB,MAA1B,EAAkCF,CAAC,EAAnC,EAAuC;AACnCsB,cAAAA,GAAG,CAAC2V,WAAJ,CAAgBoN,KAAK,CAACC,KAAK,CAACtkB,CAAD,CAAN,CAArB;AACH;AACJ,WAJD,MAIO;AACHsB,YAAAA,GAAG,CAAC2V,WAAJ,CAAgBhY,IAAI,CAACgK,GAAL,CAASyC,cAAT,CAAwB4Y,KAAxB,CAAhB;AACH;;AACDhjB,UAAAA,GAAG,CAACkhB,SAAJ,IAAiBlhB,GAAG,CAACkhB,SAAJ,EAAjB;AACA,iBAAOlhB,GAAP;AACH,SAbL;;AAcA,eAAOwO,IAAI,CAACqJ,UAAZ,EAAwB;AACpBrJ,UAAAA,IAAI,CAACwH,WAAL,CAAiBxH,IAAI,CAACqJ,UAAtB;AACH;;AACD,YAAIoL,KAAK,GAAGF,KAAK,CAAChT,KAAD,CAAjB;;AACA,eAAOkT,KAAK,CAACpL,UAAb,EAAyB;AACrBrJ,UAAAA,IAAI,CAACmH,WAAL,CAAiBsN,KAAK,CAACpL,UAAvB;AACH;AACJ;;AACD/Y,MAAAA,GAAG,CAACR,IAAJ;AACH,KAzBD,EAyBG,CAAC,CAzBJ;;AA0BA,aAAS4kB,WAAT,CAAqBnT,KAArB,EAA4B;AACxBjR,MAAAA,GAAG,CAACR,IAAJ;;AACA,UAAIyR,KAAK,IAAI,CAACA,KAAd,EAAqB;AACjBA,QAAAA,KAAK,IAAI,IAAT;AACH;;AACD,WAAKvB,IAAL,CAAUiD,KAAV,CAAgB0R,QAAhB,GAA2BpT,KAA3B;AACH;;AACDjR,IAAAA,GAAG,CAACoC,EAAJ,CAAO,yBAAP,EAAkCgiB,WAAlC,EAA+C,CAAC,CAAhD;AACApkB,IAAAA,GAAG,CAACoC,EAAJ,CAAO,0BAAP,EAAmCgiB,WAAnC,EAAgD,CAAC,CAAjD;AAGApkB,IAAAA,GAAG,CAACoC,EAAJ,CAAO,6BAAP,EAAsC,YAAY;AAC9CpC,MAAAA,GAAG,CAACR,IAAJ;AACA,aAAO,KAAK0Y,SAAL,EAAP;AACH,KAHD,EAGG,CAAC,CAHJ;AAIAlY,IAAAA,GAAG,CAACoC,EAAJ,CAAO,4BAAP,EAAqC,YAAY;AAC7CpC,MAAAA,GAAG,CAACR,IAAJ;AACA,aAAO,KAAKwkB,QAAZ;AACH,KAHD,EAGG,CAAC,CAHJ,EA1RwD,CA8RxD;;AACC,iBAAY;AACT,eAASM,MAAT,CAAgBhe,GAAhB,EAAqB;AACjB,eAAO,YAAY;AACftG,UAAAA,GAAG,CAACR,IAAJ;AACA,cAAImT,KAAK,GAAG9T,IAAI,CAACgK,GAAL,CAAS+J,WAAT,CAAqBC,gBAArB,CAAsC,KAAKnD,IAA3C,EAAiD,IAAjD,EAAuDoD,gBAAvD,CAAwE,YAAYxM,GAApF,CAAZ;;AACA,cAAIqM,KAAK,IAAI,MAAb,EAAqB;AACjB,mBAAOA,KAAP;AACH,WAFD,MAEO;AACH,mBAAOtK,IAAI,CAACxJ,IAAI,CAACgK,GAAL,CAASgU,cAAT,CAAwBlK,KAAK,CAACR,KAAN,CAAY/H,UAAZ,EAAwB,CAAxB,CAAxB,CAAD,CAAX;AACH;AACJ,SARD;AASH;;AACD,eAAS2W,MAAT,CAAgBza,GAAhB,EAAqB;AACjB,eAAO,UAAU2K,KAAV,EAAiB;AACpBjR,UAAAA,GAAG,CAACR,IAAJ;AACA,cAAIS,IAAI,GAAG,WAAWqG,GAAG,CAACsL,MAAJ,CAAW,CAAX,EAAcqI,WAAd,EAAX,GAAyC3T,GAAG,CAACmF,SAAJ,CAAc,CAAd,CAApD;;AACA,cAAIwF,KAAK,IAAI,EAAT,IAAe,CAACA,KAApB,EAA2B;AACvB,iBAAKvB,IAAL,CAAUiD,KAAV,CAAgB1S,IAAhB,IAAwB,MAAxB;AACA;AACH;;AACD,cAAIgR,KAAK,CAACnG,IAAN,IAAc,QAAlB,EAA4B;AACxB,gBAAI/E,EAAE,GAAGkL,KAAK,CAACvB,IAAN,CAAW3J,EAApB;;AACA,gBAAI,CAACA,EAAL,EAAS;AACLqF,cAAAA,CAAC,CAAC6F,KAAK,CAACvB,IAAP,EAAa;AAAC3J,gBAAAA,EAAE,EAAEkL,KAAK,CAAClL;AAAX,eAAb,CAAD;AACH;;AACD,iBAAK2J,IAAL,CAAUiD,KAAV,CAAgB1S,IAAhB,IAAwBiL,GAAG,CAACnF,EAAD,CAA3B;AACA;AACH;AACJ,SAfD;AAgBH;;AACD/F,MAAAA,GAAG,CAACoC,EAAJ,CAAO,8BAAP,EAAuCkiB,MAAM,CAAC,KAAD,CAA7C,EAAsD,CAAC,CAAvD;AACAtkB,MAAAA,GAAG,CAACoC,EAAJ,CAAO,6BAAP,EAAsCkiB,MAAM,CAAC,KAAD,CAA5C,EAAqD,CAAC,CAAtD;AACAtkB,MAAAA,GAAG,CAACoC,EAAJ,CAAO,gCAAP,EAAyCkiB,MAAM,CAAC,OAAD,CAA/C,EAA0D,CAAC,CAA3D;AACAtkB,MAAAA,GAAG,CAACoC,EAAJ,CAAO,+BAAP,EAAwCkiB,MAAM,CAAC,OAAD,CAA9C,EAAyD,CAAC,CAA1D;AACAtkB,MAAAA,GAAG,CAACoC,EAAJ,CAAO,8BAAP,EAAuCkiB,MAAM,CAAC,KAAD,CAA7C,EAAsD,CAAC,CAAvD;AACAtkB,MAAAA,GAAG,CAACoC,EAAJ,CAAO,6BAAP,EAAsCkiB,MAAM,CAAC,KAAD,CAA5C,EAAqD,CAAC,CAAtD;AACAtkB,MAAAA,GAAG,CAACoC,EAAJ,CAAO,2BAAP,EAAoC2e,MAAM,CAAC,KAAD,CAA1C,EAAmD,CAAC,CAApD;AACA/gB,MAAAA,GAAG,CAACoC,EAAJ,CAAO,0BAAP,EAAmC2e,MAAM,CAAC,KAAD,CAAzC,EAAkD,CAAC,CAAnD;AACA/gB,MAAAA,GAAG,CAACoC,EAAJ,CAAO,6BAAP,EAAsC2e,MAAM,CAAC,OAAD,CAA5C,EAAuD,CAAC,CAAxD;AACA/gB,MAAAA,GAAG,CAACoC,EAAJ,CAAO,4BAAP,EAAqC2e,MAAM,CAAC,OAAD,CAA3C,EAAsD,CAAC,CAAvD;AACA/gB,MAAAA,GAAG,CAACoC,EAAJ,CAAO,2BAAP,EAAoC2e,MAAM,CAAC,KAAD,CAA1C,EAAmD,CAAC,CAApD;AACA/gB,MAAAA,GAAG,CAACoC,EAAJ,CAAO,0BAAP,EAAmC2e,MAAM,CAAC,KAAD,CAAzC,EAAkD,CAAC,CAAnD;AACH,KA1CA,GAAD;;AA2CA/gB,IAAAA,GAAG,CAACoC,EAAJ,CAAO,qBAAP,EAA8B,YAAY;AACtC,UAAI,KAAK0I,IAAL,IAAa,MAAb,IAAuBM,CAAC,CAAC,KAAKsE,IAAN,EAAY,IAAZ,CAAD,IAAsBtE,CAAC,CAAC,KAAKsE,IAAN,EAAY,IAAZ,CAAlD,EAAqE;AACjE1P,QAAAA,GAAG,CAACR,IAAJ;AACA,eAAO4L,CAAC,CAAC,KAAKsE,IAAN,EAAY,IAAZ,CAAR;AACH;AACJ,KALD,EAKG,CAAC,CALJ;;AAMA,aAAS6U,WAAT,CAAqB7U,IAArB,EAA2B;AACvB,UAAIxO,GAAG,GAAG,EAAV;AACA,UAAIwW,QAAQ,GAAGhI,IAAI,CAACiI,UAApB;;AACA,WAAK,IAAI/X,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAG6X,QAAQ,CAAC5X,MAA9B,EAAsCF,CAAC,GAAGC,EAA1C,EAA8CD,CAAC,EAA/C,EAAmD;AAC/C,YAAI4kB,GAAG,GAAG9M,QAAQ,CAAC9X,CAAD,CAAlB;;AACA,YAAI4kB,GAAG,CAAC/b,QAAJ,IAAgB,CAApB,EAAuB;AACnBvH,UAAAA,GAAG,CAACG,IAAJ,CAASmjB,GAAG,CAAC5Y,SAAb;AACH;;AACD,YAAI4Y,GAAG,CAACzM,OAAJ,IAAe,OAAnB,EAA4B;AACxB,cAAIyM,GAAG,CAAC7M,UAAJ,CAAe7X,MAAf,IAAyB,CAAzB,IAA8B0kB,GAAG,CAACzL,UAAJ,CAAetQ,QAAf,IAA2B,CAA7D,EAAgE;AAC5DvH,YAAAA,GAAG,CAACG,IAAJ,CAASmjB,GAAG,CAACzL,UAAJ,CAAenN,SAAxB;AACH,WAFD,MAEO;AACH1K,YAAAA,GAAG,CAACG,IAAJ,CAASkjB,WAAW,CAACC,GAAD,CAApB;AACH;AACJ;AACJ;;AACD,aAAOtjB,GAAP;AACH;;AACDlB,IAAAA,GAAG,CAACoC,EAAJ,CAAO,wBAAP,EAAiC,YAAY;AACzC,UAAI,KAAK0I,IAAL,IAAa,MAAb,IAAuB,KAAKA,IAAL,IAAa,OAAxC,EAAiD;AAC7C9K,QAAAA,GAAG,CAACR,IAAJ;AACA,YAAI0B,GAAG,GAAGqjB,WAAW,CAAC,KAAK7U,IAAN,CAArB;AACA,eAAOxO,GAAG,CAACpB,MAAJ,IAAc,CAAd,GAAkBoB,GAAG,CAAC,CAAD,CAArB,GAA2BA,GAAlC;AACH;AACJ,KAND,EAMG,CAAC,CANJ;AAOAlB,IAAAA,GAAG,CAACoC,EAAJ,CAAO,yBAAP,EAAkC,YAAY;AAC1C,aAAO,KAAKsN,IAAL,CAAUtD,WAAjB;AACH,KAFD,EAEG,CAAC,CAFJ;AAGApM,IAAAA,GAAG,CAACoC,EAAJ,CAAO,2BAAP,EAAoC,YAAY;AAC5CpC,MAAAA,GAAG,CAACR,IAAJ;AACA,UAAIokB,EAAE,GAAGxY,CAAC,CAAC,KAAKsE,IAAN,EAAY,SAAZ,CAAV;;AACA,UAAIkU,EAAJ,EAAQ;AACJA,QAAAA,EAAE,GAAGA,EAAE,CAACjiB,KAAH,CAAS3C,SAAT,CAAL;AACA,eAAOqJ,IAAI,CAACW,CAAL,CAAOiS,GAAP,CAAW,CAAC2I,EAAE,CAAC,CAAD,CAAd,EAAmB,CAACA,EAAE,CAAC,CAAD,CAAtB,EAA2B,CAACA,EAAE,CAAC,CAAD,CAA9B,EAAmC,CAACA,EAAE,CAAC,CAAD,CAAtC,CAAP;AACH,OAHD,MAGO;AACH;AACH;AACJ,KATD,EASG,CAAC,CATJ;AAUA5jB,IAAAA,GAAG,CAACoC,EAAJ,CAAO,0BAAP,EAAmC,YAAY;AAC3C,UAAIgG,CAAC,GAAGgD,CAAC,CAAC,KAAKsE,IAAN,EAAY,QAAZ,CAAT;AACA1P,MAAAA,GAAG,CAACR,IAAJ;;AACA,UAAI4I,CAAJ,EAAO;AACH,eAAOA,CAAC,CAACzG,KAAF,CAAQ3C,SAAR,CAAP;AACH,OAFD,MAEO;AACH;AACH;AACJ,KARD,EAQG,CAAC,CARJ;AASAgB,IAAAA,GAAG,CAACoC,EAAJ,CAAO,wBAAP,EAAiC,YAAY;AACzC,UAAIgG,CAAC,GAAGgD,CAAC,CAAC,KAAKsE,IAAN,EAAY,GAAZ,CAAT;AACA1P,MAAAA,GAAG,CAACR,IAAJ;AACA,aAAO4I,CAAP;AACH,KAJD,EAIG,CAAC,CAJJ;AAKApI,IAAAA,GAAG,CAACoC,EAAJ,CAAO,yBAAP,EAAkC,YAAY;AAC1C,aAAO,KAAKsN,IAAL,CAAUgU,SAAV,CAAoBC,OAA3B;AACH,KAFD,EAEG,CAAC,CAFJ;;AAGA,aAASc,WAAT,GAAuB;AACnBzkB,MAAAA,GAAG,CAACR,IAAJ;AACA,aAAO,KAAKkQ,IAAL,CAAUiD,KAAV,CAAgB0R,QAAvB;AACH;;AACDrkB,IAAAA,GAAG,CAACoC,EAAJ,CAAO,4BAAP,EAAqCqiB,WAArC,EAAkD,CAAC,CAAnD;AACAzkB,IAAAA,GAAG,CAACoC,EAAJ,CAAO,6BAAP,EAAsCqiB,WAAtC,EAAmD,CAAC,CAApD;AACH,GA7YD,EAx7GyC,CAu0HzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACApc,EAAAA,IAAI,CAACiU,MAAL,CAAY,UAAUjU,IAAV,EAAgBO,OAAhB,EAAyBG,KAAzB,EAAgClK,IAAhC,EAAsCma,QAAtC,EAAgD;AACxD,QAAI0L,UAAU,GAAG,MAAjB;AAAA,QACIC,UAAU,GAAG,aADjB;AAAA,QAEIC,MAAM,GAAG,cAFb;AAAA,QAGIzb,GAAG,GAAGhJ,MAHV;AAAA,QAIIoc,OAAO,GAAG3T,OAAO,CAACpI,SAJtB;AAKA;;;;;;;;;;AASA+b,IAAAA,OAAO,CAACsI,QAAR,GAAmB,UAAU5T,KAAV,EAAiB;AAChC,UAAI6T,OAAO,GAAG3b,GAAG,CAAC8H,KAAK,IAAI,EAAV,CAAH,CAAiBkB,KAAjB,CAAuBuS,UAAvB,KAAsC,EAApD;AAAA,UACI1J,IAAI,GAAG,KAAKtL,IADhB;AAAA,UAEIgU,SAAS,GAAG1I,IAAI,CAAC0I,SAAL,CAAeC,OAF/B;AAAA,UAGIoB,UAAU,GAAGrB,SAAS,CAACvR,KAAV,CAAgBuS,UAAhB,KAA+B,EAHhD;AAAA,UAII3iB,CAJJ;AAAA,UAKIijB,GALJ;AAAA,UAMIC,KANJ;AAAA,UAOIC,UAPJ;;AASA,UAAIJ,OAAO,CAAChlB,MAAZ,EAAoB;AAChBiC,QAAAA,CAAC,GAAG,CAAJ;;AACA,eAAQkjB,KAAK,GAAGH,OAAO,CAAC/iB,CAAC,EAAF,CAAvB,EAA+B;AAC3BijB,UAAAA,GAAG,GAAGD,UAAU,CAACzT,OAAX,CAAmB2T,KAAnB,CAAN;;AACA,cAAI,CAAC,CAACD,GAAN,EAAW;AACPD,YAAAA,UAAU,CAAC1jB,IAAX,CAAgB4jB,KAAhB;AACH;AACJ;;AAEDC,QAAAA,UAAU,GAAGH,UAAU,CAACpX,IAAX,CAAgB,GAAhB,CAAb;;AACA,YAAI+V,SAAS,IAAIwB,UAAjB,EAA6B;AACzBlK,UAAAA,IAAI,CAAC0I,SAAL,CAAeC,OAAf,GAAyBuB,UAAzB;AACH;AACJ;;AACD,aAAO,IAAP;AACH,KAzBD;AA0BA;;;;;;;;;;;AASA3I,IAAAA,OAAO,CAAC4I,WAAR,GAAsB,UAAUlU,KAAV,EAAiB;AACnC,UAAI6T,OAAO,GAAG3b,GAAG,CAAC8H,KAAK,IAAI,EAAV,CAAH,CAAiBkB,KAAjB,CAAuBuS,UAAvB,KAAsC,EAApD;AAAA,UACI1J,IAAI,GAAG,KAAKtL,IADhB;AAAA,UAEIgU,SAAS,GAAG1I,IAAI,CAAC0I,SAAL,CAAeC,OAF/B;AAAA,UAGIoB,UAAU,GAAGrB,SAAS,CAACvR,KAAV,CAAgBuS,UAAhB,KAA+B,EAHhD;AAAA,UAII3iB,CAJJ;AAAA,UAKIijB,GALJ;AAAA,UAMIC,KANJ;AAAA,UAOIC,UAPJ;;AAQA,UAAIH,UAAU,CAACjlB,MAAf,EAAuB;AACnBiC,QAAAA,CAAC,GAAG,CAAJ;;AACA,eAAQkjB,KAAK,GAAGH,OAAO,CAAC/iB,CAAC,EAAF,CAAvB,EAA+B;AAC3BijB,UAAAA,GAAG,GAAGD,UAAU,CAACzT,OAAX,CAAmB2T,KAAnB,CAAN;;AACA,cAAI,CAACD,GAAL,EAAU;AACND,YAAAA,UAAU,CAAC9hB,MAAX,CAAkB+hB,GAAlB,EAAuB,CAAvB;AACH;AACJ;;AAEDE,QAAAA,UAAU,GAAGH,UAAU,CAACpX,IAAX,CAAgB,GAAhB,CAAb;;AACA,YAAI+V,SAAS,IAAIwB,UAAjB,EAA6B;AACzBlK,UAAAA,IAAI,CAAC0I,SAAL,CAAeC,OAAf,GAAyBuB,UAAzB;AACH;AACJ;;AACD,aAAO,IAAP;AACH,KAxBD;AAyBA;;;;;;;;;;;AASA3I,IAAAA,OAAO,CAAC6I,QAAR,GAAmB,UAAUnU,KAAV,EAAiB;AAChC,UAAI+J,IAAI,GAAG,KAAKtL,IAAhB;AAAA,UACIgU,SAAS,GAAG1I,IAAI,CAAC0I,SAAL,CAAeC,OAD/B;AAAA,UAEIoB,UAAU,GAAGrB,SAAS,CAACvR,KAAV,CAAgBuS,UAAhB,KAA+B,EAFhD;AAGA,aAAO,CAAC,CAAC,CAACK,UAAU,CAACzT,OAAX,CAAmBL,KAAnB,CAAV;AACH,KALD;AAMA;;;;;;;;;;;;;AAWAsL,IAAAA,OAAO,CAAC8I,WAAR,GAAsB,UAAUpU,KAAV,EAAiBqU,IAAjB,EAAuB;AACzC,UAAIA,IAAI,IAAI,IAAZ,EAAkB;AACd,YAAIA,IAAJ,EAAU;AACN,iBAAO,KAAKT,QAAL,CAAc5T,KAAd,CAAP;AACH,SAFD,MAEO;AACH,iBAAO,KAAKkU,WAAL,CAAiBlU,KAAjB,CAAP;AACH;AACJ;;AACD,UAAI6T,OAAO,GAAG,CAAC7T,KAAK,IAAI,EAAV,EAAckB,KAAd,CAAoBuS,UAApB,KAAmC,EAAjD;AAAA,UACI1J,IAAI,GAAG,KAAKtL,IADhB;AAAA,UAEIgU,SAAS,GAAG1I,IAAI,CAAC0I,SAAL,CAAeC,OAF/B;AAAA,UAGIoB,UAAU,GAAGrB,SAAS,CAACvR,KAAV,CAAgBuS,UAAhB,KAA+B,EAHhD;AAAA,UAII3iB,CAJJ;AAAA,UAKIijB,GALJ;AAAA,UAMIC,KANJ;AAAA,UAOIC,UAPJ;AAQAnjB,MAAAA,CAAC,GAAG,CAAJ;;AACA,aAAQkjB,KAAK,GAAGH,OAAO,CAAC/iB,CAAC,EAAF,CAAvB,EAA+B;AAC3BijB,QAAAA,GAAG,GAAGD,UAAU,CAACzT,OAAX,CAAmB2T,KAAnB,CAAN;;AACA,YAAI,CAACD,GAAL,EAAU;AACND,UAAAA,UAAU,CAAC9hB,MAAX,CAAkB+hB,GAAlB,EAAuB,CAAvB;AACH,SAFD,MAEO;AACHD,UAAAA,UAAU,CAAC1jB,IAAX,CAAgB4jB,KAAhB;AACH;AACJ;;AAEDC,MAAAA,UAAU,GAAGH,UAAU,CAACpX,IAAX,CAAgB,GAAhB,CAAb;;AACA,UAAI+V,SAAS,IAAIwB,UAAjB,EAA6B;AACzBlK,QAAAA,IAAI,CAAC0I,SAAL,CAAeC,OAAf,GAAyBuB,UAAzB;AACH;;AACD,aAAO,IAAP;AACH,KA/BD;AAgCH,GArID,EAp1HyC,CA29HzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA7c,EAAAA,IAAI,CAACiU,MAAL,CAAY,UAAUjU,IAAV,EAAgBO,OAAhB,EAAyBG,KAAzB,EAAgClK,IAAhC,EAAsCma,QAAtC,EAAgD;AACxD,QAAIuM,SAAS,GAAG;AACR,WAAK,UAAU/d,CAAV,EAAaG,CAAb,EAAgB;AACb,eAAOH,CAAC,GAAGG,CAAX;AACH,OAHG;AAIR,WAAK,UAAUH,CAAV,EAAaG,CAAb,EAAgB;AACb,eAAOH,CAAC,GAAGG,CAAX;AACH,OANG;AAOR,WAAK,UAAUH,CAAV,EAAaG,CAAb,EAAgB;AACb,eAAOH,CAAC,GAAGG,CAAX;AACH,OATG;AAUR,WAAK,UAAUH,CAAV,EAAaG,CAAb,EAAgB;AACb,eAAOH,CAAC,GAAGG,CAAX;AACH;AAZG,KAAhB;AAAA,QAcIwB,GAAG,GAAGhJ,MAdV;AAAA,QAeIqlB,MAAM,GAAG,UAfb;AAAA,QAgBIC,OAAO,GAAG,sDAhBd;;AAiBA,aAASC,SAAT,CAAmBngB,GAAnB,EAAwB;AACpB,aAAOA,GAAP;AACH;;AACD,aAASogB,OAAT,CAAiBC,IAAjB,EAAuB;AACnB,aAAO,UAAUrgB,GAAV,EAAe;AAClB,eAAO,CAACA,GAAG,CAACiN,OAAJ,CAAY,CAAZ,CAAD,GAAkBoT,IAAzB;AACH,OAFD;AAGH;;AACD5lB,IAAAA,GAAG,CAACoC,EAAJ,CAAO,gBAAP,EAAyB,UAAUmD,GAAV,EAAe;AACpC,UAAIsgB,IAAI,GAAG1c,GAAG,CAAC5D,GAAD,CAAH,CAAS4M,KAAT,CAAesT,OAAf,CAAX;;AACA,UAAII,IAAJ,EAAU;AACN,YAAIC,IAAI,GAAG9lB,GAAG,CAACyC,EAAJ,EAAX;AAAA,YACIxC,IAAI,GAAG6lB,IAAI,CAACra,SAAL,CAAeqa,IAAI,CAACjM,WAAL,CAAiB,GAAjB,IAAwB,CAAvC,CADX;AAAA,YAEIxa,CAAC,GAAG,KAAKgM,IAAL,CAAUpL,IAAV,CAFR;AAAA,YAGI8lB,GAAG,GAAG,EAHV;AAIA/lB,QAAAA,GAAG,CAACR,IAAJ;AACA,YAAIomB,IAAI,GAAGC,IAAI,CAAC,CAAD,CAAJ,IAAW,EAAtB;AAAA,YACIG,KAAK,GAAG3mB,CAAC,CAAC8S,KAAF,CAAQqT,MAAR,CADZ;AAAA,YAEIS,EAAE,GAAGV,SAAS,CAACM,IAAI,CAAC,CAAD,CAAL,CAFlB;;AAGA,YAAIG,KAAK,IAAIA,KAAK,IAAIJ,IAAtB,EAA4B;AACxBrgB,UAAAA,GAAG,GAAG0gB,EAAE,CAAC5c,UAAU,CAAChK,CAAD,CAAX,EAAgB,CAACwmB,IAAI,CAAC,CAAD,CAArB,CAAR;AACH,SAFD,MAEO;AACHxmB,UAAAA,CAAC,GAAG,KAAKyf,IAAL,CAAU7e,IAAV,CAAJ;AACAsF,UAAAA,GAAG,GAAG0gB,EAAE,CAAC,KAAKnH,IAAL,CAAU7e,IAAV,CAAD,EAAkB,KAAK6e,IAAL,CAAU7e,IAAV,EAAgB4lB,IAAI,CAAC,CAAD,CAAJ,GAAUD,IAA1B,CAAlB,CAAR;AACH;;AACD,YAAIM,KAAK,CAAC7mB,CAAD,CAAL,IAAY6mB,KAAK,CAAC3gB,GAAD,CAArB,EAA4B;AACxB;AACH;;AACDwgB,QAAAA,GAAG,CAAC9lB,IAAD,CAAH,GAAYsF,GAAZ;AACA,aAAK8F,IAAL,CAAU0a,GAAV;AACH;AACJ,KAvBD,EAuBG,CAAC,EAvBJ;AAwBA/lB,IAAAA,GAAG,CAACoC,EAAJ,CAAO,iBAAP,EAA0B,UAAUnC,IAAV,EAAgBX,CAAhB,EAAmB;AACzC,UAAIyF,CAAJ;AAAA,UAAOC,CAAP;AAAA,UAAU3F,CAAC,GAAG8J,GAAG,CAAC,KAAKkC,IAAL,CAAUpL,IAAV,KAAmB,EAApB,CAAjB;AAAA,UACI4K,EAAE,GAAG,IADT;AAAA,UAEIsb,KAAK,GAAGhd,GAAG,CAAC7J,CAAD,CAAH,CAAO6S,KAAP,CAAasT,OAAb,CAFZ;;AAGA,UAAIU,KAAJ,EAAW;AACPnmB,QAAAA,GAAG,CAACR,IAAJ;AACA,YAAIomB,IAAI,GAAGO,KAAK,CAAC,CAAD,CAAL,IAAY,EAAvB;AAAA,YACIH,KAAK,GAAG3mB,CAAC,CAAC8S,KAAF,CAAQqT,MAAR,CADZ;AAAA,YAEIS,EAAE,GAAGV,SAAS,CAACY,KAAK,CAAC,CAAD,CAAN,CAFlB;;AAGA,YAAIH,KAAK,IAAIA,KAAK,IAAIJ,IAAtB,EAA4B;AACxB,iBAAO;AACHtF,YAAAA,IAAI,EAAEjX,UAAU,CAAChK,CAAD,CADb;AAEHkhB,YAAAA,EAAE,EAAE0F,EAAE,CAAC5c,UAAU,CAAChK,CAAD,CAAX,EAAgB,CAAC8mB,KAAK,CAAC,CAAD,CAAtB,CAFH;AAGHrlB,YAAAA,CAAC,EAAE6kB,OAAO,CAACK,KAAD;AAHP,WAAP;AAKH,SAND,MAMO;AACH3mB,UAAAA,CAAC,GAAG,KAAKyf,IAAL,CAAU7e,IAAV,CAAJ;AACA,iBAAO;AACHqgB,YAAAA,IAAI,EAAEjhB,CADH;AAEHkhB,YAAAA,EAAE,EAAE0F,EAAE,CAAC5mB,CAAD,EAAI,KAAKyf,IAAL,CAAU7e,IAAV,EAAgBkmB,KAAK,CAAC,CAAD,CAAL,GAAWP,IAA3B,CAAJ,CAFH;AAGH9kB,YAAAA,CAAC,EAAE4kB;AAHA,WAAP;AAKH;AACJ;AACJ,KAxBD,EAwBG,CAAC,EAxBJ;AAyBH,GA3ED,EAx+HyC,CAojIzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACArd,EAAAA,IAAI,CAACiU,MAAL,CAAY,UAAUjU,IAAV,EAAgBO,OAAhB,EAAyBG,KAAzB,EAAgClK,IAAhC,EAAsCma,QAAtC,EAAgD;AACxD,QAAIK,KAAK,GAAGtQ,KAAK,CAACvI,SAAlB;AAAA,QACImI,EAAE,GAAGN,IAAI,CAACM,EADd;AAEA;;;;;;;;;;;;;;;;;;;;;AAoBA0Q,IAAAA,KAAK,CAAC+M,IAAN,GAAa,UAAU5e,CAAV,EAAaG,CAAb,EAAgBY,CAAhB,EAAmBC,CAAnB,EAAsBqb,EAAtB,EAA0BC,EAA1B,EAA8B;AACvC,UAAIzY,IAAJ;;AACA,UAAIyY,EAAE,IAAI,IAAV,EAAgB;AACZA,QAAAA,EAAE,GAAGD,EAAL;AACH;;AACD,UAAIlb,EAAE,CAACnB,CAAD,EAAI,QAAJ,CAAF,IAAmBA,CAAC,IAAI,iBAA5B,EAA+C;AAC3C6D,QAAAA,IAAI,GAAG7D,CAAP;AACH,OAFD,MAEO,IAAIA,CAAC,IAAI,IAAT,EAAe;AAClB6D,QAAAA,IAAI,GAAG;AACH7D,UAAAA,CAAC,EAAEA,CADA;AAEHG,UAAAA,CAAC,EAAEA,CAFA;AAGHgH,UAAAA,KAAK,EAAEpG,CAHJ;AAIHqG,UAAAA,MAAM,EAAEpG;AAJL,SAAP;;AAMA,YAAIqb,EAAE,IAAI,IAAV,EAAgB;AACZxY,UAAAA,IAAI,CAACwY,EAAL,GAAUA,EAAV;AACAxY,UAAAA,IAAI,CAACyY,EAAL,GAAUA,EAAV;AACH;AACJ;;AACD,aAAO,KAAKjZ,EAAL,CAAQ,MAAR,EAAgBQ,IAAhB,CAAP;AACH,KApBD;AAqBA;;;;;;;;;;;;;;;;AAcAgO,IAAAA,KAAK,CAACgN,MAAN,GAAe,UAAUpG,EAAV,EAAcC,EAAd,EAAkB3O,CAAlB,EAAqB;AAChC,UAAIlG,IAAJ;;AACA,UAAI1C,EAAE,CAACsX,EAAD,EAAK,QAAL,CAAF,IAAoBA,EAAE,IAAI,iBAA9B,EAAiD;AAC7C5U,QAAAA,IAAI,GAAG4U,EAAP;AACH,OAFD,MAEO,IAAIA,EAAE,IAAI,IAAV,EAAgB;AACnB5U,QAAAA,IAAI,GAAG;AACH4U,UAAAA,EAAE,EAAEA,EADD;AAEHC,UAAAA,EAAE,EAAEA,EAFD;AAGH3O,UAAAA,CAAC,EAAEA;AAHA,SAAP;AAKH;;AACD,aAAO,KAAK1G,EAAL,CAAQ,QAAR,EAAkBQ,IAAlB,CAAP;AACH,KAZD;;AAcA,QAAIib,OAAO,GAAI,YAAY;AACvB,eAASC,OAAT,GAAmB;AACf,aAAKrQ,UAAL,CAAgBgB,WAAhB,CAA4B,IAA5B;AACH;;AACD,aAAO,UAAUsP,GAAV,EAAe1lB,CAAf,EAAkB;AACrB,YAAI2lB,GAAG,GAAG5nB,IAAI,CAACgK,GAAL,CAASgQ,aAAT,CAAuB,KAAvB,CAAV;AAAA,YACIU,IAAI,GAAG1a,IAAI,CAACgK,GAAL,CAAS0Q,IADpB;AAEAkN,QAAAA,GAAG,CAAC9T,KAAJ,CAAU+T,OAAV,GAAoB,4CAApB;;AACAD,QAAAA,GAAG,CAACE,MAAJ,GAAa,YAAY;AACrB7lB,UAAAA,CAAC,CAACJ,IAAF,CAAO+lB,GAAP;AACAA,UAAAA,GAAG,CAACE,MAAJ,GAAaF,GAAG,CAACF,OAAJ,GAAc,IAA3B;AACAhN,UAAAA,IAAI,CAACrC,WAAL,CAAiBuP,GAAjB;AACH,SAJD;;AAKAA,QAAAA,GAAG,CAACF,OAAJ,GAAcA,OAAd;AACAhN,QAAAA,IAAI,CAAC1C,WAAL,CAAiB4P,GAAjB;AACAA,QAAAA,GAAG,CAACD,GAAJ,GAAUA,GAAV;AACH,OAZD;AAaH,KAjBc,EAAf;AAmBA;;;;;;;;;;;;;;;;;;;;AAkBAnN,IAAAA,KAAK,CAACuN,KAAN,GAAc,UAAUJ,GAAV,EAAehf,CAAf,EAAkBG,CAAlB,EAAqBgH,KAArB,EAA4BC,MAA5B,EAAoC;AAC9C,UAAI/D,EAAE,GAAG,KAAKA,EAAL,CAAQ,OAAR,CAAT;;AACA,UAAIlC,EAAE,CAAC6d,GAAD,EAAM,QAAN,CAAF,IAAqB,SAASA,GAAlC,EAAuC;AACnC3b,QAAAA,EAAE,CAACQ,IAAH,CAAQmb,GAAR;AACH,OAFD,MAEO,IAAIA,GAAG,IAAI,IAAX,EAAiB;AACpB,YAAIhgB,GAAG,GAAG;AACN,wBAAcggB,GADR;AAENK,UAAAA,mBAAmB,EAAE;AAFf,SAAV;;AAIA,YAAIrf,CAAC,IAAI,IAAL,IAAaG,CAAC,IAAI,IAAtB,EAA4B;AACxBnB,UAAAA,GAAG,CAACgB,CAAJ,GAAQA,CAAR;AACAhB,UAAAA,GAAG,CAACmB,CAAJ,GAAQA,CAAR;AACH;;AACD,YAAIgH,KAAK,IAAI,IAAT,IAAiBC,MAAM,IAAI,IAA/B,EAAqC;AACjCpI,UAAAA,GAAG,CAACmI,KAAJ,GAAYA,KAAZ;AACAnI,UAAAA,GAAG,CAACoI,MAAJ,GAAaA,MAAb;AACH,SAHD,MAGO;AACH0X,UAAAA,OAAO,CAACE,GAAD,EAAM,YAAY;AACrBne,YAAAA,IAAI,CAACW,CAAL,CAAOoC,CAAP,CAASP,EAAE,CAAC6E,IAAZ,EAAkB;AACdf,cAAAA,KAAK,EAAE,KAAKmY,WADE;AAEdlY,cAAAA,MAAM,EAAE,KAAKmY;AAFC,aAAlB;AAIH,WALM,CAAP;AAMH;;AACD1e,QAAAA,IAAI,CAACW,CAAL,CAAOoC,CAAP,CAASP,EAAE,CAAC6E,IAAZ,EAAkBlJ,GAAlB;AACH;;AACD,aAAOqE,EAAP;AACH,KA3BD;AA4BA;;;;;;;;;;;;;;;;;AAeAwO,IAAAA,KAAK,CAAC2N,OAAN,GAAgB,UAAU/G,EAAV,EAAcC,EAAd,EAAkB2D,EAAlB,EAAsBC,EAAtB,EAA0B;AACtC,UAAIzY,IAAJ;;AACA,UAAI1C,EAAE,CAACsX,EAAD,EAAK,QAAL,CAAF,IAAoBA,EAAE,IAAI,iBAA9B,EAAiD;AAC7C5U,QAAAA,IAAI,GAAG4U,EAAP;AACH,OAFD,MAEO,IAAIA,EAAE,IAAI,IAAV,EAAgB;AACnB5U,QAAAA,IAAI,GAAE;AACF4U,UAAAA,EAAE,EAAEA,EADF;AAEFC,UAAAA,EAAE,EAAEA,EAFF;AAGF2D,UAAAA,EAAE,EAAEA,EAHF;AAIFC,UAAAA,EAAE,EAAEA;AAJF,SAAN;AAMH;;AACD,aAAO,KAAKjZ,EAAL,CAAQ,SAAR,EAAmBQ,IAAnB,CAAP;AACH,KAbD,CAxJwD,CAsKxD;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BAgO,IAAAA,KAAK,CAAChK,IAAN,GAAa,UAAUyS,CAAV,EAAa;AACtB,UAAIzW,IAAJ;;AACA,UAAI1C,EAAE,CAACmZ,CAAD,EAAI,QAAJ,CAAF,IAAmB,CAACnZ,EAAE,CAACmZ,CAAD,EAAI,OAAJ,CAA1B,EAAwC;AACpCzW,QAAAA,IAAI,GAAGyW,CAAP;AACH,OAFD,MAEO,IAAIA,CAAJ,EAAO;AACVzW,QAAAA,IAAI,GAAG;AAACyW,UAAAA,CAAC,EAAEA;AAAJ,SAAP;AACH;;AACD,aAAO,KAAKjX,EAAL,CAAQ,MAAR,EAAgBQ,IAAhB,CAAP;AACH,KARD;AASA;;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;;;AAMAgO,IAAAA,KAAK,CAAC4N,KAAN,GAAc5N,KAAK,CAAC7H,CAAN,GAAU,UAAUgN,KAAV,EAAiB;AACrC,UAAInT,IAAJ;AAAA,UACIR,EAAE,GAAG,KAAKA,EAAL,CAAQ,GAAR,CADT;;AAEA,UAAIlK,SAAS,CAACb,MAAV,IAAoB,CAApB,IAAyB0e,KAAzB,IAAkC,CAACA,KAAK,CAAC1T,IAA7C,EAAmD;AAC/CD,QAAAA,EAAE,CAACQ,IAAH,CAAQmT,KAAR;AACH,OAFD,MAEO,IAAI7d,SAAS,CAACb,MAAd,EAAsB;AACzB+K,QAAAA,EAAE,CAAC6K,GAAH,CAAOnV,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAAP;AACH;;AACD,aAAOkK,EAAP;AACH,KATD;AAUA;;;;;;;;;;;;;;;;;;;AAiBAwO,IAAAA,KAAK,CAAC3C,GAAN,GAAY,UAAUlP,CAAV,EAAaG,CAAb,EAAgBgH,KAAhB,EAAuBC,MAAvB,EAA+BsY,GAA/B,EAAoCC,GAApC,EAAyCC,GAAzC,EAA8CC,GAA9C,EAAmD;AAC3D,UAAI7kB,KAAK,GAAG,EAAZ;;AACA,UAAImG,EAAE,CAACnB,CAAD,EAAI,QAAJ,CAAF,IAAmBG,CAAC,IAAI,IAA5B,EAAkC;AAC9BnF,QAAAA,KAAK,GAAGgF,CAAR;AACH,OAFD,MAEO;AACH,YAAIA,CAAC,IAAI,IAAT,EAAe;AACXhF,UAAAA,KAAK,CAACgF,CAAN,GAAUA,CAAV;AACH;;AACD,YAAIG,CAAC,IAAI,IAAT,EAAe;AACXnF,UAAAA,KAAK,CAACmF,CAAN,GAAUA,CAAV;AACH;;AACD,YAAIgH,KAAK,IAAI,IAAb,EAAmB;AACfnM,UAAAA,KAAK,CAACmM,KAAN,GAAcA,KAAd;AACH;;AACD,YAAIC,MAAM,IAAI,IAAd,EAAoB;AAChBpM,UAAAA,KAAK,CAACoM,MAAN,GAAeA,MAAf;AACH;;AACD,YAAIsY,GAAG,IAAI,IAAP,IAAeC,GAAG,IAAI,IAAtB,IAA8BC,GAAG,IAAI,IAArC,IAA6CC,GAAG,IAAI,IAAxD,EAA8D;AAC1D7kB,UAAAA,KAAK,CAACqd,OAAN,GAAgB,CAACqH,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgBC,GAAhB,CAAhB;AACH;AACJ;;AACD,aAAO,KAAKxc,EAAL,CAAQ,KAAR,EAAerI,KAAf,CAAP;AACH,KAtBD;AAuBA;;;;;;;;;;;AASA6W,IAAAA,KAAK,CAAClB,IAAN,GAAa,UAAUqG,KAAV,EAAiB;AAC1B,UAAInT,IAAJ;AAAA,UACIR,EAAE,GAAG,KAAKA,EAAL,CAAQ,MAAR,CADT;;AAEA,UAAIlK,SAAS,CAACb,MAAV,IAAoB,CAApB,IAAyB0e,KAAzB,IAAkC,CAACA,KAAK,CAAC1T,IAA7C,EAAmD;AAC/CD,QAAAA,EAAE,CAACQ,IAAH,CAAQmT,KAAR;AACH,OAFD,MAEO,IAAI7d,SAAS,CAACb,MAAd,EAAsB;AACzB+K,QAAAA,EAAE,CAAC6K,GAAH,CAAOnV,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAAP;AACH;;AACD,aAAOkK,EAAP;AACH,KATD;AAUA;;;;;;;;;;;;;;;;;;;AAiBAwO,IAAAA,KAAK,CAACiO,IAAN,GAAa,UAAU9f,CAAV,EAAaG,CAAb,EAAgBgH,KAAhB,EAAuBC,MAAvB,EAA+B2Y,EAA/B,EAAmCC,EAAnC,EAAuCC,EAAvC,EAA2CC,EAA3C,EAA+C;AACxD,UAAI/e,EAAE,CAACnB,CAAD,EAAI,QAAJ,CAAN,EAAqB;AACjB,YAAI6D,IAAI,GAAG7D,CAAX;AACH,OAFD,MAEO;AACH6D,QAAAA,IAAI,GAAG;AAACuU,UAAAA,YAAY,EAAE;AAAf,SAAP;;AACA,YAAIpY,CAAJ,EAAO;AACH6D,UAAAA,IAAI,CAAC7D,CAAL,GAASA,CAAT;AACH;;AACD,YAAIG,CAAJ,EAAO;AACH0D,UAAAA,IAAI,CAAC1D,CAAL,GAASA,CAAT;AACH;;AACD,YAAIgH,KAAK,IAAI,IAAb,EAAmB;AACftD,UAAAA,IAAI,CAACsD,KAAL,GAAaA,KAAb;AACH;;AACD,YAAIC,MAAM,IAAI,IAAd,EAAoB;AAChBvD,UAAAA,IAAI,CAACuD,MAAL,GAAcA,MAAd;AACH;;AACD,YAAI2Y,EAAE,IAAI,IAAN,IAAcC,EAAE,IAAI,IAApB,IAA4BC,EAAE,IAAI,IAAlC,IAA0CC,EAAE,IAAI,IAApD,EAA0D;AACtDrc,UAAAA,IAAI,CAACwU,OAAL,GAAe,CAAC0H,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,CAAf;AACH,SAFD,MAEO;AACHrc,UAAAA,IAAI,CAACwU,OAAL,GAAe,CAACrY,CAAC,IAAI,CAAN,EAASG,CAAC,IAAI,CAAd,EAAiBgH,KAAK,IAAI,CAA1B,EAA6BC,MAAM,IAAI,CAAvC,CAAf;AACH;AACJ;;AACD,aAAO,KAAK/D,EAAL,CAAQ,SAAR,EAAmBQ,IAAnB,CAAP;AACH,KAxBD;AAyBA;;;;;;;;;;;;;;AAYAgO,IAAAA,KAAK,CAAC0F,GAAN,GAAY,UAAUhZ,EAAV,EAAc;AACtB,UAAIA,EAAE,IAAI,IAAV,EAAgB;AACZ,YAAIA,EAAE,YAAY6C,OAAlB,EAA2B;AACvB,cAAI,CAAC7C,EAAE,CAACsF,IAAH,CAAQ,IAAR,CAAL,EAAoB;AAChBtF,YAAAA,EAAE,CAACsF,IAAH,CAAQ;AAACtF,cAAAA,EAAE,EAAEsC,IAAI,CAACW,CAAL,CAAOjD,EAAP,CAAUA,EAAV;AAAL,aAAR;AACH;;AACDA,UAAAA,EAAE,GAAGA,EAAE,CAACsF,IAAH,CAAQ,IAAR,CAAL;AACH;;AACD,YAAIlL,MAAM,CAAC4F,EAAD,CAAN,CAAW6L,MAAX,MAAuB,GAA3B,EAAgC;AAC5B7L,UAAAA,EAAE,GAAGA,EAAE,CAAC0F,SAAH,CAAa,CAAb,CAAL;AACH;;AACD,eAAO,KAAKZ,EAAL,CAAQ,KAAR,EAAe;AAAC,wBAAc,MAAM9E;AAArB,SAAf,CAAP;AACH,OAXD,MAWO;AACH,eAAO6C,OAAO,CAACpI,SAAR,CAAkBue,GAAlB,CAAsBre,IAAtB,CAA2B,IAA3B,CAAP;AACH;AACJ,KAfD;AAgBA;;;;;;;;;;;;;;AAYA2Y,IAAAA,KAAK,CAAChB,MAAN,GAAe,UAAUkP,EAAV,EAAcC,EAAd,EAAkBC,EAAlB,EAAsBC,EAAtB,EAA0B;AACrC,UAAIrc,IAAI,GAAG,EAAX;;AACA,UAAIkc,EAAE,IAAI,IAAN,IAAcC,EAAE,IAAI,IAApB,IAA4BC,EAAE,IAAI,IAAlC,IAA0CC,EAAE,IAAI,IAApD,EAA0D;AACtDrc,QAAAA,IAAI,CAACwU,OAAL,GAAe,CAAC0H,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,CAAf;AACH;;AAED,aAAO,KAAK7c,EAAL,CAAQ,QAAR,EAAkBQ,IAAlB,CAAP;AACH,KAPD;AAQA;;;;;;;;;;;;;;;;;;;;;;AAoBAgO,IAAAA,KAAK,CAAC9N,IAAN,GAAa,UAAU/D,CAAV,EAAaG,CAAb,EAAgB4D,IAAhB,EAAsB;AAC/B,UAAIF,IAAI,GAAG,EAAX;;AACA,UAAI1C,EAAE,CAACnB,CAAD,EAAI,QAAJ,CAAN,EAAqB;AACjB6D,QAAAA,IAAI,GAAG7D,CAAP;AACH,OAFD,MAEO,IAAIA,CAAC,IAAI,IAAT,EAAe;AAClB6D,QAAAA,IAAI,GAAG;AACH7D,UAAAA,CAAC,EAAEA,CADA;AAEHG,UAAAA,CAAC,EAAEA,CAFA;AAGH4D,UAAAA,IAAI,EAAEA,IAAI,IAAI;AAHX,SAAP;AAKH;;AACD,aAAO,KAAKV,EAAL,CAAQ,MAAR,EAAgBQ,IAAhB,CAAP;AACH,KAZD;AAaA;;;;;;;;;;;;;;;;;AAeAgO,IAAAA,KAAK,CAACsO,IAAN,GAAa,UAAU3Z,EAAV,EAAcC,EAAd,EAAkBC,EAAlB,EAAsBC,EAAtB,EAA0B;AACnC,UAAI9C,IAAI,GAAG,EAAX;;AACA,UAAI1C,EAAE,CAACqF,EAAD,EAAK,QAAL,CAAN,EAAsB;AAClB3C,QAAAA,IAAI,GAAG2C,EAAP;AACH,OAFD,MAEO,IAAIA,EAAE,IAAI,IAAV,EAAgB;AACnB3C,QAAAA,IAAI,GAAG;AACH2C,UAAAA,EAAE,EAAEA,EADD;AAEHE,UAAAA,EAAE,EAAEA,EAFD;AAGHD,UAAAA,EAAE,EAAEA,EAHD;AAIHE,UAAAA,EAAE,EAAEA;AAJD,SAAP;AAMH;;AACD,aAAO,KAAKtD,EAAL,CAAQ,MAAR,EAAgBQ,IAAhB,CAAP;AACH,KAbD;AAcA;;;;;;;;;;;;;;;;;AAeAgO,IAAAA,KAAK,CAACuO,QAAN,GAAiB,UAAUC,MAAV,EAAkB;AAC/B,UAAIlnB,SAAS,CAACb,MAAV,GAAmB,CAAvB,EAA0B;AACtB+nB,QAAAA,MAAM,GAAGtnB,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAAT;AACH;;AACD,UAAI0K,IAAI,GAAG,EAAX;;AACA,UAAI1C,EAAE,CAACkf,MAAD,EAAS,QAAT,CAAF,IAAwB,CAAClf,EAAE,CAACkf,MAAD,EAAS,OAAT,CAA/B,EAAkD;AAC9Cxc,QAAAA,IAAI,GAAGwc,MAAP;AACH,OAFD,MAEO,IAAIA,MAAM,IAAI,IAAd,EAAoB;AACvBxc,QAAAA,IAAI,GAAG;AAACwc,UAAAA,MAAM,EAAEA;AAAT,SAAP;AACH;;AACD,aAAO,KAAKhd,EAAL,CAAQ,UAAR,EAAoBQ,IAApB,CAAP;AACH,KAXD;AAYA;;;;;;;;AAMAgO,IAAAA,KAAK,CAACyO,OAAN,GAAgB,UAAUD,MAAV,EAAkB;AAC9B,UAAIlnB,SAAS,CAACb,MAAV,GAAmB,CAAvB,EAA0B;AACtB+nB,QAAAA,MAAM,GAAGtnB,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAAT;AACH;;AACD,UAAI0K,IAAI,GAAG,EAAX;;AACA,UAAI1C,EAAE,CAACkf,MAAD,EAAS,QAAT,CAAF,IAAwB,CAAClf,EAAE,CAACkf,MAAD,EAAS,OAAT,CAA/B,EAAkD;AAC9Cxc,QAAAA,IAAI,GAAGwc,MAAP;AACH,OAFD,MAEO,IAAIA,MAAM,IAAI,IAAd,EAAoB;AACvBxc,QAAAA,IAAI,GAAG;AAACwc,UAAAA,MAAM,EAAEA;AAAT,SAAP;AACH;;AACD,aAAO,KAAKhd,EAAL,CAAQ,SAAR,EAAmBQ,IAAnB,CAAP;AACH,KAXD,CArewD,CAifxD;;;AACC,iBAAY;AACT,UAAID,CAAC,GAAG/C,IAAI,CAACW,CAAL,CAAOoC,CAAf,CADS,CAET;;AACA,eAAS2c,MAAT,GAAkB;AACd,eAAO,KAAK3Q,SAAL,CAAe,MAAf,CAAP;AACH;;AACD,eAAS4Q,QAAT,CAAkBvV,KAAlB,EAAyByP,MAAzB,EAAiC;AAC7B,YAAI1iB,IAAI,GAAG4L,CAAC,CAAC,MAAD,CAAZ;AAAA,YACIC,IAAI,GAAG;AACH6W,UAAAA,MAAM,EAAE,CAACA,MAAD,GAAU;AADf,SADX;AAIAzP,QAAAA,KAAK,GAAGpK,IAAI,CAACoK,KAAL,CAAWA,KAAX,CAAR;AACApH,QAAAA,IAAI,CAAC,YAAD,CAAJ,GAAqBoH,KAAK,CAAChB,GAA3B;;AACA,YAAIgB,KAAK,CAACR,OAAN,GAAgB,CAApB,EAAuB;AACnB5G,UAAAA,IAAI,CAAC,cAAD,CAAJ,GAAuBoH,KAAK,CAACR,OAA7B;AACH;;AACD7G,QAAAA,CAAC,CAAC5L,IAAD,EAAO6L,IAAP,CAAD;AACA,aAAKqE,IAAL,CAAUmH,WAAV,CAAsBrX,IAAtB;AACA,eAAO,IAAP;AACH;;AACD,eAASyoB,QAAT,GAAoB;AAChB,YAAI,KAAKnd,IAAL,IAAa,gBAAjB,EAAmC;AAC/B,cAAIkD,EAAE,GAAG5C,CAAC,CAAC,KAAKsE,IAAN,EAAY,IAAZ,CAAD,IAAsB,CAA/B;AAAA,cACIxB,EAAE,GAAG9C,CAAC,CAAC,KAAKsE,IAAN,EAAY,IAAZ,CAAD,IAAsB,CAD/B;AAAA,cAEIzB,EAAE,GAAG7C,CAAC,CAAC,KAAKsE,IAAN,EAAY,IAAZ,CAAD,IAAsB,CAF/B;AAAA,cAGIvB,EAAE,GAAG/C,CAAC,CAAC,KAAKsE,IAAN,EAAY,IAAZ,CAAD,IAAsB,CAH/B;AAIA,iBAAOrH,IAAI,CAACW,CAAL,CAAOiS,GAAP,CAAWjN,EAAX,EAAeC,EAAf,EAAmBzE,IAAI,CAAC9B,GAAL,CAASwG,EAAE,GAAGF,EAAd,CAAnB,EAAsCxE,IAAI,CAAC9B,GAAL,CAASyG,EAAE,GAAGF,EAAd,CAAtC,CAAP;AACH,SAND,MAMO;AACH,cAAIgS,EAAE,GAAG,KAAKvQ,IAAL,CAAUuQ,EAAV,IAAgB,EAAzB;AAAA,cACIC,EAAE,GAAG,KAAKxQ,IAAL,CAAUwQ,EAAV,IAAgB,EADzB;AAAA,cAEI3O,CAAC,GAAG,KAAK7B,IAAL,CAAU6B,CAAV,IAAe,CAFvB;AAGA,iBAAOlJ,IAAI,CAACW,CAAL,CAAOiS,GAAP,CAAWgF,EAAE,GAAG1O,CAAhB,EAAmB2O,EAAE,GAAG3O,CAAxB,EAA2BA,CAAC,GAAG,CAA/B,EAAkCA,CAAC,GAAG,CAAtC,CAAP;AACH;AACJ;;AACD,eAAS4R,QAAT,CAAkB5M,IAAlB,EAAwBrJ,GAAxB,EAA6B;AACzB,YAAIgW,IAAI,GAAGljB,GAAG,CAAC,sBAAD,EAAyB,IAAzB,EAA+BkN,GAA/B,CAAH,CAAuCvN,YAAvC,EAAX;AAAA,YACIkL,EADJ;;AAEA,YAAI,CAACqY,IAAL,EAAW;AACP,iBAAO,IAAP;AACH;;AACDA,QAAAA,IAAI,CAAC1O,MAAL,CAAY0T,OAAZ,CAAoB3R,IAApB;;AACA,YAAI2M,IAAI,CAACpY,IAAL,CAAUwB,WAAV,MAA2B,GAA/B,EAAoC;AAChCzB,UAAAA,EAAE,GAAGsd,cAAc,CAAC3mB,KAAf,CAAqB,CAArB,EAAwB0hB,IAAI,CAAC1O,MAA7B,CAAL;AACH,SAFD,MAEO;AACH3J,UAAAA,EAAE,GAAGud,cAAc,CAAC5mB,KAAf,CAAqB,CAArB,EAAwB0hB,IAAI,CAAC1O,MAA7B,CAAL;AACH;;AACD,YAAI0O,IAAI,CAACpY,IAAL,IAAaoY,IAAI,CAACpY,IAAL,CAAUwB,WAAV,EAAjB,EAA0C;AACtClB,UAAAA,CAAC,CAACP,EAAE,CAAC6E,IAAJ,EAAU;AACP2Y,YAAAA,aAAa,EAAE;AADR,WAAV,CAAD;AAGH;;AACD,YAAI9E,KAAK,GAAGL,IAAI,CAACK,KAAjB;AAAA,YACI7c,GAAG,GAAG6c,KAAK,CAACzjB,MADhB;AAAA,YAEIuG,KAAK,GAAG,CAFZ;AAAA,YAGItE,CAAC,GAAG,CAHR;;AAIA,iBAASumB,IAAT,CAAc1oB,CAAd,EAAiB0G,GAAjB,EAAsB;AAClB,cAAIiiB,IAAI,GAAG,CAACjiB,GAAG,GAAGD,KAAP,KAAiBzG,CAAC,GAAGmC,CAArB,CAAX;;AACA,eAAK,IAAID,CAAC,GAAGC,CAAb,EAAgBD,CAAC,GAAGlC,CAApB,EAAuBkC,CAAC,EAAxB,EAA4B;AACxByhB,YAAAA,KAAK,CAACzhB,CAAD,CAAL,CAASogB,MAAT,GAAkB,CAAC,CAAC,CAAC7b,KAAD,GAASkiB,IAAI,IAAIzmB,CAAC,GAAGC,CAAR,CAAd,EAA0ByQ,OAA1B,CAAkC,CAAlC,CAAnB;AACH;;AACDzQ,UAAAA,CAAC,GAAGnC,CAAJ;AACAyG,UAAAA,KAAK,GAAGC,GAAR;AACH;;AACDI,QAAAA,GAAG;;AACH,aAAK,IAAI9G,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8G,GAApB,EAAyB9G,CAAC,EAA1B,EAA8B,IAAI,YAAY2jB,KAAK,CAAC3jB,CAAD,CAArB,EAA0B;AACpD0oB,UAAAA,IAAI,CAAC1oB,CAAD,EAAI2jB,KAAK,CAAC3jB,CAAD,CAAL,CAASsiB,MAAb,CAAJ;AACH;;AACDqB,QAAAA,KAAK,CAAC7c,GAAD,CAAL,CAAWwb,MAAX,GAAoBqB,KAAK,CAAC7c,GAAD,CAAL,CAAWwb,MAAX,IAAqB,GAAzC;AACAoG,QAAAA,IAAI,CAAC5hB,GAAD,EAAM6c,KAAK,CAAC7c,GAAD,CAAL,CAAWwb,MAAjB,CAAJ;;AACA,aAAKtiB,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAI8G,GAAjB,EAAsB9G,CAAC,EAAvB,EAA2B;AACvB,cAAIJ,IAAI,GAAG+jB,KAAK,CAAC3jB,CAAD,CAAhB;AACAiL,UAAAA,EAAE,CAAC2d,OAAH,CAAWhpB,IAAI,CAACiT,KAAhB,EAAuBjT,IAAI,CAAC0iB,MAA5B;AACH;;AACD,eAAOrX,EAAP;AACH;;AACD,eAASsd,cAAT,CAAwB5R,IAAxB,EAA8BvI,EAA9B,EAAkCC,EAAlC,EAAsCC,EAAtC,EAA0CC,EAA1C,EAA8C;AAC1C,YAAItD,EAAE,GAAGxC,IAAI,CAACW,CAAL,CAAOwN,IAAP,CAAY,gBAAZ,EAA8BD,IAA9B,CAAT;;AACA1L,QAAAA,EAAE,CAAC0Y,KAAH,GAAWwE,MAAX;AACAld,QAAAA,EAAE,CAAC2d,OAAH,GAAaR,QAAb;AACAnd,QAAAA,EAAE,CAACkM,OAAH,GAAakR,QAAb;;AACA,YAAIja,EAAE,IAAI,IAAV,EAAgB;AACZ5C,UAAAA,CAAC,CAACP,EAAE,CAAC6E,IAAJ,EAAU;AACP1B,YAAAA,EAAE,EAAEA,EADG;AAEPC,YAAAA,EAAE,EAAEA,EAFG;AAGPC,YAAAA,EAAE,EAAEA,EAHG;AAIPC,YAAAA,EAAE,EAAEA;AAJG,WAAV,CAAD;AAMH;;AACD,eAAOtD,EAAP;AACH;;AACD,eAASud,cAAT,CAAwB7R,IAAxB,EAA8B0J,EAA9B,EAAkCC,EAAlC,EAAsC3O,CAAtC,EAAyCkX,EAAzC,EAA6CC,EAA7C,EAAiD;AAC7C,YAAI7d,EAAE,GAAGxC,IAAI,CAACW,CAAL,CAAOwN,IAAP,CAAY,gBAAZ,EAA8BD,IAA9B,CAAT;;AACA1L,QAAAA,EAAE,CAAC0Y,KAAH,GAAWwE,MAAX;AACAld,QAAAA,EAAE,CAAC2d,OAAH,GAAaR,QAAb;AACAnd,QAAAA,EAAE,CAACkM,OAAH,GAAakR,QAAb;;AACA,YAAIhI,EAAE,IAAI,IAAV,EAAgB;AACZ7U,UAAAA,CAAC,CAACP,EAAE,CAAC6E,IAAJ,EAAU;AACPuQ,YAAAA,EAAE,EAAEA,EADG;AAEPC,YAAAA,EAAE,EAAEA,EAFG;AAGP3O,YAAAA,CAAC,EAAEA;AAHI,WAAV,CAAD;AAKH;;AACD,YAAIkX,EAAE,IAAI,IAAN,IAAcC,EAAE,IAAI,IAAxB,EAA8B;AAC1Btd,UAAAA,CAAC,CAACP,EAAE,CAAC6E,IAAJ,EAAU;AACP+Y,YAAAA,EAAE,EAAEA,EADG;AAEPC,YAAAA,EAAE,EAAEA;AAFG,WAAV,CAAD;AAIH;;AACD,eAAO7d,EAAP;AACH;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCAwO,MAAAA,KAAK,CAAC8J,QAAN,GAAiB,UAAUjW,GAAV,EAAe;AAC5B,eAAOiW,QAAQ,CAAC,KAAK5M,IAAN,EAAYrJ,GAAZ,CAAf;AACH,OAFD;;AAGAmM,MAAAA,KAAK,CAAC8O,cAAN,GAAuB,UAAUna,EAAV,EAAcC,EAAd,EAAkBC,EAAlB,EAAsBC,EAAtB,EAA0B;AAC7C,eAAOga,cAAc,CAAC,KAAK5R,IAAN,EAAYvI,EAAZ,EAAgBC,EAAhB,EAAoBC,EAApB,EAAwBC,EAAxB,CAArB;AACH,OAFD;;AAGAkL,MAAAA,KAAK,CAAC+O,cAAN,GAAuB,UAAUnI,EAAV,EAAcC,EAAd,EAAkB3O,CAAlB,EAAqBkX,EAArB,EAAyBC,EAAzB,EAA6B;AAChD,eAAON,cAAc,CAAC,KAAK7R,IAAN,EAAY0J,EAAZ,EAAgBC,EAAhB,EAAoB3O,CAApB,EAAuBkX,EAAvB,EAA2BC,EAA3B,CAArB;AACH,OAFD;AAGA;;;;;;;;;AAOArP,MAAAA,KAAK,CAAC/V,QAAN,GAAiB,YAAY;AACzB,YAAIuF,GAAG,GAAG,KAAK6G,IAAL,CAAU4J,aAApB;AAAA,YACIxY,CAAC,GAAG+H,GAAG,CAAC6P,sBAAJ,EADR;AAAA,YAEIoJ,CAAC,GAAGjZ,GAAG,CAACgQ,aAAJ,CAAkB,KAAlB,CAFR;AAAA,YAGInC,GAAG,GAAG,KAAKhH,IAAL,CAAU+P,SAAV,CAAoB,IAApB,CAHV;AAAA,YAIIxa,GAJJ;AAKAnE,QAAAA,CAAC,CAAC+V,WAAF,CAAciL,CAAd;AACAA,QAAAA,CAAC,CAACjL,WAAF,CAAcH,GAAd;;AACArO,QAAAA,IAAI,CAACW,CAAL,CAAOoC,CAAP,CAASsL,GAAT,EAAc;AAAC1L,UAAAA,KAAK,EAAE;AAAR,SAAd;;AACA/F,QAAAA,GAAG,GAAG6c,CAAC,CAAChJ,SAAR;AACAhY,QAAAA,CAAC,CAACoW,WAAF,CAAcpW,CAAC,CAACiY,UAAhB;AACA,eAAO9T,GAAP;AACH,OAZD;AAaA;;;;;;;;;AAOAoU,MAAAA,KAAK,CAACqI,SAAN,GAAkB,YAAY;AAC1B,YAAI7d,MAAM,IAAIA,MAAM,CAAC8d,IAArB,EAA2B;AACvB,iBAAO,+BAA+BA,IAAI,CAACE,QAAQ,CAACtH,kBAAkB,CAAC,IAAD,CAAnB,CAAT,CAA1C;AACH;AACJ,OAJD;AAKA;;;;;;;;AAMAlB,MAAAA,KAAK,CAACsP,KAAN,GAAc,YAAY;AACtB,YAAIjZ,IAAI,GAAG,KAAKA,IAAL,CAAUqJ,UAArB;AAAA,YACI6P,IADJ;;AAEA,eAAOlZ,IAAP,EAAa;AACTkZ,UAAAA,IAAI,GAAGlZ,IAAI,CAACiP,WAAZ;;AACA,cAAIjP,IAAI,CAACqI,OAAL,IAAgB,MAApB,EAA4B;AACxBrI,YAAAA,IAAI,CAACwG,UAAL,CAAgBgB,WAAhB,CAA4BxH,IAA5B;AACH,WAFD,MAEO;AACH2J,YAAAA,KAAK,CAACsP,KAAN,CAAYjoB,IAAZ,CAAiB;AAACgP,cAAAA,IAAI,EAAEA;AAAP,aAAjB;AACH;;AACDA,UAAAA,IAAI,GAAGkZ,IAAP;AACH;AACJ,OAZD;AAaH,KA/MA,GAAD;AAgNH,GAlsBD,EAjkIyC,CAqwJzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAvgB,EAAAA,IAAI,CAACiU,MAAL,CAAY,UAAUjU,IAAV,EAAgBO,OAAhB,EAAyBG,KAAzB,EAAgClK,IAAhC,EAAsC;AAC9C,QAAI0d,OAAO,GAAG3T,OAAO,CAACpI,SAAtB;AAAA,QACImI,EAAE,GAAGN,IAAI,CAACM,EADd;AAAA,QAEIwE,KAAK,GAAG9E,IAAI,CAACW,CAAL,CAAOmE,KAFnB;AAAA,QAGIpO,GAAG,GAAG,gBAHV;AAAA,QAII8pB,GAAG,GAAG,eAJV;AAAA,QAKIzf,OAAO,GAAGC,UALd;AAAA,QAMIG,IAAI,GAAGvC,IANX;AAAA,QAOIiB,EAAE,GAAGsB,IAAI,CAACtB,EAPd;AAAA,QAQIyB,IAAI,GAAGH,IAAI,CAACI,GARhB;AAAA,QASIH,IAAI,GAAGD,IAAI,CAACE,GAThB;AAAA,QAUIxC,GAAG,GAAGsC,IAAI,CAACtC,GAVf;AAAA,QAWIQ,GAAG,GAAG8B,IAAI,CAAC9B,GAXf;;AAYA,aAASohB,KAAT,CAAeC,EAAf,EAAmB;AACf,UAAI3gB,CAAC,GAAG0gB,KAAK,CAACC,EAAN,GAAWD,KAAK,CAACC,EAAN,IAAY,EAA/B;;AACA,UAAI3gB,CAAC,CAAC2gB,EAAD,CAAL,EAAW;AACP3gB,QAAAA,CAAC,CAAC2gB,EAAD,CAAD,CAAMC,KAAN,GAAc,GAAd;AACH,OAFD,MAEO;AACH5gB,QAAAA,CAAC,CAAC2gB,EAAD,CAAD,GAAQ;AACJC,UAAAA,KAAK,EAAE;AADH,SAAR;AAGH;;AACDzkB,MAAAA,UAAU,CAAC,YAAY;AACnB,aAAK,IAAIvB,GAAT,IAAgBoF,CAAhB,EAAmB,IAAIA,CAAC,CAACrJ,GAAD,CAAD,CAAOiE,GAAP,KAAeA,GAAG,IAAI+lB,EAA1B,EAA8B;AAC7C3gB,UAAAA,CAAC,CAACpF,GAAD,CAAD,CAAOgmB,KAAP;AACA,WAAC5gB,CAAC,CAACpF,GAAD,CAAD,CAAOgmB,KAAR,IAAiB,OAAO5gB,CAAC,CAACpF,GAAD,CAAzB;AACH;AACJ,OALS,CAAV;AAMA,aAAOoF,CAAC,CAAC2gB,EAAD,CAAR;AACH;;AACD,aAAS9N,GAAT,CAAazT,CAAb,EAAgBG,CAAhB,EAAmBgH,KAAnB,EAA0BC,MAA1B,EAAkC;AAC9B,UAAIpH,CAAC,IAAI,IAAT,EAAe;AACXA,QAAAA,CAAC,GAAGG,CAAC,GAAGgH,KAAK,GAAGC,MAAM,GAAG,CAAzB;AACH;;AACD,UAAIjH,CAAC,IAAI,IAAT,EAAe;AACXA,QAAAA,CAAC,GAAGH,CAAC,CAACG,CAAN;AACAgH,QAAAA,KAAK,GAAGnH,CAAC,CAACmH,KAAV;AACAC,QAAAA,MAAM,GAAGpH,CAAC,CAACoH,MAAX;AACApH,QAAAA,CAAC,GAAGA,CAAC,CAACA,CAAN;AACH;;AACD,aAAO;AACHA,QAAAA,CAAC,EAAEA,CADA;AAEHG,QAAAA,CAAC,EAAEA,CAFA;AAGHgH,QAAAA,KAAK,EAAEA,KAHJ;AAIHpG,QAAAA,CAAC,EAAEoG,KAJA;AAKHC,QAAAA,MAAM,EAAEA,MALL;AAMHpG,QAAAA,CAAC,EAAEoG,MANA;AAOHV,QAAAA,EAAE,EAAE1G,CAAC,GAAGmH,KAPL;AAQHR,QAAAA,EAAE,EAAExG,CAAC,GAAGiH,MARL;AASHqR,QAAAA,EAAE,EAAEzY,CAAC,GAAGmH,KAAK,GAAG,CATb;AAUHuR,QAAAA,EAAE,EAAEvY,CAAC,GAAGiH,MAAM,GAAG,CAVd;AAWHqa,QAAAA,EAAE,EAAEzf,IAAI,CAACI,GAAL,CAAS+E,KAAT,EAAgBC,MAAhB,IAA0B,CAX3B;AAYHsa,QAAAA,EAAE,EAAE1f,IAAI,CAACE,GAAL,CAASiF,KAAT,EAAgBC,MAAhB,IAA0B,CAZ3B;AAaHua,QAAAA,EAAE,EAAE3f,IAAI,CAACjC,IAAL,CAAUoH,KAAK,GAAGA,KAAR,GAAgBC,MAAM,GAAGA,MAAnC,IAA6C,CAb9C;AAcHS,QAAAA,IAAI,EAAE+Z,QAAQ,CAAC5hB,CAAD,EAAIG,CAAJ,EAAOgH,KAAP,EAAcC,MAAd,CAdX;AAeHgV,QAAAA,EAAE,EAAE,CAACpc,CAAD,EAAIG,CAAJ,EAAOgH,KAAP,EAAcC,MAAd,EAAsBjB,IAAtB,CAA2B,GAA3B;AAfD,OAAP;AAiBH;;AACD,aAASrK,QAAT,GAAoB;AAChB,aAAO,KAAKqK,IAAL,CAAU,GAAV,EAAeb,OAAf,CAAuB+b,GAAvB,EAA4B,IAA5B,CAAP;AACH;;AACD,aAASQ,SAAT,CAAmBC,SAAnB,EAA8B;AAC1B,UAAIrkB,GAAG,GAAGkI,KAAK,CAACmc,SAAD,CAAf;AACArkB,MAAAA,GAAG,CAAC3B,QAAJ,GAAeA,QAAf;AACA,aAAO2B,GAAP;AACH;;AACD,aAASskB,uBAAT,CAAiCC,GAAjC,EAAsCC,GAAtC,EAA2CC,GAA3C,EAAgDC,GAAhD,EAAqDC,GAArD,EAA0DC,GAA1D,EAA+DC,GAA/D,EAAoEC,GAApE,EAAyEjqB,MAAzE,EAAiF;AAC7E,UAAIA,MAAM,IAAI,IAAd,EAAoB;AAChB,eAAOkqB,MAAM,CAACR,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgBC,GAAhB,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,GAApC,CAAb;AACH,OAFD,MAEO;AACH,eAAOE,iBAAiB,CAACT,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgBC,GAAhB,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,GAApC,EACpBG,SAAS,CAACV,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgBC,GAAhB,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,GAApC,EAAyCjqB,MAAzC,CADW,CAAxB;AAEH;AACJ;;AACD,aAASqqB,gBAAT,CAA0BC,OAA1B,EAAmCC,OAAnC,EAA4C;AACxC,eAASC,CAAT,CAAW/kB,GAAX,EAAgB;AACZ,eAAO,CAAC,CAAC,CAACA,GAAF,EAAOiN,OAAP,CAAe,CAAf,CAAR;AACH;;AACD,aAAOnK,IAAI,CAACW,CAAL,CAAOuE,MAAP,CAAc,UAAU8B,IAAV,EAAgBvP,MAAhB,EAAwByqB,SAAxB,EAAmC;AACpD,YAAIlb,IAAI,YAAYzG,OAApB,EAA6B;AACzByG,UAAAA,IAAI,GAAGA,IAAI,CAAChE,IAAL,CAAU,GAAV,CAAP;AACH;;AACDgE,QAAAA,IAAI,GAAGmb,UAAU,CAACnb,IAAD,CAAjB;AACA,YAAI7H,CAAJ;AAAA,YAAOG,CAAP;AAAA,YAAUS,CAAV;AAAA,YAAarH,CAAb;AAAA,YAAgB0pB,EAAE,GAAG,EAArB;AAAA,YAAyBC,QAAQ,GAAG,EAApC;AAAA,YAAwCC,KAAxC;AAAA,YACIjkB,GAAG,GAAG,CADV;;AAEA,aAAK,IAAI9G,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGwP,IAAI,CAACvP,MAA1B,EAAkCF,CAAC,GAAGC,EAAtC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3CwI,UAAAA,CAAC,GAAGiH,IAAI,CAACzP,CAAD,CAAR;;AACA,cAAIwI,CAAC,CAAC,CAAD,CAAD,IAAQ,GAAZ,EAAiB;AACbZ,YAAAA,CAAC,GAAG,CAACY,CAAC,CAAC,CAAD,CAAN;AACAT,YAAAA,CAAC,GAAG,CAACS,CAAC,CAAC,CAAD,CAAN;AACH,WAHD,MAGO;AACHrH,YAAAA,CAAC,GAAGwoB,uBAAuB,CAAC/hB,CAAD,EAAIG,CAAJ,EAAOS,CAAC,CAAC,CAAD,CAAR,EAAaA,CAAC,CAAC,CAAD,CAAd,EAAmBA,CAAC,CAAC,CAAD,CAApB,EAAyBA,CAAC,CAAC,CAAD,CAA1B,EAA+BA,CAAC,CAAC,CAAD,CAAhC,EAAqCA,CAAC,CAAC,CAAD,CAAtC,CAA3B;;AACA,gBAAI1B,GAAG,GAAG3F,CAAN,GAAUjB,MAAd,EAAsB;AAClB,kBAAIuqB,OAAO,IAAI,CAACK,QAAQ,CAACrkB,KAAzB,EAAgC;AAC5BskB,gBAAAA,KAAK,GAAGpB,uBAAuB,CAAC/hB,CAAD,EAAIG,CAAJ,EAAOS,CAAC,CAAC,CAAD,CAAR,EAAaA,CAAC,CAAC,CAAD,CAAd,EAAmBA,CAAC,CAAC,CAAD,CAApB,EAAyBA,CAAC,CAAC,CAAD,CAA1B,EAA+BA,CAAC,CAAC,CAAD,CAAhC,EAAqCA,CAAC,CAAC,CAAD,CAAtC,EAA2CtI,MAAM,GAAG4G,GAApD,CAA/B;AACA+jB,gBAAAA,EAAE,IAAI,CACF,MAAMH,CAAC,CAACK,KAAK,CAACtkB,KAAN,CAAYmB,CAAb,CADL,EAEF8iB,CAAC,CAACK,KAAK,CAACtkB,KAAN,CAAYsB,CAAb,CAFC,EAGF2iB,CAAC,CAACK,KAAK,CAAC5W,CAAN,CAAQvM,CAAT,CAHC,EAIF8iB,CAAC,CAACK,KAAK,CAAC5W,CAAN,CAAQpM,CAAT,CAJC,EAKF2iB,CAAC,CAACK,KAAK,CAACnjB,CAAP,CALC,EAMF8iB,CAAC,CAACK,KAAK,CAAChjB,CAAP,CANC,CAAN;;AAQA,oBAAI4iB,SAAJ,EAAe;AAAC,yBAAOE,EAAP;AAAW;;AAC3BC,gBAAAA,QAAQ,CAACrkB,KAAT,GAAiBokB,EAAjB;AACAA,gBAAAA,EAAE,GAAG,CACD,MAAMH,CAAC,CAACK,KAAK,CAACnjB,CAAP,CADN,EAED8iB,CAAC,CAACK,KAAK,CAAChjB,CAAP,CAAD,GAAa,GAAb,GAAmB2iB,CAAC,CAACK,KAAK,CAACjrB,CAAN,CAAQ8H,CAAT,CAFnB,EAGD8iB,CAAC,CAACK,KAAK,CAACjrB,CAAN,CAAQiI,CAAT,CAHA,EAID2iB,CAAC,CAACK,KAAK,CAACrkB,GAAN,CAAUkB,CAAX,CAJA,EAKD8iB,CAAC,CAACK,KAAK,CAACrkB,GAAN,CAAUqB,CAAX,CALA,EAMD2iB,CAAC,CAACliB,CAAC,CAAC,CAAD,CAAF,CANA,EAODkiB,CAAC,CAACliB,CAAC,CAAC,CAAD,CAAF,CAPA,EAQHuF,IARG,EAAL;AASAjH,gBAAAA,GAAG,IAAI3F,CAAP;AACAyG,gBAAAA,CAAC,GAAG,CAACY,CAAC,CAAC,CAAD,CAAN;AACAT,gBAAAA,CAAC,GAAG,CAACS,CAAC,CAAC,CAAD,CAAN;AACA;AACH;;AACD,kBAAI,CAACgiB,OAAD,IAAY,CAACC,OAAjB,EAA0B;AACtBM,gBAAAA,KAAK,GAAGpB,uBAAuB,CAAC/hB,CAAD,EAAIG,CAAJ,EAAOS,CAAC,CAAC,CAAD,CAAR,EAAaA,CAAC,CAAC,CAAD,CAAd,EAAmBA,CAAC,CAAC,CAAD,CAApB,EAAyBA,CAAC,CAAC,CAAD,CAA1B,EAA+BA,CAAC,CAAC,CAAD,CAAhC,EAAqCA,CAAC,CAAC,CAAD,CAAtC,EAA2CtI,MAAM,GAAG4G,GAApD,CAA/B;AACA,uBAAOikB,KAAP;AACH;AACJ;;AACDjkB,YAAAA,GAAG,IAAI3F,CAAP;AACAyG,YAAAA,CAAC,GAAG,CAACY,CAAC,CAAC,CAAD,CAAN;AACAT,YAAAA,CAAC,GAAG,CAACS,CAAC,CAAC,CAAD,CAAN;AACH;;AACDqiB,UAAAA,EAAE,IAAIriB,CAAC,CAAC0F,KAAF,KAAY1F,CAAlB;AACH;;AACDsiB,QAAAA,QAAQ,CAACpkB,GAAT,GAAemkB,EAAf;AACAE,QAAAA,KAAK,GAAGP,OAAO,GAAG1jB,GAAH,GAAS2jB,OAAO,GAAGK,QAAH,GAAcT,iBAAiB,CAACziB,CAAD,EAAIG,CAAJ,EAAOS,CAAC,CAAC,CAAD,CAAR,EAAaA,CAAC,CAAC,CAAD,CAAd,EAAmBA,CAAC,CAAC,CAAD,CAApB,EAAyBA,CAAC,CAAC,CAAD,CAA1B,EAA+BA,CAAC,CAAC,CAAD,CAAhC,EAAqCA,CAAC,CAAC,CAAD,CAAtC,EAA2C,CAA3C,CAA9D;AACA,eAAOuiB,KAAP;AACH,OAvDM,EAuDJ,IAvDI,EAuDEtiB,IAAI,CAACW,CAAL,CAAOmE,KAvDT,CAAP;AAwDH;;AACD,QAAIyC,cAAc,GAAGua,gBAAgB,CAAC,CAAD,CAArC;AAAA,QACI5Z,gBAAgB,GAAG4Z,gBAAgB,EADvC;AAAA,QAEIS,mBAAmB,GAAGT,gBAAgB,CAAC,CAAD,EAAI,CAAJ,CAF1C;;AAGA,aAASF,iBAAT,CAA2BT,GAA3B,EAAgCC,GAAhC,EAAqCC,GAArC,EAA0CC,GAA1C,EAA+CC,GAA/C,EAAoDC,GAApD,EAAyDC,GAAzD,EAA8DC,GAA9D,EAAmEliB,CAAnE,EAAsE;AAClE,UAAIgjB,EAAE,GAAG,IAAIhjB,CAAb;AAAA,UACIijB,GAAG,GAAG5jB,GAAG,CAAC2jB,EAAD,EAAK,CAAL,CADb;AAAA,UAEIE,GAAG,GAAG7jB,GAAG,CAAC2jB,EAAD,EAAK,CAAL,CAFb;AAAA,UAGIG,EAAE,GAAGnjB,CAAC,GAAGA,CAHb;AAAA,UAIIojB,EAAE,GAAGD,EAAE,GAAGnjB,CAJd;AAAA,UAKIL,CAAC,GAAGsjB,GAAG,GAAGtB,GAAN,GAAYuB,GAAG,GAAG,CAAN,GAAUljB,CAAV,GAAc6hB,GAA1B,GAAgCmB,EAAE,GAAG,CAAL,GAAShjB,CAAT,GAAaA,CAAb,GAAiB+hB,GAAjD,GAAuDqB,EAAE,GAAGnB,GALpE;AAAA,UAMIniB,CAAC,GAAGmjB,GAAG,GAAGrB,GAAN,GAAYsB,GAAG,GAAG,CAAN,GAAUljB,CAAV,GAAc8hB,GAA1B,GAAgCkB,EAAE,GAAG,CAAL,GAAShjB,CAAT,GAAaA,CAAb,GAAiBgiB,GAAjD,GAAuDoB,EAAE,GAAGlB,GANpE;AAAA,UAOImB,EAAE,GAAG1B,GAAG,GAAG,IAAI3hB,CAAJ,IAAS6hB,GAAG,GAAGF,GAAf,CAAN,GAA4BwB,EAAE,IAAIpB,GAAG,GAAG,IAAIF,GAAV,GAAgBF,GAApB,CAPvC;AAAA,UAQI2B,EAAE,GAAG1B,GAAG,GAAG,IAAI5hB,CAAJ,IAAS8hB,GAAG,GAAGF,GAAf,CAAN,GAA4BuB,EAAE,IAAInB,GAAG,GAAG,IAAIF,GAAV,GAAgBF,GAApB,CARvC;AAAA,UASI2B,EAAE,GAAG1B,GAAG,GAAG,IAAI7hB,CAAJ,IAAS+hB,GAAG,GAAGF,GAAf,CAAN,GAA4BsB,EAAE,IAAIlB,GAAG,GAAG,IAAIF,GAAV,GAAgBF,GAApB,CATvC;AAAA,UAUI2B,EAAE,GAAG1B,GAAG,GAAG,IAAI9hB,CAAJ,IAASgiB,GAAG,GAAGF,GAAf,CAAN,GAA4BqB,EAAE,IAAIjB,GAAG,GAAG,IAAIF,GAAV,GAAgBF,GAApB,CAVvC;AAAA,UAWI2B,EAAE,GAAGT,EAAE,GAAGrB,GAAL,GAAW3hB,CAAC,GAAG6hB,GAXxB;AAAA,UAYI6B,EAAE,GAAGV,EAAE,GAAGpB,GAAL,GAAW5hB,CAAC,GAAG8hB,GAZxB;AAAA,UAaI1J,EAAE,GAAG4K,EAAE,GAAGjB,GAAL,GAAW/hB,CAAC,GAAGiiB,GAbxB;AAAA,UAcI5J,EAAE,GAAG2K,EAAE,GAAGhB,GAAL,GAAWhiB,CAAC,GAAGkiB,GAdxB;AAAA,UAeIyB,KAAK,GAAI,KAAKhiB,IAAI,CAAC8E,KAAL,CAAW4c,EAAE,GAAGE,EAAhB,EAAoBD,EAAE,GAAGE,EAAzB,IAA+B,GAA/B,GAAqCnjB,EAfvD,CADkE,CAiBlE;;AACA,aAAO;AACHV,QAAAA,CAAC,EAAEA,CADA;AAEHG,QAAAA,CAAC,EAAEA,CAFA;AAGHoM,QAAAA,CAAC,EAAE;AAACvM,UAAAA,CAAC,EAAE0jB,EAAJ;AAAQvjB,UAAAA,CAAC,EAAEwjB;AAAX,SAHA;AAIHzrB,QAAAA,CAAC,EAAE;AAAC8H,UAAAA,CAAC,EAAE4jB,EAAJ;AAAQzjB,UAAAA,CAAC,EAAE0jB;AAAX,SAJA;AAKHhlB,QAAAA,KAAK,EAAE;AAACmB,UAAAA,CAAC,EAAE8jB,EAAJ;AAAQ3jB,UAAAA,CAAC,EAAE4jB;AAAX,SALJ;AAMHjlB,QAAAA,GAAG,EAAE;AAACkB,UAAAA,CAAC,EAAEyY,EAAJ;AAAQtY,UAAAA,CAAC,EAAEuY;AAAX,SANF;AAOHsL,QAAAA,KAAK,EAAEA;AAPJ,OAAP;AASH;;AACD,aAASC,UAAT,CAAoBjC,GAApB,EAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,GAAnC,EAAwCC,GAAxC,EAA6CC,GAA7C,EAAkDC,GAAlD,EAAuDC,GAAvD,EAA4D;AACxD,UAAI,CAAC1hB,IAAI,CAACM,EAAL,CAAQ6gB,GAAR,EAAa,OAAb,CAAL,EAA4B;AACxBA,QAAAA,GAAG,GAAG,CAACA,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgBC,GAAhB,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,GAApC,CAAN;AACH;;AACD,UAAIhV,IAAI,GAAG2W,QAAQ,CAAClqB,KAAT,CAAe,IAAf,EAAqBgoB,GAArB,CAAX;AACA,aAAOvO,GAAG,CACNlG,IAAI,CAACnL,GAAL,CAASpC,CADH,EAENuN,IAAI,CAACnL,GAAL,CAASjC,CAFH,EAGNoN,IAAI,CAACrL,GAAL,CAASlC,CAAT,GAAauN,IAAI,CAACnL,GAAL,CAASpC,CAHhB,EAINuN,IAAI,CAACrL,GAAL,CAAS/B,CAAT,GAAaoN,IAAI,CAACnL,GAAL,CAASjC,CAJhB,CAAV;AAMH;;AACD,aAASgkB,iBAAT,CAA2B5W,IAA3B,EAAiCvN,CAAjC,EAAoCG,CAApC,EAAuC;AACnC,aAAQH,CAAC,IAAIuN,IAAI,CAACvN,CAAV,IACAA,CAAC,IAAIuN,IAAI,CAACvN,CAAL,GAASuN,IAAI,CAACpG,KADnB,IAEAhH,CAAC,IAAIoN,IAAI,CAACpN,CAFV,IAGAA,CAAC,IAAIoN,IAAI,CAACpN,CAAL,GAASoN,IAAI,CAACnG,MAH3B;AAIH;;AACD,aAASgd,eAAT,CAAyBC,KAAzB,EAAgCC,KAAhC,EAAuC;AACnCD,MAAAA,KAAK,GAAG5Q,GAAG,CAAC4Q,KAAD,CAAX;AACAC,MAAAA,KAAK,GAAG7Q,GAAG,CAAC6Q,KAAD,CAAX;AACA,aAAOH,iBAAiB,CAACG,KAAD,EAAQD,KAAK,CAACrkB,CAAd,EAAiBqkB,KAAK,CAAClkB,CAAvB,CAAjB,IACAgkB,iBAAiB,CAACG,KAAD,EAAQD,KAAK,CAAC3d,EAAd,EAAkB2d,KAAK,CAAClkB,CAAxB,CADjB,IAEAgkB,iBAAiB,CAACG,KAAD,EAAQD,KAAK,CAACrkB,CAAd,EAAiBqkB,KAAK,CAAC1d,EAAvB,CAFjB,IAGAwd,iBAAiB,CAACG,KAAD,EAAQD,KAAK,CAAC3d,EAAd,EAAkB2d,KAAK,CAAC1d,EAAxB,CAHjB,IAIAwd,iBAAiB,CAACE,KAAD,EAAQC,KAAK,CAACtkB,CAAd,EAAiBskB,KAAK,CAACnkB,CAAvB,CAJjB,IAKAgkB,iBAAiB,CAACE,KAAD,EAAQC,KAAK,CAAC5d,EAAd,EAAkB4d,KAAK,CAACnkB,CAAxB,CALjB,IAMAgkB,iBAAiB,CAACE,KAAD,EAAQC,KAAK,CAACtkB,CAAd,EAAiBskB,KAAK,CAAC3d,EAAvB,CANjB,IAOAwd,iBAAiB,CAACE,KAAD,EAAQC,KAAK,CAAC5d,EAAd,EAAkB4d,KAAK,CAAC3d,EAAxB,CAPjB,IAQA,CAAC0d,KAAK,CAACrkB,CAAN,GAAUskB,KAAK,CAAC5d,EAAhB,IAAsB2d,KAAK,CAACrkB,CAAN,GAAUskB,KAAK,CAACtkB,CAAtC,IACGskB,KAAK,CAACtkB,CAAN,GAAUqkB,KAAK,CAAC3d,EAAhB,IAAsB4d,KAAK,CAACtkB,CAAN,GAAUqkB,KAAK,CAACrkB,CAD1C,MAECqkB,KAAK,CAAClkB,CAAN,GAAUmkB,KAAK,CAAC3d,EAAhB,IAAsB0d,KAAK,CAAClkB,CAAN,GAAUmkB,KAAK,CAACnkB,CAAtC,IACGmkB,KAAK,CAACnkB,CAAN,GAAUkkB,KAAK,CAAC1d,EAAhB,IAAsB2d,KAAK,CAACnkB,CAAN,GAAUkkB,KAAK,CAAClkB,CAH1C,CARP;AAYH;;AACD,aAASokB,KAAT,CAAelkB,CAAf,EAAkBmkB,EAAlB,EAAsBC,EAAtB,EAA0BC,EAA1B,EAA8BC,EAA9B,EAAkC;AAC9B,UAAItB,EAAE,GAAG,CAAC,CAAD,GAAKmB,EAAL,GAAU,IAAIC,EAAd,GAAmB,IAAIC,EAAvB,GAA4B,IAAIC,EAAzC;AAAA,UACInB,EAAE,GAAGnjB,CAAC,GAAGgjB,EAAJ,GAAS,IAAImB,EAAb,GAAkB,KAAKC,EAAvB,GAA4B,IAAIC,EADzC;AAEA,aAAOrkB,CAAC,GAAGmjB,EAAJ,GAAS,IAAIgB,EAAb,GAAkB,IAAIC,EAA7B;AACH;;AACD,aAASjC,MAAT,CAAgBhc,EAAhB,EAAoBC,EAApB,EAAwBC,EAAxB,EAA4BC,EAA5B,EAAgCC,EAAhC,EAAoCC,EAApC,EAAwC+d,EAAxC,EAA4CC,EAA5C,EAAgDxrB,CAAhD,EAAmD;AAC/C,UAAIA,CAAC,IAAI,IAAT,EAAe;AACXA,QAAAA,CAAC,GAAG,CAAJ;AACH;;AACDA,MAAAA,CAAC,GAAGA,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAYA,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAYA,CAA5B;AACA,UAAIyrB,EAAE,GAAGzrB,CAAC,GAAG,CAAb;AAAA,UACInB,CAAC,GAAG,EADR;AAAA,UAEI6sB,OAAO,GAAG,CAAC,CAAC,KAAF,EAAQ,KAAR,EAAc,CAAC,KAAf,EAAqB,KAArB,EAA2B,CAAC,KAA5B,EAAkC,KAAlC,EAAwC,CAAC,KAAzC,EAA+C,KAA/C,EAAqD,CAAC,KAAtD,EAA4D,KAA5D,EAAkE,CAAC,KAAnE,EAAyE,KAAzE,CAFd;AAAA,UAGIC,OAAO,GAAG,CAAC,MAAD,EAAQ,MAAR,EAAe,MAAf,EAAsB,MAAtB,EAA6B,MAA7B,EAAoC,MAApC,EAA2C,MAA3C,EAAkD,MAAlD,EAAyD,MAAzD,EAAgE,MAAhE,EAAuE,MAAvE,EAA8E,MAA9E,CAHd;AAAA,UAIIC,GAAG,GAAG,CAJV;;AAKA,WAAK,IAAI7sB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,CAApB,EAAuBE,CAAC,EAAxB,EAA4B;AACxB,YAAI8sB,EAAE,GAAGJ,EAAE,GAAGC,OAAO,CAAC3sB,CAAD,CAAZ,GAAkB0sB,EAA3B;AAAA,YACIK,KAAK,GAAGZ,KAAK,CAACW,EAAD,EAAK1e,EAAL,EAASE,EAAT,EAAaE,EAAb,EAAiBge,EAAjB,CADjB;AAAA,YAEIQ,KAAK,GAAGb,KAAK,CAACW,EAAD,EAAKze,EAAL,EAASE,EAAT,EAAaE,EAAb,EAAiBge,EAAjB,CAFjB;AAAA,YAGIQ,IAAI,GAAGF,KAAK,GAAGA,KAAR,GAAgBC,KAAK,GAAGA,KAHnC;AAIAH,QAAAA,GAAG,IAAID,OAAO,CAAC5sB,CAAD,CAAP,GAAa4J,IAAI,CAACjC,IAAL,CAAUslB,IAAV,CAApB;AACH;;AACD,aAAOP,EAAE,GAAGG,GAAZ;AACH;;AACD,aAASvC,SAAT,CAAmBlc,EAAnB,EAAuBC,EAAvB,EAA2BC,EAA3B,EAA+BC,EAA/B,EAAmCC,EAAnC,EAAuCC,EAAvC,EAA2C+d,EAA3C,EAA+CC,EAA/C,EAAmDS,EAAnD,EAAuD;AACnD,UAAIA,EAAE,GAAG,CAAL,IAAU9C,MAAM,CAAChc,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,EAAiBC,EAAjB,EAAqBC,EAArB,EAAyB+d,EAAzB,EAA6BC,EAA7B,CAAN,GAAyCS,EAAvD,EAA2D;AACvD;AACH;;AACD,UAAIjlB,CAAC,GAAG,CAAR;AAAA,UACI0gB,IAAI,GAAG1gB,CAAC,GAAG,CADf;AAAA,UAEImjB,EAAE,GAAGnjB,CAAC,GAAG0gB,IAFb;AAAA,UAGIxnB,CAHJ;AAAA,UAIIX,CAAC,GAAG,GAJR;AAKAW,MAAAA,CAAC,GAAGipB,MAAM,CAAChc,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,EAAiBC,EAAjB,EAAqBC,EAArB,EAAyB+d,EAAzB,EAA6BC,EAA7B,EAAiCrB,EAAjC,CAAV;;AACA,aAAOtjB,GAAG,CAAC3G,CAAC,GAAG+rB,EAAL,CAAH,GAAc1sB,CAArB,EAAwB;AACpBmoB,QAAAA,IAAI,IAAI,CAAR;AACAyC,QAAAA,EAAE,IAAI,CAACjqB,CAAC,GAAG+rB,EAAJ,GAAS,CAAT,GAAa,CAAC,CAAf,IAAoBvE,IAA1B;AACAxnB,QAAAA,CAAC,GAAGipB,MAAM,CAAChc,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,EAAiBC,EAAjB,EAAqBC,EAArB,EAAyB+d,EAAzB,EAA6BC,EAA7B,EAAiCrB,EAAjC,CAAV;AACH;;AACD,aAAOA,EAAP;AACH;;AACD,aAAS+B,SAAT,CAAmB/e,EAAnB,EAAuBC,EAAvB,EAA2BC,EAA3B,EAA+BC,EAA/B,EAAmCC,EAAnC,EAAuCC,EAAvC,EAA2C+d,EAA3C,EAA+CC,EAA/C,EAAmD;AAC/C,UACI5iB,IAAI,CAACuE,EAAD,EAAKE,EAAL,CAAJ,GAAevE,IAAI,CAACyE,EAAD,EAAKge,EAAL,CAAnB,IACAziB,IAAI,CAACqE,EAAD,EAAKE,EAAL,CAAJ,GAAezE,IAAI,CAAC2E,EAAD,EAAKge,EAAL,CADnB,IAEA3iB,IAAI,CAACwE,EAAD,EAAKE,EAAL,CAAJ,GAAexE,IAAI,CAAC0E,EAAD,EAAKge,EAAL,CAFnB,IAGA1iB,IAAI,CAACsE,EAAD,EAAKE,EAAL,CAAJ,GAAe1E,IAAI,CAAC4E,EAAD,EAAKge,EAAL,CAJvB,EAKE;AACE;AACH;;AACD,UAAIjB,EAAE,GAAG,CAACpd,EAAE,GAAGG,EAAL,GAAUF,EAAE,GAAGC,EAAhB,KAAuBE,EAAE,GAAGge,EAA5B,IAAkC,CAACpe,EAAE,GAAGE,EAAN,KAAaE,EAAE,GAAGie,EAAL,GAAUhe,EAAE,GAAG+d,EAA5B,CAA3C;AAAA,UACIf,EAAE,GAAG,CAACrd,EAAE,GAAGG,EAAL,GAAUF,EAAE,GAAGC,EAAhB,KAAuBG,EAAE,GAAGge,EAA5B,IAAkC,CAACpe,EAAE,GAAGE,EAAN,KAAaC,EAAE,GAAGie,EAAL,GAAUhe,EAAE,GAAG+d,EAA5B,CAD3C;AAAA,UAEIY,WAAW,GAAG,CAAChf,EAAE,GAAGE,EAAN,KAAaG,EAAE,GAAGge,EAAlB,IAAwB,CAACpe,EAAE,GAAGE,EAAN,KAAaC,EAAE,GAAGge,EAAlB,CAF1C;;AAIA,UAAI,CAACY,WAAL,EAAkB;AACd;AACH;;AACD,UAAIC,EAAE,GAAG7B,EAAE,GAAG4B,WAAd;AAAA,UACIE,EAAE,GAAG7B,EAAE,GAAG2B,WADd;AAAA,UAEIG,GAAG,GAAG,CAACF,EAAE,CAACza,OAAH,CAAW,CAAX,CAFX;AAAA,UAGI4a,GAAG,GAAG,CAACF,EAAE,CAAC1a,OAAH,CAAW,CAAX,CAHX;;AAIA,UACI2a,GAAG,GAAG,CAACxjB,IAAI,CAACqE,EAAD,EAAKE,EAAL,CAAJ,CAAasE,OAAb,CAAqB,CAArB,CAAP,IACA2a,GAAG,GAAG,CAAC1jB,IAAI,CAACuE,EAAD,EAAKE,EAAL,CAAJ,CAAasE,OAAb,CAAqB,CAArB,CADP,IAEA2a,GAAG,GAAG,CAACxjB,IAAI,CAACyE,EAAD,EAAKge,EAAL,CAAJ,CAAa5Z,OAAb,CAAqB,CAArB,CAFP,IAGA2a,GAAG,GAAG,CAAC1jB,IAAI,CAAC2E,EAAD,EAAKge,EAAL,CAAJ,CAAa5Z,OAAb,CAAqB,CAArB,CAHP,IAIA4a,GAAG,GAAG,CAACzjB,IAAI,CAACsE,EAAD,EAAKE,EAAL,CAAJ,CAAaqE,OAAb,CAAqB,CAArB,CAJP,IAKA4a,GAAG,GAAG,CAAC3jB,IAAI,CAACwE,EAAD,EAAKE,EAAL,CAAJ,CAAaqE,OAAb,CAAqB,CAArB,CALP,IAMA4a,GAAG,GAAG,CAACzjB,IAAI,CAAC0E,EAAD,EAAKge,EAAL,CAAJ,CAAa7Z,OAAb,CAAqB,CAArB,CANP,IAOA4a,GAAG,GAAG,CAAC3jB,IAAI,CAAC4E,EAAD,EAAKge,EAAL,CAAJ,CAAa7Z,OAAb,CAAqB,CAArB,CARX,EASE;AACE;AACH;;AACD,aAAO;AAAChL,QAAAA,CAAC,EAAEylB,EAAJ;AAAQtlB,QAAAA,CAAC,EAAEulB;AAAX,OAAP;AACH;;AACD,aAASG,KAAT,CAAeC,IAAf,EAAqBC,IAArB,EAA2B;AACvB,aAAOC,WAAW,CAACF,IAAD,EAAOC,IAAP,CAAlB;AACH;;AACD,aAASE,UAAT,CAAoBH,IAApB,EAA0BC,IAA1B,EAAgC;AAC5B,aAAOC,WAAW,CAACF,IAAD,EAAOC,IAAP,EAAa,CAAb,CAAlB;AACH;;AACD,aAASC,WAAT,CAAqBF,IAArB,EAA2BC,IAA3B,EAAiCG,SAAjC,EAA4C;AACxC,UAAI7B,KAAK,GAAGJ,UAAU,CAAC6B,IAAD,CAAtB;AAAA,UACIxB,KAAK,GAAGL,UAAU,CAAC8B,IAAD,CADtB;;AAEA,UAAI,CAAC3B,eAAe,CAACC,KAAD,EAAQC,KAAR,CAApB,EAAoC;AAChC,eAAO4B,SAAS,GAAG,CAAH,GAAO,EAAvB;AACH;;AACD,UAAIC,EAAE,GAAG3D,MAAM,CAACxoB,KAAP,CAAa,CAAb,EAAgB8rB,IAAhB,CAAT;AAAA,UACIM,EAAE,GAAG5D,MAAM,CAACxoB,KAAP,CAAa,CAAb,EAAgB+rB,IAAhB,CADT;AAAA,UAEIM,EAAE,GAAG,CAAC,EAAEF,EAAE,GAAG,CAAP,CAFV;AAAA,UAGIG,EAAE,GAAG,CAAC,EAAEF,EAAE,GAAG,CAAP,CAHV;AAAA,UAIIG,KAAK,GAAG,EAJZ;AAAA,UAKIC,KAAK,GAAG,EALZ;AAAA,UAMIC,EAAE,GAAG,EANT;AAAA,UAOIhpB,GAAG,GAAGyoB,SAAS,GAAG,CAAH,GAAO,EAP1B;;AAQA,WAAK,IAAI9tB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiuB,EAAE,GAAG,CAAzB,EAA4BjuB,CAAC,EAA7B,EAAiC;AAC7B,YAAIwI,CAAC,GAAG6hB,iBAAiB,CAACzoB,KAAlB,CAAwB,CAAxB,EAA2B8rB,IAAI,CAACnrB,MAAL,CAAYvC,CAAC,GAAGiuB,EAAhB,CAA3B,CAAR;AACAE,QAAAA,KAAK,CAAC1sB,IAAN,CAAW;AAACmG,UAAAA,CAAC,EAAEY,CAAC,CAACZ,CAAN;AAASG,UAAAA,CAAC,EAAES,CAAC,CAACT,CAAd;AAAiBE,UAAAA,CAAC,EAAEjI,CAAC,GAAGiuB;AAAxB,SAAX;AACH;;AACD,WAAKjuB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGkuB,EAAE,GAAG,CAArB,EAAwBluB,CAAC,EAAzB,EAA6B;AACzBwI,QAAAA,CAAC,GAAG6hB,iBAAiB,CAACzoB,KAAlB,CAAwB,CAAxB,EAA2B+rB,IAAI,CAACprB,MAAL,CAAYvC,CAAC,GAAGkuB,EAAhB,CAA3B,CAAJ;AACAE,QAAAA,KAAK,CAAC3sB,IAAN,CAAW;AAACmG,UAAAA,CAAC,EAAEY,CAAC,CAACZ,CAAN;AAASG,UAAAA,CAAC,EAAES,CAAC,CAACT,CAAd;AAAiBE,UAAAA,CAAC,EAAEjI,CAAC,GAAGkuB;AAAxB,SAAX;AACH;;AACD,WAAKluB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGiuB,EAAhB,EAAoBjuB,CAAC,EAArB,EAAyB;AACrB,aAAK,IAAImC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+rB,EAApB,EAAwB/rB,CAAC,EAAzB,EAA6B;AACzB,cAAImsB,EAAE,GAAGH,KAAK,CAACnuB,CAAD,CAAd;AAAA,cACIuuB,GAAG,GAAGJ,KAAK,CAACnuB,CAAC,GAAG,CAAL,CADf;AAAA,cAEIwuB,EAAE,GAAGJ,KAAK,CAACjsB,CAAD,CAFd;AAAA,cAGIssB,GAAG,GAAGL,KAAK,CAACjsB,CAAC,GAAG,CAAL,CAHf;AAAA,cAIIusB,EAAE,GAAG5mB,GAAG,CAACymB,GAAG,CAAC3mB,CAAJ,GAAQ0mB,EAAE,CAAC1mB,CAAZ,CAAH,GAAoB,IAApB,GAA2B,GAA3B,GAAiC,GAJ1C;AAAA,cAKI+mB,EAAE,GAAG7mB,GAAG,CAAC2mB,GAAG,CAAC7mB,CAAJ,GAAQ4mB,EAAE,CAAC5mB,CAAZ,CAAH,GAAoB,IAApB,GAA2B,GAA3B,GAAiC,GAL1C;AAAA,cAMImB,EAAE,GAAGokB,SAAS,CAACmB,EAAE,CAAC1mB,CAAJ,EAAO0mB,EAAE,CAACvmB,CAAV,EAAawmB,GAAG,CAAC3mB,CAAjB,EAAoB2mB,GAAG,CAACxmB,CAAxB,EAA2BymB,EAAE,CAAC5mB,CAA9B,EAAiC4mB,EAAE,CAACzmB,CAApC,EAAuC0mB,GAAG,CAAC7mB,CAA3C,EAA8C6mB,GAAG,CAAC1mB,CAAlD,CANlB;;AAOA,cAAIgB,EAAJ,EAAQ;AACJ,gBAAIslB,EAAE,CAACtlB,EAAE,CAACnB,CAAH,CAAKgL,OAAL,CAAa,CAAb,CAAD,CAAF,IAAuB7J,EAAE,CAAChB,CAAH,CAAK6K,OAAL,CAAa,CAAb,CAA3B,EAA4C;AACxC;AACH;;AACDyb,YAAAA,EAAE,CAACtlB,EAAE,CAACnB,CAAH,CAAKgL,OAAL,CAAa,CAAb,CAAD,CAAF,GAAsB7J,EAAE,CAAChB,CAAH,CAAK6K,OAAL,CAAa,CAAb,CAAtB;AACA,gBAAIqY,EAAE,GAAGqD,EAAE,CAACrmB,CAAH,GAAOH,GAAG,CAAC,CAACiB,EAAE,CAAC2lB,EAAD,CAAF,GAASJ,EAAE,CAACI,EAAD,CAAZ,KAAqBH,GAAG,CAACG,EAAD,CAAH,GAAUJ,EAAE,CAACI,EAAD,CAAjC,CAAD,CAAH,IAA+CH,GAAG,CAACtmB,CAAJ,GAAQqmB,EAAE,CAACrmB,CAA1D,CAAhB;AAAA,gBACImjB,EAAE,GAAGoD,EAAE,CAACvmB,CAAH,GAAOH,GAAG,CAAC,CAACiB,EAAE,CAAC4lB,EAAD,CAAF,GAASH,EAAE,CAACG,EAAD,CAAZ,KAAqBF,GAAG,CAACE,EAAD,CAAH,GAAUH,EAAE,CAACG,EAAD,CAAjC,CAAD,CAAH,IAA+CF,GAAG,CAACxmB,CAAJ,GAAQumB,EAAE,CAACvmB,CAA1D,CADhB;;AAEA,gBAAIgjB,EAAE,IAAI,CAAN,IAAWA,EAAE,IAAI,CAAjB,IAAsBG,EAAE,IAAI,CAA5B,IAAiCA,EAAE,IAAI,CAA3C,EAA8C;AAC1C,kBAAI0C,SAAJ,EAAe;AACXzoB,gBAAAA,GAAG;AACN,eAFD,MAEO;AACHA,gBAAAA,GAAG,CAAC5D,IAAJ,CAAS;AACLmG,kBAAAA,CAAC,EAAEmB,EAAE,CAACnB,CADD;AAELG,kBAAAA,CAAC,EAAEgB,EAAE,CAAChB,CAFD;AAGLkjB,kBAAAA,EAAE,EAAEA,EAHC;AAILG,kBAAAA,EAAE,EAAEA;AAJC,iBAAT;AAMH;AACJ;AACJ;AACJ;AACJ;;AACD,aAAO/lB,GAAP;AACH;;AACD,aAASupB,gBAAT,CAA0BC,KAA1B,EAAiCC,KAAjC,EAAwC;AACpC,aAAOC,eAAe,CAACF,KAAD,EAAQC,KAAR,CAAtB;AACH;;AACD,aAASE,sBAAT,CAAgCH,KAAhC,EAAuCC,KAAvC,EAA8C;AAC1C,aAAOC,eAAe,CAACF,KAAD,EAAQC,KAAR,EAAe,CAAf,CAAtB;AACH;;AACD,aAASC,eAAT,CAAyBF,KAAzB,EAAgCC,KAAhC,EAAuChB,SAAvC,EAAkD;AAC9Ce,MAAAA,KAAK,GAAGjE,UAAU,CAACiE,KAAD,CAAlB;AACAC,MAAAA,KAAK,GAAGlE,UAAU,CAACkE,KAAD,CAAlB;AACA,UAAI1gB,EAAJ;AAAA,UAAQC,EAAR;AAAA,UAAYC,EAAZ;AAAA,UAAgBC,EAAhB;AAAA,UAAoB0gB,GAApB;AAAA,UAAyBC,GAAzB;AAAA,UAA8BC,GAA9B;AAAA,UAAmCC,GAAnC;AAAA,UAAwC1B,IAAxC;AAAA,UAA8CC,IAA9C;AAAA,UACItoB,GAAG,GAAGyoB,SAAS,GAAG,CAAH,GAAO,EAD1B;;AAEA,WAAK,IAAI9tB,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAG4uB,KAAK,CAAC3uB,MAA3B,EAAmCF,CAAC,GAAGC,EAAvC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5C,YAAIqvB,EAAE,GAAGR,KAAK,CAAC7uB,CAAD,CAAd;;AACA,YAAIqvB,EAAE,CAAC,CAAD,CAAF,IAAS,GAAb,EAAkB;AACdjhB,UAAAA,EAAE,GAAG6gB,GAAG,GAAGI,EAAE,CAAC,CAAD,CAAb;AACAhhB,UAAAA,EAAE,GAAG6gB,GAAG,GAAGG,EAAE,CAAC,CAAD,CAAb;AACH,SAHD,MAGO;AACH,cAAIA,EAAE,CAAC,CAAD,CAAF,IAAS,GAAb,EAAkB;AACd3B,YAAAA,IAAI,GAAG,CAACtf,EAAD,EAAKC,EAAL,EAAS9L,MAAT,CAAgB8sB,EAAE,CAACxuB,KAAH,CAAS,CAAT,CAAhB,CAAP;AACAuN,YAAAA,EAAE,GAAGsf,IAAI,CAAC,CAAD,CAAT;AACArf,YAAAA,EAAE,GAAGqf,IAAI,CAAC,CAAD,CAAT;AACH,WAJD,MAIO;AACHA,YAAAA,IAAI,GAAG,CAACtf,EAAD,EAAKC,EAAL,EAASD,EAAT,EAAaC,EAAb,EAAiB4gB,GAAjB,EAAsBC,GAAtB,EAA2BD,GAA3B,EAAgCC,GAAhC,CAAP;AACA9gB,YAAAA,EAAE,GAAG6gB,GAAL;AACA5gB,YAAAA,EAAE,GAAG6gB,GAAL;AACH;;AACD,eAAK,IAAI/sB,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAG0sB,KAAK,CAAC5uB,MAA3B,EAAmCiC,CAAC,GAAGC,EAAvC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5C,gBAAImtB,EAAE,GAAGR,KAAK,CAAC3sB,CAAD,CAAd;;AACA,gBAAImtB,EAAE,CAAC,CAAD,CAAF,IAAS,GAAb,EAAkB;AACdhhB,cAAAA,EAAE,GAAG6gB,GAAG,GAAGG,EAAE,CAAC,CAAD,CAAb;AACA/gB,cAAAA,EAAE,GAAG6gB,GAAG,GAAGE,EAAE,CAAC,CAAD,CAAb;AACH,aAHD,MAGO;AACH,kBAAIA,EAAE,CAAC,CAAD,CAAF,IAAS,GAAb,EAAkB;AACd3B,gBAAAA,IAAI,GAAG,CAACrf,EAAD,EAAKC,EAAL,EAAShM,MAAT,CAAgB+sB,EAAE,CAACzuB,KAAH,CAAS,CAAT,CAAhB,CAAP;AACAyN,gBAAAA,EAAE,GAAGqf,IAAI,CAAC,CAAD,CAAT;AACApf,gBAAAA,EAAE,GAAGof,IAAI,CAAC,CAAD,CAAT;AACH,eAJD,MAIO;AACHA,gBAAAA,IAAI,GAAG,CAACrf,EAAD,EAAKC,EAAL,EAASD,EAAT,EAAaC,EAAb,EAAiB4gB,GAAjB,EAAsBC,GAAtB,EAA2BD,GAA3B,EAAgCC,GAAhC,CAAP;AACA9gB,gBAAAA,EAAE,GAAG6gB,GAAL;AACA5gB,gBAAAA,EAAE,GAAG6gB,GAAL;AACH;;AACD,kBAAIG,IAAI,GAAG3B,WAAW,CAACF,IAAD,EAAOC,IAAP,EAAaG,SAAb,CAAtB;;AACA,kBAAIA,SAAJ,EAAe;AACXzoB,gBAAAA,GAAG,IAAIkqB,IAAP;AACH,eAFD,MAEO;AACH,qBAAK,IAAIrtB,CAAC,GAAG,CAAR,EAAWstB,EAAE,GAAGD,IAAI,CAACrvB,MAA1B,EAAkCgC,CAAC,GAAGstB,EAAtC,EAA0CttB,CAAC,EAA3C,EAA+C;AAC3CqtB,kBAAAA,IAAI,CAACrtB,CAAD,CAAJ,CAAQutB,QAAR,GAAmBzvB,CAAnB;AACAuvB,kBAAAA,IAAI,CAACrtB,CAAD,CAAJ,CAAQwtB,QAAR,GAAmBvtB,CAAnB;AACAotB,kBAAAA,IAAI,CAACrtB,CAAD,CAAJ,CAAQwrB,IAAR,GAAeA,IAAf;AACA6B,kBAAAA,IAAI,CAACrtB,CAAD,CAAJ,CAAQyrB,IAAR,GAAeA,IAAf;AACH;;AACDtoB,gBAAAA,GAAG,GAAGA,GAAG,CAAC9C,MAAJ,CAAWgtB,IAAX,CAAN;AACH;AACJ;AACJ;AACJ;AACJ;;AACD,aAAOlqB,GAAP;AACH;;AACD,aAASsqB,iBAAT,CAA2BlgB,IAA3B,EAAiC7H,CAAjC,EAAoCG,CAApC,EAAuC;AACnC,UAAIoN,IAAI,GAAGya,QAAQ,CAACngB,IAAD,CAAnB;AACA,aAAOsc,iBAAiB,CAAC5W,IAAD,EAAOvN,CAAP,EAAUG,CAAV,CAAjB,IACAgnB,eAAe,CAACtf,IAAD,EAAO,CAAC,CAAC,GAAD,EAAM7H,CAAN,EAASG,CAAT,CAAD,EAAc,CAAC,GAAD,EAAMoN,IAAI,CAAC7G,EAAL,GAAU,EAAhB,CAAd,CAAP,EAA2C,CAA3C,CAAf,GAA+D,CAA/D,IAAoE,CAD3E;AAEH;;AACD,aAASshB,QAAT,CAAkBngB,IAAlB,EAAwB;AACpB,UAAI6E,GAAG,GAAG4U,KAAK,CAACzZ,IAAD,CAAf;;AACA,UAAI6E,GAAG,CAACa,IAAR,EAAc;AACV,eAAO5H,KAAK,CAAC+G,GAAG,CAACa,IAAL,CAAZ;AACH;;AACD,UAAI,CAAC1F,IAAL,EAAW;AACP,eAAO4L,GAAG,EAAV;AACH;;AACD5L,MAAAA,IAAI,GAAGmb,UAAU,CAACnb,IAAD,CAAjB;AACA,UAAI7H,CAAC,GAAG,CAAR;AAAA,UACIG,CAAC,GAAG,CADR;AAAA,UAEIF,CAAC,GAAG,EAFR;AAAA,UAGIG,CAAC,GAAG,EAHR;AAAA,UAIIQ,CAJJ;;AAKA,WAAK,IAAIxI,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGwP,IAAI,CAACvP,MAA1B,EAAkCF,CAAC,GAAGC,EAAtC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3CwI,QAAAA,CAAC,GAAGiH,IAAI,CAACzP,CAAD,CAAR;;AACA,YAAIwI,CAAC,CAAC,CAAD,CAAD,IAAQ,GAAZ,EAAiB;AACbZ,UAAAA,CAAC,GAAGY,CAAC,CAAC,CAAD,CAAL;AACAT,UAAAA,CAAC,GAAGS,CAAC,CAAC,CAAD,CAAL;AACAX,UAAAA,CAAC,CAACpG,IAAF,CAAOmG,CAAP;AACAI,UAAAA,CAAC,CAACvG,IAAF,CAAOsG,CAAP;AACH,SALD,MAKO;AACH,cAAI8nB,GAAG,GAAG/D,QAAQ,CAAClkB,CAAD,EAAIG,CAAJ,EAAOS,CAAC,CAAC,CAAD,CAAR,EAAaA,CAAC,CAAC,CAAD,CAAd,EAAmBA,CAAC,CAAC,CAAD,CAApB,EAAyBA,CAAC,CAAC,CAAD,CAA1B,EAA+BA,CAAC,CAAC,CAAD,CAAhC,EAAqCA,CAAC,CAAC,CAAD,CAAtC,CAAlB;AACAX,UAAAA,CAAC,GAAGA,CAAC,CAACtF,MAAF,CAASstB,GAAG,CAAC7lB,GAAJ,CAAQpC,CAAjB,EAAoBioB,GAAG,CAAC/lB,GAAJ,CAAQlC,CAA5B,CAAJ;AACAI,UAAAA,CAAC,GAAGA,CAAC,CAACzF,MAAF,CAASstB,GAAG,CAAC7lB,GAAJ,CAAQjC,CAAjB,EAAoB8nB,GAAG,CAAC/lB,GAAJ,CAAQ/B,CAA5B,CAAJ;AACAH,UAAAA,CAAC,GAAGY,CAAC,CAAC,CAAD,CAAL;AACAT,UAAAA,CAAC,GAAGS,CAAC,CAAC,CAAD,CAAL;AACH;AACJ;;AACD,UAAIsnB,IAAI,GAAG/lB,IAAI,CAACnI,KAAL,CAAW,CAAX,EAAciG,CAAd,CAAX;AAAA,UACIkoB,IAAI,GAAGhmB,IAAI,CAACnI,KAAL,CAAW,CAAX,EAAcoG,CAAd,CADX;AAAA,UAEIgoB,IAAI,GAAGnmB,IAAI,CAACjI,KAAL,CAAW,CAAX,EAAciG,CAAd,CAFX;AAAA,UAGIooB,IAAI,GAAGpmB,IAAI,CAACjI,KAAL,CAAW,CAAX,EAAcoG,CAAd,CAHX;AAAA,UAIIzC,EAAE,GAAG8V,GAAG,CAACyU,IAAD,EAAOC,IAAP,EAAaC,IAAI,GAAGF,IAApB,EAA0BG,IAAI,GAAGF,IAAjC,CAJZ;AAKAzb,MAAAA,GAAG,CAACa,IAAJ,GAAW5H,KAAK,CAAChI,EAAD,CAAhB;AACA,aAAOA,EAAP;AACH;;AACD,aAASikB,QAAT,CAAkB5hB,CAAlB,EAAqBG,CAArB,EAAwBY,CAAxB,EAA2BC,CAA3B,EAA8B+I,CAA9B,EAAiC;AAC7B,UAAIA,CAAJ,EAAO;AACH,eAAO,CACH,CAAC,GAAD,EAAM,CAAC/J,CAAD,GAAM,CAAC+J,CAAb,EAAiB5J,CAAjB,CADG,EAEH,CAAC,GAAD,EAAMY,CAAC,GAAGgJ,CAAC,GAAG,CAAd,EAAiB,CAAjB,CAFG,EAGH,CAAC,GAAD,EAAMA,CAAN,EAASA,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqBA,CAArB,EAAwBA,CAAxB,CAHG,EAIH,CAAC,GAAD,EAAM,CAAN,EAAS/I,CAAC,GAAG+I,CAAC,GAAG,CAAjB,CAJG,EAKH,CAAC,GAAD,EAAMA,CAAN,EAASA,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAACA,CAAtB,EAAyBA,CAAzB,CALG,EAMH,CAAC,GAAD,EAAMA,CAAC,GAAG,CAAJ,GAAQhJ,CAAd,EAAiB,CAAjB,CANG,EAOH,CAAC,GAAD,EAAMgJ,CAAN,EAASA,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAACA,CAAtB,EAAyB,CAACA,CAA1B,CAPG,EAQH,CAAC,GAAD,EAAM,CAAN,EAASA,CAAC,GAAG,CAAJ,GAAQ/I,CAAjB,CARG,EASH,CAAC,GAAD,EAAM+I,CAAN,EAASA,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqBA,CAArB,EAAwB,CAACA,CAAzB,CATG,EAUH,CAAC,GAAD,CAVG,CAAP;AAYH;;AACD,UAAItM,GAAG,GAAG,CAAC,CAAC,GAAD,EAAMuC,CAAN,EAASG,CAAT,CAAD,EAAc,CAAC,GAAD,EAAMY,CAAN,EAAS,CAAT,CAAd,EAA2B,CAAC,GAAD,EAAM,CAAN,EAASC,CAAT,CAA3B,EAAwC,CAAC,GAAD,EAAM,CAACD,CAAP,EAAU,CAAV,CAAxC,EAAsD,CAAC,GAAD,CAAtD,CAAV;AACAtD,MAAAA,GAAG,CAAC3B,QAAJ,GAAeA,QAAf;AACA,aAAO2B,GAAP;AACH;;AACD,aAAS6qB,WAAT,CAAqBtoB,CAArB,EAAwBG,CAAxB,EAA2Bkc,EAA3B,EAA+BC,EAA/B,EAAmCzkB,CAAnC,EAAsC;AAClC,UAAIA,CAAC,IAAI,IAAL,IAAaykB,EAAE,IAAI,IAAvB,EAA6B;AACzBA,QAAAA,EAAE,GAAGD,EAAL;AACH;;AACDrc,MAAAA,CAAC,GAAG,CAACA,CAAL;AACAG,MAAAA,CAAC,GAAG,CAACA,CAAL;AACAkc,MAAAA,EAAE,GAAG,CAACA,EAAN;AACAC,MAAAA,EAAE,GAAG,CAACA,EAAN;;AACA,UAAIzkB,CAAC,IAAI,IAAT,EAAe;AACX,YAAIkP,GAAG,GAAGtH,IAAI,CAACiB,EAAL,GAAU,GAApB;AAAA,YACI8F,EAAE,GAAGxG,CAAC,GAAGqc,EAAE,GAAG5c,IAAI,CAAC6H,GAAL,CAAS,CAACgV,EAAD,GAAMvV,GAAf,CADlB;AAAA,YAEIL,EAAE,GAAG1G,CAAC,GAAGqc,EAAE,GAAG5c,IAAI,CAAC6H,GAAL,CAAS,CAACzP,CAAD,GAAKkP,GAAd,CAFlB;AAAA,YAGIN,EAAE,GAAGtG,CAAC,GAAGkc,EAAE,GAAG5c,IAAI,CAACgB,GAAL,CAAS,CAAC6b,EAAD,GAAMvV,GAAf,CAHlB;AAAA,YAIIJ,EAAE,GAAGxG,CAAC,GAAGkc,EAAE,GAAG5c,IAAI,CAACgB,GAAL,CAAS,CAAC5I,CAAD,GAAKkP,GAAd,CAJlB;AAAA,YAKItJ,GAAG,GAAG,CAAC,CAAC,GAAD,EAAM+I,EAAN,EAAUC,EAAV,CAAD,EAAgB,CAAC,GAAD,EAAM4V,EAAN,EAAUA,EAAV,EAAc,CAAd,EAAiB,EAAExkB,CAAC,GAAGykB,EAAJ,GAAS,GAAX,CAAjB,EAAkC,CAAlC,EAAqC5V,EAArC,EAAyCC,EAAzC,CAAhB,CALV;AAMH,OAPD,MAOO;AACHlJ,QAAAA,GAAG,GAAG,CACF,CAAC,GAAD,EAAMuC,CAAN,EAASG,CAAT,CADE,EAEF,CAAC,GAAD,EAAM,CAAN,EAAS,CAACmc,EAAV,CAFE,EAGF,CAAC,GAAD,EAAMD,EAAN,EAAUC,EAAV,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,IAAIA,EAA9B,CAHE,EAIF,CAAC,GAAD,EAAMD,EAAN,EAAUC,EAAV,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAAC,CAAD,GAAKA,EAA/B,CAJE,EAKF,CAAC,GAAD,CALE,CAAN;AAOH;;AACD7e,MAAAA,GAAG,CAAC3B,QAAJ,GAAeA,QAAf;AACA,aAAO2B,GAAP;AACH;;AACD,QAAI2Q,OAAO,GAAGvN,IAAI,CAACsN,QAAnB;AAAA,QACIoa,OAAO,GAAG;AACV1gB,MAAAA,IAAI,EAAE,UAAUxE,EAAV,EAAc;AAChB,eAAOA,EAAE,CAACQ,IAAH,CAAQ,MAAR,CAAP;AACH,OAHS;AAIVgb,MAAAA,MAAM,EAAE,UAAUxb,EAAV,EAAc;AAClB,YAAIQ,IAAI,GAAGuK,OAAO,CAAC/K,EAAD,CAAlB;AACA,eAAOilB,WAAW,CAACzkB,IAAI,CAAC4U,EAAN,EAAU5U,IAAI,CAAC6U,EAAf,EAAmB7U,IAAI,CAACkG,CAAxB,CAAlB;AACH,OAPS;AAQVyV,MAAAA,OAAO,EAAE,UAAUnc,EAAV,EAAc;AACnB,YAAIQ,IAAI,GAAGuK,OAAO,CAAC/K,EAAD,CAAlB;AACA,eAAOilB,WAAW,CAACzkB,IAAI,CAAC4U,EAAL,IAAW,CAAZ,EAAe5U,IAAI,CAAC6U,EAAL,IAAW,CAA1B,EAA6B7U,IAAI,CAACwY,EAAlC,EAAsCxY,IAAI,CAACyY,EAA3C,CAAlB;AACH,OAXS;AAYVsC,MAAAA,IAAI,EAAE,UAAUvb,EAAV,EAAc;AAChB,YAAIQ,IAAI,GAAGuK,OAAO,CAAC/K,EAAD,CAAlB;AACA,eAAOue,QAAQ,CAAC/d,IAAI,CAAC7D,CAAL,IAAU,CAAX,EAAc6D,IAAI,CAAC1D,CAAL,IAAU,CAAxB,EAA2B0D,IAAI,CAACsD,KAAhC,EAAuCtD,IAAI,CAACuD,MAA5C,EAAoDvD,IAAI,CAACwY,EAAzD,EAA6DxY,IAAI,CAACyY,EAAlE,CAAf;AACH,OAfS;AAgBV8C,MAAAA,KAAK,EAAE,UAAU/b,EAAV,EAAc;AACjB,YAAIQ,IAAI,GAAGuK,OAAO,CAAC/K,EAAD,CAAlB;AACA,eAAOue,QAAQ,CAAC/d,IAAI,CAAC7D,CAAL,IAAU,CAAX,EAAc6D,IAAI,CAAC1D,CAAL,IAAU,CAAxB,EAA2B0D,IAAI,CAACsD,KAAhC,EAAuCtD,IAAI,CAACuD,MAA5C,CAAf;AACH,OAnBS;AAoBV+Y,MAAAA,IAAI,EAAE,UAAU9c,EAAV,EAAc;AAChB,eAAO,MAAM,CAACA,EAAE,CAACQ,IAAH,CAAQ,IAAR,KAAiB,CAAlB,EAAqBR,EAAE,CAACQ,IAAH,CAAQ,IAAR,KAAiB,CAAtC,EAAyCR,EAAE,CAACQ,IAAH,CAAQ,IAAR,CAAzC,EAAwDR,EAAE,CAACQ,IAAH,CAAQ,IAAR,CAAxD,CAAb;AACH,OAtBS;AAuBVuc,MAAAA,QAAQ,EAAE,UAAU/c,EAAV,EAAc;AACpB,eAAO,MAAMA,EAAE,CAACQ,IAAH,CAAQ,QAAR,CAAb;AACH,OAzBS;AA0BVyc,MAAAA,OAAO,EAAE,UAAUjd,EAAV,EAAc;AACnB,eAAO,MAAMA,EAAE,CAACQ,IAAH,CAAQ,QAAR,CAAN,GAA0B,GAAjC;AACH,OA5BS;AA6BV0R,MAAAA,KAAK,EAAE,UAAUlS,EAAV,EAAc;AACjB,YAAIkK,IAAI,GAAGlK,EAAE,CAAC6E,IAAH,CAAQqH,OAAR,EAAX;AACA,eAAOqS,QAAQ,CAACrU,IAAI,CAACvN,CAAN,EAASuN,IAAI,CAACpN,CAAd,EAAiBoN,IAAI,CAACpG,KAAtB,EAA6BoG,IAAI,CAACnG,MAAlC,CAAf;AACH;AAhCS,KADd;;AAmCA,aAASohB,cAAT,CAAwB1G,SAAxB,EAAmC;AAC/B,UAAIpV,GAAG,GAAG4U,KAAK,CAACQ,SAAD,CAAf;AAAA,UACI2G,SAAS,GAAG9vB,MAAM,CAACK,SAAP,CAAiB8L,WADjC;;AAEA,UAAI4H,GAAG,CAACgc,GAAR,EAAa;AACT,eAAO7G,SAAS,CAACnV,GAAG,CAACgc,GAAL,CAAhB;AACH;;AACD,UAAI,CAAC7nB,IAAI,CAACM,EAAL,CAAQ2gB,SAAR,EAAmB,OAAnB,CAAD,IAAgC,CAACjhB,IAAI,CAACM,EAAL,CAAQ2gB,SAAS,IAAIA,SAAS,CAAC,CAAD,CAA9B,EAAmC,OAAnC,CAArC,EAAkF;AAC9EA,QAAAA,SAAS,GAAGjhB,IAAI,CAAC2L,eAAL,CAAqBsV,SAArB,CAAZ;AACH;;AACD,UAAIrkB,GAAG,GAAG,EAAV;AAAA,UACIuC,CAAC,GAAG,CADR;AAAA,UAEIG,CAAC,GAAG,CAFR;AAAA,UAGIujB,EAAE,GAAG,CAHT;AAAA,UAIIC,EAAE,GAAG,CAJT;AAAA,UAKI9kB,KAAK,GAAG,CALZ;;AAMA,UAAIijB,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,KAAmB,GAAvB,EAA4B;AACxB9hB,QAAAA,CAAC,GAAG8hB,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,CAAJ;AACA3hB,QAAAA,CAAC,GAAG2hB,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,CAAJ;AACA4B,QAAAA,EAAE,GAAG1jB,CAAL;AACA2jB,QAAAA,EAAE,GAAGxjB,CAAL;AACAtB,QAAAA,KAAK;AACLpB,QAAAA,GAAG,CAAC5D,IAAJ,CAAS,CAAC,GAAD,EAAMmG,CAAN,EAASG,CAAT,CAAT;AACH;;AACD,WAAK,IAAI/H,CAAC,GAAGyG,KAAR,EAAexG,EAAE,GAAGypB,SAAS,CAACxpB,MAAnC,EAA2CF,CAAC,GAAGC,EAA/C,EAAmDD,CAAC,EAApD,EAAwD;AACpD,YAAI2R,CAAC,GAAGtM,GAAG,CAACrF,CAAD,CAAH,GAAS,EAAjB;AAAA,YACIuwB,EAAE,GAAG7G,SAAS,CAAC1pB,CAAD,CADlB;;AAEA,YAAIuwB,EAAE,CAAC,CAAD,CAAF,IAASF,SAAS,CAACvvB,IAAV,CAAeyvB,EAAE,CAAC,CAAD,CAAjB,CAAb,EAAoC;AAChC5e,UAAAA,CAAC,CAAC,CAAD,CAAD,GAAO0e,SAAS,CAACvvB,IAAV,CAAeyvB,EAAE,CAAC,CAAD,CAAjB,CAAP;;AACA,kBAAQ5e,CAAC,CAAC,CAAD,CAAT;AACI,iBAAK,GAAL;AACIA,cAAAA,CAAC,CAAC,CAAD,CAAD,GAAO4e,EAAE,CAAC,CAAD,CAAT;AACA5e,cAAAA,CAAC,CAAC,CAAD,CAAD,GAAO4e,EAAE,CAAC,CAAD,CAAT;AACA5e,cAAAA,CAAC,CAAC,CAAD,CAAD,GAAO4e,EAAE,CAAC,CAAD,CAAT;AACA5e,cAAAA,CAAC,CAAC,CAAD,CAAD,GAAO4e,EAAE,CAAC,CAAD,CAAT;AACA5e,cAAAA,CAAC,CAAC,CAAD,CAAD,GAAO4e,EAAE,CAAC,CAAD,CAAT;AACA5e,cAAAA,CAAC,CAAC,CAAD,CAAD,GAAO,CAAC,CAAC4e,EAAE,CAAC,CAAD,CAAF,GAAQ3oB,CAAT,EAAYgL,OAAZ,CAAoB,CAApB,CAAR;AACAjB,cAAAA,CAAC,CAAC,CAAD,CAAD,GAAO,CAAC,CAAC4e,EAAE,CAAC,CAAD,CAAF,GAAQxoB,CAAT,EAAY6K,OAAZ,CAAoB,CAApB,CAAR;AACA;;AACJ,iBAAK,GAAL;AACIjB,cAAAA,CAAC,CAAC,CAAD,CAAD,GAAO,CAAC,CAAC4e,EAAE,CAAC,CAAD,CAAF,GAAQxoB,CAAT,EAAY6K,OAAZ,CAAoB,CAApB,CAAR;AACA;;AACJ,iBAAK,GAAL;AACI0Y,cAAAA,EAAE,GAAGiF,EAAE,CAAC,CAAD,CAAP;AACAhF,cAAAA,EAAE,GAAGgF,EAAE,CAAC,CAAD,CAAP;;AACJ;AACI,mBAAK,IAAIpuB,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGmuB,EAAE,CAACrwB,MAAxB,EAAgCiC,CAAC,GAAGC,EAApC,EAAwCD,CAAC,EAAzC,EAA6C;AACzCwP,gBAAAA,CAAC,CAACxP,CAAD,CAAD,GAAO,CAAC,CAACouB,EAAE,CAACpuB,CAAD,CAAF,IAAUA,CAAC,GAAG,CAAL,GAAUyF,CAAV,GAAcG,CAAvB,CAAD,EAA4B6K,OAA5B,CAAoC,CAApC,CAAR;AACH;;AAnBT;AAqBH,SAvBD,MAuBO;AACHjB,UAAAA,CAAC,GAAGtM,GAAG,CAACrF,CAAD,CAAH,GAAS,EAAb;;AACA,cAAIuwB,EAAE,CAAC,CAAD,CAAF,IAAS,GAAb,EAAkB;AACdjF,YAAAA,EAAE,GAAGiF,EAAE,CAAC,CAAD,CAAF,GAAQ3oB,CAAb;AACA2jB,YAAAA,EAAE,GAAGgF,EAAE,CAAC,CAAD,CAAF,GAAQxoB,CAAb;AACH;;AACD,eAAK,IAAI7F,CAAC,GAAG,CAAR,EAAWstB,EAAE,GAAGe,EAAE,CAACrwB,MAAxB,EAAgCgC,CAAC,GAAGstB,EAApC,EAAwCttB,CAAC,EAAzC,EAA6C;AACzCmD,YAAAA,GAAG,CAACrF,CAAD,CAAH,CAAOkC,CAAP,IAAYquB,EAAE,CAACruB,CAAD,CAAd;AACH;AACJ;;AACD,YAAI4E,GAAG,GAAGzB,GAAG,CAACrF,CAAD,CAAH,CAAOE,MAAjB;;AACA,gBAAQmF,GAAG,CAACrF,CAAD,CAAH,CAAO,CAAP,CAAR;AACI,eAAK,GAAL;AACI4H,YAAAA,CAAC,GAAG0jB,EAAJ;AACAvjB,YAAAA,CAAC,GAAGwjB,EAAJ;AACA;;AACJ,eAAK,GAAL;AACI3jB,YAAAA,CAAC,IAAI,CAACvC,GAAG,CAACrF,CAAD,CAAH,CAAO8G,GAAG,GAAG,CAAb,CAAN;AACA;;AACJ,eAAK,GAAL;AACIiB,YAAAA,CAAC,IAAI,CAAC1C,GAAG,CAACrF,CAAD,CAAH,CAAO8G,GAAG,GAAG,CAAb,CAAN;AACA;;AACJ;AACIc,YAAAA,CAAC,IAAI,CAACvC,GAAG,CAACrF,CAAD,CAAH,CAAO8G,GAAG,GAAG,CAAb,CAAN;AACAiB,YAAAA,CAAC,IAAI,CAAC1C,GAAG,CAACrF,CAAD,CAAH,CAAO8G,GAAG,GAAG,CAAb,CAAN;AAbR;AAeH;;AACDzB,MAAAA,GAAG,CAAC3B,QAAJ,GAAeA,QAAf;AACA4Q,MAAAA,GAAG,CAACgc,GAAJ,GAAU7G,SAAS,CAACpkB,GAAD,CAAnB;AACA,aAAOA,GAAP;AACH;;AACD,aAASmrB,cAAT,CAAwB9G,SAAxB,EAAmC;AAC/B,UAAIpV,GAAG,GAAG4U,KAAK,CAACQ,SAAD,CAAf;;AACA,UAAIpV,GAAG,CAACxM,GAAR,EAAa;AACT,eAAO2hB,SAAS,CAACnV,GAAG,CAACxM,GAAL,CAAhB;AACH;;AACD,UAAI,CAACiB,EAAE,CAAC2gB,SAAD,EAAY,OAAZ,CAAH,IAA2B,CAAC3gB,EAAE,CAAC2gB,SAAS,IAAIA,SAAS,CAAC,CAAD,CAAvB,EAA4B,OAA5B,CAAlC,EAAwE;AAAE;AACtEA,QAAAA,SAAS,GAAGjhB,IAAI,CAAC2L,eAAL,CAAqBsV,SAArB,CAAZ;AACH;;AACD,UAAI,CAACA,SAAD,IAAc,CAACA,SAAS,CAACxpB,MAA7B,EAAqC;AACjC,eAAO,CAAC,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,CAAD,CAAP;AACH;;AACD,UAAImF,GAAG,GAAG,EAAV;AAAA,UACIuC,CAAC,GAAG,CADR;AAAA,UAEIG,CAAC,GAAG,CAFR;AAAA,UAGIujB,EAAE,GAAG,CAHT;AAAA,UAIIC,EAAE,GAAG,CAJT;AAAA,UAKI9kB,KAAK,GAAG,CALZ;AAAA,UAMIgqB,GANJ;;AAOA,UAAI/G,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,KAAmB,GAAvB,EAA4B;AACxB9hB,QAAAA,CAAC,GAAG,CAAC8hB,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,CAAL;AACA3hB,QAAAA,CAAC,GAAG,CAAC2hB,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,CAAL;AACA4B,QAAAA,EAAE,GAAG1jB,CAAL;AACA2jB,QAAAA,EAAE,GAAGxjB,CAAL;AACAtB,QAAAA,KAAK;AACLpB,QAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAC,GAAD,EAAMuC,CAAN,EAASG,CAAT,CAAT;AACH;;AACD,UAAI2oB,GAAG,GAAGhH,SAAS,CAACxpB,MAAV,IAAoB,CAApB,IACNwpB,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,KAAmB,GADb,IAENA,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,EAAgBrP,WAAhB,MAAiC,GAF3B,IAGNqP,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,EAAgBrP,WAAhB,MAAiC,GAHrC;;AAIA,WAAK,IAAI1I,CAAJ,EAAO4e,EAAP,EAAWvwB,CAAC,GAAGyG,KAAf,EAAsBxG,EAAE,GAAGypB,SAAS,CAACxpB,MAA1C,EAAkDF,CAAC,GAAGC,EAAtD,EAA0DD,CAAC,EAA3D,EAA+D;AAC3DqF,QAAAA,GAAG,CAAC5D,IAAJ,CAASkQ,CAAC,GAAG,EAAb;AACA4e,QAAAA,EAAE,GAAG7G,SAAS,CAAC1pB,CAAD,CAAd;AACAywB,QAAAA,GAAG,GAAGF,EAAE,CAAC,CAAD,CAAR;;AACA,YAAIE,GAAG,IAAIA,GAAG,CAACpW,WAAJ,EAAX,EAA8B;AAC1B1I,UAAAA,CAAC,CAAC,CAAD,CAAD,GAAO8e,GAAG,CAACpW,WAAJ,EAAP;;AACA,kBAAQ1I,CAAC,CAAC,CAAD,CAAT;AACI,iBAAK,GAAL;AACIA,cAAAA,CAAC,CAAC,CAAD,CAAD,GAAO4e,EAAE,CAAC,CAAD,CAAT;AACA5e,cAAAA,CAAC,CAAC,CAAD,CAAD,GAAO4e,EAAE,CAAC,CAAD,CAAT;AACA5e,cAAAA,CAAC,CAAC,CAAD,CAAD,GAAO4e,EAAE,CAAC,CAAD,CAAT;AACA5e,cAAAA,CAAC,CAAC,CAAD,CAAD,GAAO4e,EAAE,CAAC,CAAD,CAAT;AACA5e,cAAAA,CAAC,CAAC,CAAD,CAAD,GAAO4e,EAAE,CAAC,CAAD,CAAT;AACA5e,cAAAA,CAAC,CAAC,CAAD,CAAD,GAAO,CAAC4e,EAAE,CAAC,CAAD,CAAH,GAAS3oB,CAAhB;AACA+J,cAAAA,CAAC,CAAC,CAAD,CAAD,GAAO,CAAC4e,EAAE,CAAC,CAAD,CAAH,GAASxoB,CAAhB;AACA;;AACJ,iBAAK,GAAL;AACI4J,cAAAA,CAAC,CAAC,CAAD,CAAD,GAAO,CAAC4e,EAAE,CAAC,CAAD,CAAH,GAASxoB,CAAhB;AACA;;AACJ,iBAAK,GAAL;AACI4J,cAAAA,CAAC,CAAC,CAAD,CAAD,GAAO,CAAC4e,EAAE,CAAC,CAAD,CAAH,GAAS3oB,CAAhB;AACA;;AACJ,iBAAK,GAAL;AACI,kBAAI+oB,IAAI,GAAG,CAAC/oB,CAAD,EAAIG,CAAJ,EAAOxF,MAAP,CAAcguB,EAAE,CAAC1vB,KAAH,CAAS,CAAT,CAAd,CAAX;;AACA,mBAAK,IAAIsB,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGuuB,IAAI,CAACzwB,MAA1B,EAAkCiC,CAAC,GAAGC,EAAtC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3CwuB,gBAAAA,IAAI,CAACxuB,CAAD,CAAJ,GAAU,CAACwuB,IAAI,CAACxuB,CAAD,CAAL,GAAWyF,CAArB;AACA+oB,gBAAAA,IAAI,CAAC,EAAExuB,CAAH,CAAJ,GAAY,CAACwuB,IAAI,CAACxuB,CAAD,CAAL,GAAW4F,CAAvB;AACH;;AACD1C,cAAAA,GAAG,CAACurB,GAAJ;AACAvrB,cAAAA,GAAG,GAAGA,GAAG,CAAC9C,MAAJ,CAAWsuB,iBAAiB,CAACF,IAAD,EAAOD,GAAP,CAA5B,CAAN;AACA;;AACJ,iBAAK,GAAL;AACIrrB,cAAAA,GAAG,CAACurB,GAAJ;AACAD,cAAAA,IAAI,GAAGT,WAAW,CAACtoB,CAAD,EAAIG,CAAJ,EAAOwoB,EAAE,CAAC,CAAD,CAAT,EAAcA,EAAE,CAAC,CAAD,CAAhB,CAAlB;AACAI,cAAAA,IAAI,CAAClvB,IAAL,CAAUkvB,IAAI,CAAC,CAAD,CAAd;AACAtrB,cAAAA,GAAG,GAAGA,GAAG,CAAC9C,MAAJ,CAAWouB,IAAX,CAAN;AACA;;AACJ,iBAAK,GAAL;AACItrB,cAAAA,GAAG,CAACurB,GAAJ;AACAvrB,cAAAA,GAAG,GAAGA,GAAG,CAAC9C,MAAJ,CAAW2tB,WAAW,CAACtoB,CAAD,EAAIG,CAAJ,EAAOwoB,EAAE,CAAC,CAAD,CAAT,EAAcA,EAAE,CAAC,CAAD,CAAhB,EAAqBA,EAAE,CAAC,CAAD,CAAvB,CAAtB,CAAN;AACA5e,cAAAA,CAAC,GAAG,CAAC,GAAD,EAAMpP,MAAN,CAAa8C,GAAG,CAACA,GAAG,CAACnF,MAAJ,GAAa,CAAd,CAAH,CAAoBW,KAApB,CAA0B,CAAC,CAA3B,CAAb,CAAJ;AACA;;AACJ,iBAAK,GAAL;AACIyqB,cAAAA,EAAE,GAAG,CAACiF,EAAE,CAAC,CAAD,CAAH,GAAS3oB,CAAd;AACA2jB,cAAAA,EAAE,GAAG,CAACgF,EAAE,CAAC,CAAD,CAAH,GAASxoB,CAAd;;AACJ;AACI,mBAAK5F,CAAC,GAAG,CAAJ,EAAOC,EAAE,GAAGmuB,EAAE,CAACrwB,MAApB,EAA4BiC,CAAC,GAAGC,EAAhC,EAAoCD,CAAC,EAArC,EAAyC;AACrCwP,gBAAAA,CAAC,CAACxP,CAAD,CAAD,GAAO,CAACouB,EAAE,CAACpuB,CAAD,CAAH,IAAWA,CAAC,GAAG,CAAL,GAAUyF,CAAV,GAAcG,CAAxB,CAAP;AACH;;AA1CT;AA4CH,SA9CD,MA8CO,IAAI0oB,GAAG,IAAI,GAAX,EAAgB;AACnBE,UAAAA,IAAI,GAAG,CAAC/oB,CAAD,EAAIG,CAAJ,EAAOxF,MAAP,CAAcguB,EAAE,CAAC1vB,KAAH,CAAS,CAAT,CAAd,CAAP;AACAwE,UAAAA,GAAG,CAACurB,GAAJ;AACAvrB,UAAAA,GAAG,GAAGA,GAAG,CAAC9C,MAAJ,CAAWsuB,iBAAiB,CAACF,IAAD,EAAOD,GAAP,CAA5B,CAAN;AACA/e,UAAAA,CAAC,GAAG,CAAC,GAAD,EAAMpP,MAAN,CAAaguB,EAAE,CAAC1vB,KAAH,CAAS,CAAC,CAAV,CAAb,CAAJ;AACH,SALM,MAKA,IAAI4vB,GAAG,IAAI,GAAX,EAAgB;AACnBprB,UAAAA,GAAG,CAACurB,GAAJ;AACAD,UAAAA,IAAI,GAAGT,WAAW,CAACtoB,CAAD,EAAIG,CAAJ,EAAOwoB,EAAE,CAAC,CAAD,CAAT,EAAcA,EAAE,CAAC,CAAD,CAAhB,CAAlB;AACAI,UAAAA,IAAI,CAAClvB,IAAL,CAAUkvB,IAAI,CAAC,CAAD,CAAd;AACAtrB,UAAAA,GAAG,GAAGA,GAAG,CAAC9C,MAAJ,CAAWouB,IAAX,CAAN;AACH,SALM,MAKA,IAAIF,GAAG,IAAI,GAAX,EAAgB;AACnBprB,UAAAA,GAAG,CAACurB,GAAJ;AACAvrB,UAAAA,GAAG,GAAGA,GAAG,CAAC9C,MAAJ,CAAW2tB,WAAW,CAACtoB,CAAD,EAAIG,CAAJ,EAAOwoB,EAAE,CAAC,CAAD,CAAT,EAAcA,EAAE,CAAC,CAAD,CAAhB,EAAqBA,EAAE,CAAC,CAAD,CAAvB,CAAtB,CAAN;AACA5e,UAAAA,CAAC,GAAG,CAAC,GAAD,EAAMpP,MAAN,CAAa8C,GAAG,CAACA,GAAG,CAACnF,MAAJ,GAAa,CAAd,CAAH,CAAoBW,KAApB,CAA0B,CAAC,CAA3B,CAAb,CAAJ;AACH,SAJM,MAIA;AACH,eAAK,IAAIqB,CAAC,GAAG,CAAR,EAAWstB,EAAE,GAAGe,EAAE,CAACrwB,MAAxB,EAAgCgC,CAAC,GAAGstB,EAApC,EAAwCttB,CAAC,EAAzC,EAA6C;AACzCyP,YAAAA,CAAC,CAACzP,CAAD,CAAD,GAAOquB,EAAE,CAACruB,CAAD,CAAT;AACH;AACJ;;AACDuuB,QAAAA,GAAG,GAAGA,GAAG,CAACpW,WAAJ,EAAN;;AACA,YAAIoW,GAAG,IAAI,GAAX,EAAgB;AACZ,kBAAQ9e,CAAC,CAAC,CAAD,CAAT;AACI,iBAAK,GAAL;AACI/J,cAAAA,CAAC,GAAG,CAAC0jB,EAAL;AACAvjB,cAAAA,CAAC,GAAG,CAACwjB,EAAL;AACA;;AACJ,iBAAK,GAAL;AACI3jB,cAAAA,CAAC,GAAG+J,CAAC,CAAC,CAAD,CAAL;AACA;;AACJ,iBAAK,GAAL;AACI5J,cAAAA,CAAC,GAAG4J,CAAC,CAAC,CAAD,CAAL;AACA;;AACJ,iBAAK,GAAL;AACI2Z,cAAAA,EAAE,GAAG3Z,CAAC,CAACA,CAAC,CAACzR,MAAF,GAAW,CAAZ,CAAN;AACAqrB,cAAAA,EAAE,GAAG5Z,CAAC,CAACA,CAAC,CAACzR,MAAF,GAAW,CAAZ,CAAN;;AACJ;AACI0H,cAAAA,CAAC,GAAG+J,CAAC,CAACA,CAAC,CAACzR,MAAF,GAAW,CAAZ,CAAL;AACA6H,cAAAA,CAAC,GAAG4J,CAAC,CAACA,CAAC,CAACzR,MAAF,GAAW,CAAZ,CAAL;AAhBR;AAkBH;AACJ;;AACDmF,MAAAA,GAAG,CAAC3B,QAAJ,GAAeA,QAAf;AACA4Q,MAAAA,GAAG,CAACxM,GAAJ,GAAU2hB,SAAS,CAACpkB,GAAD,CAAnB;AACA,aAAOA,GAAP;AACH;;AACD,aAASyrB,GAAT,CAAa1iB,EAAb,EAAiBC,EAAjB,EAAqBC,EAArB,EAAyBC,EAAzB,EAA6B;AACzB,aAAO,CAACH,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,EAAiBD,EAAjB,EAAqBC,EAArB,CAAP;AACH;;AACD,aAASwiB,GAAT,CAAa3iB,EAAb,EAAiBC,EAAjB,EAAqBqd,EAArB,EAAyBC,EAAzB,EAA6Brd,EAA7B,EAAiCC,EAAjC,EAAqC;AACjC,UAAIyiB,GAAG,GAAG,IAAI,CAAd;AAAA,UACIC,GAAG,GAAG,IAAI,CADd;;AAEA,aAAO,CACCD,GAAG,GAAG5iB,EAAN,GAAW6iB,GAAG,GAAGvF,EADlB,EAECsF,GAAG,GAAG3iB,EAAN,GAAW4iB,GAAG,GAAGtF,EAFlB,EAGCqF,GAAG,GAAG1iB,EAAN,GAAW2iB,GAAG,GAAGvF,EAHlB,EAICsF,GAAG,GAAGziB,EAAN,GAAW0iB,GAAG,GAAGtF,EAJlB,EAKCrd,EALD,EAMCC,EAND,CAAP;AAQH;;AACD,aAAS2iB,GAAT,CAAa9iB,EAAb,EAAiBC,EAAjB,EAAqB4V,EAArB,EAAyBC,EAAzB,EAA6B/V,KAA7B,EAAoCgjB,cAApC,EAAoDC,UAApD,EAAgE9iB,EAAhE,EAAoEC,EAApE,EAAwE8iB,SAAxE,EAAmF;AAC/E;AACA;AACA,UAAIC,IAAI,GAAGhpB,EAAE,GAAG,GAAL,GAAW,GAAtB;AAAA,UACIqG,GAAG,GAAGrG,EAAE,GAAG,GAAL,IAAY,CAAC6F,KAAD,IAAU,CAAtB,CADV;AAAA,UAEI9I,GAAG,GAAG,EAFV;AAAA,UAGIgpB,EAHJ;AAAA,UAIIzY,MAAM,GAAGnN,IAAI,CAACW,CAAL,CAAOuE,MAAP,CAAc,UAAU/F,CAAV,EAAaG,CAAb,EAAgB4G,GAAhB,EAAqB;AACxC,YAAI9G,CAAC,GAAGD,CAAC,GAAGgC,IAAI,CAACsF,GAAL,CAASP,GAAT,CAAJ,GAAoB5G,CAAC,GAAG6B,IAAI,CAACvB,GAAL,CAASsG,GAAT,CAAhC;AAAA,YACI3G,CAAC,GAAGJ,CAAC,GAAGgC,IAAI,CAACvB,GAAL,CAASsG,GAAT,CAAJ,GAAoB5G,CAAC,GAAG6B,IAAI,CAACsF,GAAL,CAASP,GAAT,CADhC;AAEA,eAAO;AAAC/G,UAAAA,CAAC,EAAEC,CAAJ;AAAOE,UAAAA,CAAC,EAAEC;AAAV,SAAP;AACH,OAJQ,CAJb;;AASA,UAAI,CAACqpB,SAAL,EAAgB;AACZhD,QAAAA,EAAE,GAAGzY,MAAM,CAACxH,EAAD,EAAKC,EAAL,EAAS,CAACM,GAAV,CAAX;AACAP,QAAAA,EAAE,GAAGigB,EAAE,CAACzmB,CAAR;AACAyG,QAAAA,EAAE,GAAGggB,EAAE,CAACtmB,CAAR;AACAsmB,QAAAA,EAAE,GAAGzY,MAAM,CAACtH,EAAD,EAAKC,EAAL,EAAS,CAACI,GAAV,CAAX;AACAL,QAAAA,EAAE,GAAG+f,EAAE,CAACzmB,CAAR;AACA2G,QAAAA,EAAE,GAAG8f,EAAE,CAACtmB,CAAR;AACA,YAAImH,GAAG,GAAGtF,IAAI,CAACsF,GAAL,CAAS5G,EAAE,GAAG,GAAL,GAAW6F,KAApB,CAAV;AAAA,YACI9F,GAAG,GAAGuB,IAAI,CAACvB,GAAL,CAASC,EAAE,GAAG,GAAL,GAAW6F,KAApB,CADV;AAAA,YAEIvG,CAAC,GAAG,CAACwG,EAAE,GAAGE,EAAN,IAAY,CAFpB;AAAA,YAGIvG,CAAC,GAAG,CAACsG,EAAE,GAAGE,EAAN,IAAY,CAHpB;AAIA,YAAI3F,CAAC,GAAIhB,CAAC,GAAGA,CAAL,IAAWqc,EAAE,GAAGA,EAAhB,IAAuBlc,CAAC,GAAGA,CAAL,IAAWmc,EAAE,GAAGA,EAAhB,CAA9B;;AACA,YAAItb,CAAC,GAAG,CAAR,EAAW;AACPA,UAAAA,CAAC,GAAGgB,IAAI,CAACjC,IAAL,CAAUiB,CAAV,CAAJ;AACAqb,UAAAA,EAAE,GAAGrb,CAAC,GAAGqb,EAAT;AACAC,UAAAA,EAAE,GAAGtb,CAAC,GAAGsb,EAAT;AACH;;AACD,YAAIqN,GAAG,GAAGtN,EAAE,GAAGA,EAAf;AAAA,YACIuN,GAAG,GAAGtN,EAAE,GAAGA,EADf;AAAA,YAEIhiB,CAAC,GAAG,CAACivB,cAAc,IAAIC,UAAlB,GAA+B,CAAC,CAAhC,GAAoC,CAArC,IACAxnB,IAAI,CAACjC,IAAL,CAAUG,GAAG,CAAC,CAACypB,GAAG,GAAGC,GAAN,GAAYD,GAAG,GAAGxpB,CAAN,GAAUA,CAAtB,GAA0BypB,GAAG,GAAG5pB,CAAN,GAAUA,CAArC,KAA2C2pB,GAAG,GAAGxpB,CAAN,GAAUA,CAAV,GAAcypB,GAAG,GAAG5pB,CAAN,GAAUA,CAAnE,CAAD,CAAb,CAHR;AAAA,YAIIyY,EAAE,GAAGne,CAAC,GAAG+hB,EAAJ,GAASlc,CAAT,GAAamc,EAAb,GAAkB,CAAC9V,EAAE,GAAGE,EAAN,IAAY,CAJvC;AAAA,YAKIgS,EAAE,GAAGpe,CAAC,GAAG,CAACgiB,EAAL,GAAUtc,CAAV,GAAcqc,EAAd,GAAmB,CAAC5V,EAAE,GAAGE,EAAN,IAAY,CALxC;AAAA,YAMIkjB,EAAE,GAAG7nB,IAAI,CAACuF,IAAL,CAAU,CAAC,CAACd,EAAE,GAAGiS,EAAN,IAAY4D,EAAb,EAAiBtR,OAAjB,CAAyB,CAAzB,CAAV,CANT;AAAA,YAOInP,EAAE,GAAGmG,IAAI,CAACuF,IAAL,CAAU,CAAC,CAACZ,EAAE,GAAG+R,EAAN,IAAY4D,EAAb,EAAiBtR,OAAjB,CAAyB,CAAzB,CAAV,CAPT;AASA6e,QAAAA,EAAE,GAAGrjB,EAAE,GAAGiS,EAAL,GAAU/X,EAAE,GAAGmpB,EAAf,GAAoBA,EAAzB;AACAhuB,QAAAA,EAAE,GAAG6K,EAAE,GAAG+R,EAAL,GAAU/X,EAAE,GAAG7E,EAAf,GAAoBA,EAAzB;AACAguB,QAAAA,EAAE,GAAG,CAAL,KAAWA,EAAE,GAAGnpB,EAAE,GAAG,CAAL,GAASmpB,EAAzB;AACAhuB,QAAAA,EAAE,GAAG,CAAL,KAAWA,EAAE,GAAG6E,EAAE,GAAG,CAAL,GAAS7E,EAAzB;;AACA,YAAI2tB,UAAU,IAAIK,EAAE,GAAGhuB,EAAvB,EAA2B;AACvBguB,UAAAA,EAAE,GAAGA,EAAE,GAAGnpB,EAAE,GAAG,CAAf;AACH;;AACD,YAAI,CAAC8oB,UAAD,IAAe3tB,EAAE,GAAGguB,EAAxB,EAA4B;AACxBhuB,UAAAA,EAAE,GAAGA,EAAE,GAAG6E,EAAE,GAAG,CAAf;AACH;AACJ,OApCD,MAoCO;AACHmpB,QAAAA,EAAE,GAAGJ,SAAS,CAAC,CAAD,CAAd;AACA5tB,QAAAA,EAAE,GAAG4tB,SAAS,CAAC,CAAD,CAAd;AACAhR,QAAAA,EAAE,GAAGgR,SAAS,CAAC,CAAD,CAAd;AACA/Q,QAAAA,EAAE,GAAG+Q,SAAS,CAAC,CAAD,CAAd;AACH;;AACD,UAAIK,EAAE,GAAGjuB,EAAE,GAAGguB,EAAd;;AACA,UAAI3pB,GAAG,CAAC4pB,EAAD,CAAH,GAAUJ,IAAd,EAAoB;AAChB,YAAIK,KAAK,GAAGluB,EAAZ;AAAA,YACImuB,KAAK,GAAGtjB,EADZ;AAAA,YAEIujB,KAAK,GAAGtjB,EAFZ;AAGA9K,QAAAA,EAAE,GAAGguB,EAAE,GAAGH,IAAI,IAAIF,UAAU,IAAI3tB,EAAE,GAAGguB,EAAnB,GAAwB,CAAxB,GAA4B,CAAC,CAAjC,CAAd;AACAnjB,QAAAA,EAAE,GAAG+R,EAAE,GAAG4D,EAAE,GAAGra,IAAI,CAACsF,GAAL,CAASzL,EAAT,CAAf;AACA8K,QAAAA,EAAE,GAAG+R,EAAE,GAAG4D,EAAE,GAAGta,IAAI,CAACvB,GAAL,CAAS5E,EAAT,CAAf;AACA4B,QAAAA,GAAG,GAAG6rB,GAAG,CAAC5iB,EAAD,EAAKC,EAAL,EAAS0V,EAAT,EAAaC,EAAb,EAAiB/V,KAAjB,EAAwB,CAAxB,EAA2BijB,UAA3B,EAAuCQ,KAAvC,EAA8CC,KAA9C,EAAqD,CAACpuB,EAAD,EAAKkuB,KAAL,EAAYtR,EAAZ,EAAgBC,EAAhB,CAArD,CAAT;AACH;;AACDoR,MAAAA,EAAE,GAAGjuB,EAAE,GAAGguB,EAAV;AACA,UAAIK,EAAE,GAAGloB,IAAI,CAACsF,GAAL,CAASuiB,EAAT,CAAT;AAAA,UACIM,EAAE,GAAGnoB,IAAI,CAACvB,GAAL,CAASopB,EAAT,CADT;AAAA,UAEIO,EAAE,GAAGpoB,IAAI,CAACsF,GAAL,CAASzL,EAAT,CAFT;AAAA,UAGIwuB,EAAE,GAAGroB,IAAI,CAACvB,GAAL,CAAS5E,EAAT,CAHT;AAAA,UAIIwE,CAAC,GAAG2B,IAAI,CAACqF,GAAL,CAASyiB,EAAE,GAAG,CAAd,CAJR;AAAA,UAKIQ,EAAE,GAAG,IAAI,CAAJ,GAAQjO,EAAR,GAAahc,CALtB;AAAA,UAMIkqB,EAAE,GAAG,IAAI,CAAJ,GAAQjO,EAAR,GAAajc,CANtB;AAAA,UAOImqB,EAAE,GAAG,CAAChkB,EAAD,EAAKC,EAAL,CAPT;AAAA,UAQIgkB,EAAE,GAAG,CAACjkB,EAAE,GAAG8jB,EAAE,GAAGH,EAAX,EAAe1jB,EAAE,GAAG8jB,EAAE,GAAGL,EAAzB,CART;AAAA,UASIQ,EAAE,GAAG,CAAChkB,EAAE,GAAG4jB,EAAE,GAAGD,EAAX,EAAe1jB,EAAE,GAAG4jB,EAAE,GAAGH,EAAzB,CATT;AAAA,UAUIO,EAAE,GAAG,CAACjkB,EAAD,EAAKC,EAAL,CAVT;AAWA8jB,MAAAA,EAAE,CAAC,CAAD,CAAF,GAAQ,IAAID,EAAE,CAAC,CAAD,CAAN,GAAYC,EAAE,CAAC,CAAD,CAAtB;AACAA,MAAAA,EAAE,CAAC,CAAD,CAAF,GAAQ,IAAID,EAAE,CAAC,CAAD,CAAN,GAAYC,EAAE,CAAC,CAAD,CAAtB;;AACA,UAAIhB,SAAJ,EAAe;AACX,eAAO,CAACgB,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAahwB,MAAb,CAAoB8C,GAApB,CAAP;AACH,OAFD,MAEO;AACHA,QAAAA,GAAG,GAAG,CAACgtB,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAahwB,MAAb,CAAoB8C,GAApB,EAAyB0I,IAAzB,GAAgChM,KAAhC,CAAsC,GAAtC,CAAN;AACA,YAAIywB,MAAM,GAAG,EAAb;;AACA,aAAK,IAAIxyB,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGoF,GAAG,CAACnF,MAAzB,EAAiCF,CAAC,GAAGC,EAArC,EAAyCD,CAAC,EAA1C,EAA8C;AAC1CwyB,UAAAA,MAAM,CAACxyB,CAAD,CAAN,GAAYA,CAAC,GAAG,CAAJ,GAAQ4V,MAAM,CAACvQ,GAAG,CAACrF,CAAC,GAAG,CAAL,CAAJ,EAAaqF,GAAG,CAACrF,CAAD,CAAhB,EAAqB2O,GAArB,CAAN,CAAgC5G,CAAxC,GAA4C6N,MAAM,CAACvQ,GAAG,CAACrF,CAAD,CAAJ,EAASqF,GAAG,CAACrF,CAAC,GAAG,CAAL,CAAZ,EAAqB2O,GAArB,CAAN,CAAgC/G,CAAxF;AACH;;AACD,eAAO4qB,MAAP;AACH;AACJ;;AACD,aAASC,gBAAT,CAA0B7I,GAA1B,EAA+BC,GAA/B,EAAoCC,GAApC,EAAyCC,GAAzC,EAA8CC,GAA9C,EAAmDC,GAAnD,EAAwDC,GAAxD,EAA6DC,GAA7D,EAAkEliB,CAAlE,EAAqE;AACjE,UAAIgjB,EAAE,GAAG,IAAIhjB,CAAb;AACA,aAAO;AACHL,QAAAA,CAAC,EAAEN,GAAG,CAAC2jB,EAAD,EAAK,CAAL,CAAH,GAAarB,GAAb,GAAmBtiB,GAAG,CAAC2jB,EAAD,EAAK,CAAL,CAAH,GAAa,CAAb,GAAiBhjB,CAAjB,GAAqB6hB,GAAxC,GAA8CmB,EAAE,GAAG,CAAL,GAAShjB,CAAT,GAAaA,CAAb,GAAiB+hB,GAA/D,GAAqE1iB,GAAG,CAACW,CAAD,EAAI,CAAJ,CAAH,GAAYiiB,GADjF;AAEHniB,QAAAA,CAAC,EAAET,GAAG,CAAC2jB,EAAD,EAAK,CAAL,CAAH,GAAapB,GAAb,GAAmBviB,GAAG,CAAC2jB,EAAD,EAAK,CAAL,CAAH,GAAa,CAAb,GAAiBhjB,CAAjB,GAAqB8hB,GAAxC,GAA8CkB,EAAE,GAAG,CAAL,GAAShjB,CAAT,GAAaA,CAAb,GAAiBgiB,GAA/D,GAAqE3iB,GAAG,CAACW,CAAD,EAAI,CAAJ,CAAH,GAAYkiB;AAFjF,OAAP;AAIH,KAj0B6C,CAm0B9C;AACA;AACA;AACA;;;AACA,aAAS2B,QAAT,CAAkB4G,EAAlB,EAAsBC,EAAtB,EAA0BvkB,EAA1B,EAA8BC,EAA9B,EAAkCC,EAAlC,EAAsCC,EAAtC,EAA0CC,EAA1C,EAA8CC,EAA9C,EAAkD;AAC9C,UAAImkB,OAAO,GAAG,EAAd;AAAA,UACIC,MAAM,GAAG,CAAC,EAAD,EAAK,EAAL,CADb;AAAA,UAEIpzB,CAFJ;AAAA,UAEOC,CAFP;AAAA,UAEU+U,CAFV;AAAA,UAEaxM,CAFb;AAAA,UAEgBgjB,EAFhB;AAAA,UAEoBG,EAFpB;AAAA,UAEwB0H,IAFxB;AAAA,UAE8BC,QAF9B;;AAGA,WAAK,IAAI/yB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuB,EAAEA,CAAzB,EAA4B;AACxB,YAAIA,CAAC,IAAI,CAAT,EAAY;AACRN,UAAAA,CAAC,GAAG,IAAIgzB,EAAJ,GAAS,KAAKtkB,EAAd,GAAmB,IAAIE,EAA3B;AACA7O,UAAAA,CAAC,GAAG,CAAC,CAAD,GAAKizB,EAAL,GAAU,IAAItkB,EAAd,GAAmB,IAAIE,EAAvB,GAA4B,IAAIE,EAApC;AACAiG,UAAAA,CAAC,GAAG,IAAIrG,EAAJ,GAAS,IAAIskB,EAAjB;AACH,SAJD,MAIO;AACHhzB,UAAAA,CAAC,GAAG,IAAIizB,EAAJ,GAAS,KAAKtkB,EAAd,GAAmB,IAAIE,EAA3B;AACA9O,UAAAA,CAAC,GAAG,CAAC,CAAD,GAAKkzB,EAAL,GAAU,IAAItkB,EAAd,GAAmB,IAAIE,EAAvB,GAA4B,IAAIE,EAApC;AACAgG,UAAAA,CAAC,GAAG,IAAIpG,EAAJ,GAAS,IAAIskB,EAAjB;AACH;;AACD,YAAI7qB,GAAG,CAACrI,CAAD,CAAH,GAAS,KAAb,EAAoB;AAChB,cAAIqI,GAAG,CAACpI,CAAD,CAAH,GAAS,KAAb,EAAoB;AAChB;AACH;;AACDuI,UAAAA,CAAC,GAAG,CAACwM,CAAD,GAAK/U,CAAT;;AACA,cAAI,IAAIuI,CAAJ,IAASA,CAAC,GAAG,CAAjB,EAAoB;AAChB2qB,YAAAA,OAAO,CAACnxB,IAAR,CAAawG,CAAb;AACH;;AACD;AACH;;AACD6qB,QAAAA,IAAI,GAAGpzB,CAAC,GAAGA,CAAJ,GAAQ,IAAI+U,CAAJ,GAAQhV,CAAvB;AACAszB,QAAAA,QAAQ,GAAGnpB,IAAI,CAACjC,IAAL,CAAUmrB,IAAV,CAAX;;AACA,YAAIA,IAAI,GAAG,CAAX,EAAc;AACV;AACH;;AACD7H,QAAAA,EAAE,GAAG,CAAC,CAACvrB,CAAD,GAAKqzB,QAAN,KAAmB,IAAItzB,CAAvB,CAAL;;AACA,YAAI,IAAIwrB,EAAJ,IAAUA,EAAE,GAAG,CAAnB,EAAsB;AAClB2H,UAAAA,OAAO,CAACnxB,IAAR,CAAawpB,EAAb;AACH;;AACDG,QAAAA,EAAE,GAAG,CAAC,CAAC1rB,CAAD,GAAKqzB,QAAN,KAAmB,IAAItzB,CAAvB,CAAL;;AACA,YAAI,IAAI2rB,EAAJ,IAAUA,EAAE,GAAG,CAAnB,EAAsB;AAClBwH,UAAAA,OAAO,CAACnxB,IAAR,CAAa2pB,EAAb;AACH;AACJ;;AAED,UAAIxjB,CAAJ;AAAA,UAAOG,CAAP;AAAA,UAAU5F,CAAC,GAAGywB,OAAO,CAAC1yB,MAAtB;AAAA,UACI8yB,IAAI,GAAG7wB,CADX;AAAA,UAEI8wB,EAFJ;;AAGA,aAAO9wB,CAAC,EAAR,EAAY;AACR8F,QAAAA,CAAC,GAAG2qB,OAAO,CAACzwB,CAAD,CAAX;AACA8wB,QAAAA,EAAE,GAAG,IAAIhrB,CAAT;AACA4qB,QAAAA,MAAM,CAAC,CAAD,CAAN,CAAU1wB,CAAV,IAAgB8wB,EAAE,GAAGA,EAAL,GAAUA,EAAV,GAAeP,EAAhB,GAAuB,IAAIO,EAAJ,GAASA,EAAT,GAAchrB,CAAd,GAAkBmG,EAAzC,GAAgD,IAAI6kB,EAAJ,GAAShrB,CAAT,GAAaA,CAAb,GAAiBqG,EAAjE,GAAwErG,CAAC,GAAGA,CAAJ,GAAQA,CAAR,GAAYuG,EAAnG;AACAqkB,QAAAA,MAAM,CAAC,CAAD,CAAN,CAAU1wB,CAAV,IAAgB8wB,EAAE,GAAGA,EAAL,GAAUA,EAAV,GAAeN,EAAhB,GAAuB,IAAIM,EAAJ,GAASA,EAAT,GAAchrB,CAAd,GAAkBoG,EAAzC,GAAgD,IAAI4kB,EAAJ,GAAShrB,CAAT,GAAaA,CAAb,GAAiBsG,EAAjE,GAAwEtG,CAAC,GAAGA,CAAJ,GAAQA,CAAR,GAAYwG,EAAnG;AACH;;AAEDokB,MAAAA,MAAM,CAAC,CAAD,CAAN,CAAUG,IAAV,IAAkBN,EAAlB;AACAG,MAAAA,MAAM,CAAC,CAAD,CAAN,CAAUG,IAAV,IAAkBL,EAAlB;AACAE,MAAAA,MAAM,CAAC,CAAD,CAAN,CAAUG,IAAI,GAAG,CAAjB,IAAsBxkB,EAAtB;AACAqkB,MAAAA,MAAM,CAAC,CAAD,CAAN,CAAUG,IAAI,GAAG,CAAjB,IAAsBvkB,EAAtB;AACAokB,MAAAA,MAAM,CAAC,CAAD,CAAN,CAAU3yB,MAAV,GAAmB2yB,MAAM,CAAC,CAAD,CAAN,CAAU3yB,MAAV,GAAmB8yB,IAAI,GAAG,CAA7C;AAGA,aAAO;AACLhpB,QAAAA,GAAG,EAAE;AAACpC,UAAAA,CAAC,EAAEmC,IAAI,CAACnI,KAAL,CAAW,CAAX,EAAcixB,MAAM,CAAC,CAAD,CAApB,CAAJ;AAA8B9qB,UAAAA,CAAC,EAAEgC,IAAI,CAACnI,KAAL,CAAW,CAAX,EAAcixB,MAAM,CAAC,CAAD,CAApB;AAAjC,SADA;AAEL/oB,QAAAA,GAAG,EAAE;AAAClC,UAAAA,CAAC,EAAEiC,IAAI,CAACjI,KAAL,CAAW,CAAX,EAAcixB,MAAM,CAAC,CAAD,CAApB,CAAJ;AAA8B9qB,UAAAA,CAAC,EAAE8B,IAAI,CAACjI,KAAL,CAAW,CAAX,EAAcixB,MAAM,CAAC,CAAD,CAApB;AAAjC;AAFA,OAAP;AAIH;;AAED,aAASjI,UAAT,CAAoBnb,IAApB,EAA0Bqf,KAA1B,EAAiC;AAC7B,UAAIxa,GAAG,GAAG,CAACwa,KAAD,IAAU5F,KAAK,CAACzZ,IAAD,CAAzB;;AACA,UAAI,CAACqf,KAAD,IAAUxa,GAAG,CAAC4e,KAAlB,EAAyB;AACrB,eAAOzJ,SAAS,CAACnV,GAAG,CAAC4e,KAAL,CAAhB;AACH;;AACD,UAAI1qB,CAAC,GAAGgoB,cAAc,CAAC/gB,IAAD,CAAtB;AAAA,UACI4c,EAAE,GAAGyC,KAAK,IAAI0B,cAAc,CAAC1B,KAAD,CADhC;AAAA,UAEIlsB,KAAK,GAAG;AAACgF,QAAAA,CAAC,EAAE,CAAJ;AAAOG,QAAAA,CAAC,EAAE,CAAV;AAAaorB,QAAAA,EAAE,EAAE,CAAjB;AAAoBC,QAAAA,EAAE,EAAE,CAAxB;AAA2BvrB,QAAAA,CAAC,EAAE,CAA9B;AAAiCG,QAAAA,CAAC,EAAE,CAApC;AAAuCqrB,QAAAA,EAAE,EAAE,IAA3C;AAAiDC,QAAAA,EAAE,EAAE;AAArD,OAFZ;AAAA,UAGIC,MAAM,GAAG;AAAC3rB,QAAAA,CAAC,EAAE,CAAJ;AAAOG,QAAAA,CAAC,EAAE,CAAV;AAAaorB,QAAAA,EAAE,EAAE,CAAjB;AAAoBC,QAAAA,EAAE,EAAE,CAAxB;AAA2BvrB,QAAAA,CAAC,EAAE,CAA9B;AAAiCG,QAAAA,CAAC,EAAE,CAApC;AAAuCqrB,QAAAA,EAAE,EAAE,IAA3C;AAAiDC,QAAAA,EAAE,EAAE;AAArD,OAHb;AAAA,UAIIE,WAAW,GAAG,UAAU/jB,IAAV,EAAgByS,CAAhB,EAAmBuR,IAAnB,EAAyB;AACnC,YAAIjI,EAAJ,EAAQC,EAAR;;AACA,YAAI,CAAChc,IAAL,EAAW;AACP,iBAAO,CAAC,GAAD,EAAMyS,CAAC,CAACta,CAAR,EAAWsa,CAAC,CAACna,CAAb,EAAgBma,CAAC,CAACta,CAAlB,EAAqBsa,CAAC,CAACna,CAAvB,EAA0Bma,CAAC,CAACta,CAA5B,EAA+Bsa,CAAC,CAACna,CAAjC,CAAP;AACH;;AACD,UAAE0H,IAAI,CAAC,CAAD,CAAJ,IAAW;AAACikB,UAAAA,CAAC,EAAE,CAAJ;AAAOhsB,UAAAA,CAAC,EAAE;AAAV,SAAb,MAA+Bwa,CAAC,CAACmR,EAAF,GAAOnR,CAAC,CAACoR,EAAF,GAAO,IAA7C;;AACA,gBAAQ7jB,IAAI,CAAC,CAAD,CAAZ;AACI,eAAK,GAAL;AACIyS,YAAAA,CAAC,CAACra,CAAF,GAAM4H,IAAI,CAAC,CAAD,CAAV;AACAyS,YAAAA,CAAC,CAACla,CAAF,GAAMyH,IAAI,CAAC,CAAD,CAAV;AACA;;AACJ,eAAK,GAAL;AACIA,YAAAA,IAAI,GAAG,CAAC,GAAD,EAAMlN,MAAN,CAAa2uB,GAAG,CAACtvB,KAAJ,CAAU,CAAV,EAAa,CAACsgB,CAAC,CAACta,CAAH,EAAMsa,CAAC,CAACna,CAAR,EAAWxF,MAAX,CAAkBkN,IAAI,CAAC5O,KAAL,CAAW,CAAX,CAAlB,CAAb,CAAb,CAAP;AACA;;AACJ,eAAK,GAAL;AACI,gBAAI4yB,IAAI,IAAI,GAAR,IAAeA,IAAI,IAAI,GAA3B,EAAgC;AAAE;AAC9BjI,cAAAA,EAAE,GAAGtJ,CAAC,CAACta,CAAF,GAAM,CAAN,GAAUsa,CAAC,CAACiR,EAAjB,CAD4B,CACE;;AAC9B1H,cAAAA,EAAE,GAAGvJ,CAAC,CAACna,CAAF,GAAM,CAAN,GAAUma,CAAC,CAACkR,EAAjB,CAF4B,CAEE;AACjC,aAHD,MAIK;AAA6B;AAC9B5H,cAAAA,EAAE,GAAGtJ,CAAC,CAACta,CAAP;AACA6jB,cAAAA,EAAE,GAAGvJ,CAAC,CAACna,CAAP;AACH;;AACD0H,YAAAA,IAAI,GAAG,CAAC,GAAD,EAAM+b,EAAN,EAAUC,EAAV,EAAclpB,MAAd,CAAqBkN,IAAI,CAAC5O,KAAL,CAAW,CAAX,CAArB,CAAP;AACA;;AACJ,eAAK,GAAL;AACI,gBAAI4yB,IAAI,IAAI,GAAR,IAAeA,IAAI,IAAI,GAA3B,EAAgC;AAAE;AAC9BvR,cAAAA,CAAC,CAACmR,EAAF,GAAOnR,CAAC,CAACta,CAAF,GAAM,CAAN,GAAUsa,CAAC,CAACmR,EAAnB,CAD4B,CACE;;AAC9BnR,cAAAA,CAAC,CAACoR,EAAF,GAAOpR,CAAC,CAACna,CAAF,GAAM,CAAN,GAAUma,CAAC,CAACoR,EAAnB,CAF4B,CAEE;AACjC,aAHD,MAIK;AAA6B;AAC9BpR,cAAAA,CAAC,CAACmR,EAAF,GAAOnR,CAAC,CAACta,CAAT;AACAsa,cAAAA,CAAC,CAACoR,EAAF,GAAOpR,CAAC,CAACna,CAAT;AACH;;AACD0H,YAAAA,IAAI,GAAG,CAAC,GAAD,EAAMlN,MAAN,CAAawuB,GAAG,CAAC7O,CAAC,CAACta,CAAH,EAAMsa,CAAC,CAACna,CAAR,EAAWma,CAAC,CAACmR,EAAb,EAAiBnR,CAAC,CAACoR,EAAnB,EAAuB7jB,IAAI,CAAC,CAAD,CAA3B,EAAgCA,IAAI,CAAC,CAAD,CAApC,CAAhB,CAAP;AACA;;AACJ,eAAK,GAAL;AACIyS,YAAAA,CAAC,CAACmR,EAAF,GAAO5jB,IAAI,CAAC,CAAD,CAAX;AACAyS,YAAAA,CAAC,CAACoR,EAAF,GAAO7jB,IAAI,CAAC,CAAD,CAAX;AACAA,YAAAA,IAAI,GAAG,CAAC,GAAD,EAAMlN,MAAN,CAAawuB,GAAG,CAAC7O,CAAC,CAACta,CAAH,EAAMsa,CAAC,CAACna,CAAR,EAAW0H,IAAI,CAAC,CAAD,CAAf,EAAoBA,IAAI,CAAC,CAAD,CAAxB,EAA6BA,IAAI,CAAC,CAAD,CAAjC,EAAsCA,IAAI,CAAC,CAAD,CAA1C,CAAhB,CAAP;AACA;;AACJ,eAAK,GAAL;AACIA,YAAAA,IAAI,GAAG,CAAC,GAAD,EAAMlN,MAAN,CAAauuB,GAAG,CAAC5O,CAAC,CAACta,CAAH,EAAMsa,CAAC,CAACna,CAAR,EAAW0H,IAAI,CAAC,CAAD,CAAf,EAAoBA,IAAI,CAAC,CAAD,CAAxB,CAAhB,CAAP;AACA;;AACJ,eAAK,GAAL;AACIA,YAAAA,IAAI,GAAG,CAAC,GAAD,EAAMlN,MAAN,CAAauuB,GAAG,CAAC5O,CAAC,CAACta,CAAH,EAAMsa,CAAC,CAACna,CAAR,EAAW0H,IAAI,CAAC,CAAD,CAAf,EAAoByS,CAAC,CAACna,CAAtB,CAAhB,CAAP;AACA;;AACJ,eAAK,GAAL;AACI0H,YAAAA,IAAI,GAAG,CAAC,GAAD,EAAMlN,MAAN,CAAauuB,GAAG,CAAC5O,CAAC,CAACta,CAAH,EAAMsa,CAAC,CAACna,CAAR,EAAWma,CAAC,CAACta,CAAb,EAAgB6H,IAAI,CAAC,CAAD,CAApB,CAAhB,CAAP;AACA;;AACJ,eAAK,GAAL;AACIA,YAAAA,IAAI,GAAG,CAAC,GAAD,EAAMlN,MAAN,CAAauuB,GAAG,CAAC5O,CAAC,CAACta,CAAH,EAAMsa,CAAC,CAACna,CAAR,EAAWma,CAAC,CAACra,CAAb,EAAgBqa,CAAC,CAACla,CAAlB,CAAhB,CAAP;AACA;AA9CR;;AAgDA,eAAOyH,IAAP;AACH,OA3DL;AAAA,UA4DIkkB,MAAM,GAAG,UAAUC,EAAV,EAAc5zB,CAAd,EAAiB;AACtB,YAAI4zB,EAAE,CAAC5zB,CAAD,CAAF,CAAME,MAAN,GAAe,CAAnB,EAAsB;AAClB0zB,UAAAA,EAAE,CAAC5zB,CAAD,CAAF,CAAMkO,KAAN;AACA,cAAImhB,EAAE,GAAGuE,EAAE,CAAC5zB,CAAD,CAAX;;AACA,iBAAOqvB,EAAE,CAACnvB,MAAV,EAAkB;AACd2zB,YAAAA,MAAM,CAAC7zB,CAAD,CAAN,GAAY,GAAZ,CADc,CACG;;AACjBqsB,YAAAA,EAAE,KAAKyH,MAAM,CAAC9zB,CAAD,CAAN,GAAY,GAAjB,CAAF,CAFc,CAEW;;AACzB4zB,YAAAA,EAAE,CAACvwB,MAAH,CAAUrD,CAAC,EAAX,EAAe,CAAf,EAAkB,CAAC,GAAD,EAAMuC,MAAN,CAAa8sB,EAAE,CAAChsB,MAAH,CAAU,CAAV,EAAa,CAAb,CAAb,CAAlB;AACH;;AACDuwB,UAAAA,EAAE,CAACvwB,MAAH,CAAUrD,CAAV,EAAa,CAAb;AACAC,UAAAA,EAAE,GAAG4J,IAAI,CAACrB,CAAC,CAACtI,MAAH,EAAWmsB,EAAE,IAAIA,EAAE,CAACnsB,MAAT,IAAmB,CAA9B,CAAT;AACH;AACJ,OAxEL;AAAA,UAyEI6zB,IAAI,GAAG,UAAUlF,KAAV,EAAiBC,KAAjB,EAAwBkF,EAAxB,EAA4BC,EAA5B,EAAgCj0B,CAAhC,EAAmC;AACtC,YAAI6uB,KAAK,IAAIC,KAAT,IAAkBD,KAAK,CAAC7uB,CAAD,CAAL,CAAS,CAAT,KAAe,GAAjC,IAAwC8uB,KAAK,CAAC9uB,CAAD,CAAL,CAAS,CAAT,KAAe,GAA3D,EAAgE;AAC5D8uB,UAAAA,KAAK,CAACzrB,MAAN,CAAarD,CAAb,EAAgB,CAAhB,EAAmB,CAAC,GAAD,EAAMi0B,EAAE,CAACrsB,CAAT,EAAYqsB,EAAE,CAAClsB,CAAf,CAAnB;AACAisB,UAAAA,EAAE,CAACb,EAAH,GAAQ,CAAR;AACAa,UAAAA,EAAE,CAACZ,EAAH,GAAQ,CAAR;AACAY,UAAAA,EAAE,CAACpsB,CAAH,GAAOinB,KAAK,CAAC7uB,CAAD,CAAL,CAAS,CAAT,CAAP;AACAg0B,UAAAA,EAAE,CAACjsB,CAAH,GAAO8mB,KAAK,CAAC7uB,CAAD,CAAL,CAAS,CAAT,CAAP;AACAC,UAAAA,EAAE,GAAG4J,IAAI,CAACrB,CAAC,CAACtI,MAAH,EAAWmsB,EAAE,IAAIA,EAAE,CAACnsB,MAAT,IAAmB,CAA9B,CAAT;AACH;AACJ,OAlFL;AAAA,UAmFI2zB,MAAM,GAAG,EAnFb;AAAA,UAmFiB;AACbC,MAAAA,MAAM,GAAG,EApFb;AAAA,UAoFiB;AACbI,MAAAA,MAAM,GAAG,EArFb;AAAA,UAqFiB;AACbT,MAAAA,IAAI,GAAG,EAtFX,CAL6B,CA2Fd;;;AACf,WAAK,IAAIzzB,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAG4J,IAAI,CAACrB,CAAC,CAACtI,MAAH,EAAWmsB,EAAE,IAAIA,EAAE,CAACnsB,MAAT,IAAmB,CAA9B,CAAzB,EAA2DF,CAAC,GAAGC,EAA/D,EAAmED,CAAC,EAApE,EAAwE;AACpEwI,QAAAA,CAAC,CAACxI,CAAD,CAAD,KAASk0B,MAAM,GAAG1rB,CAAC,CAACxI,CAAD,CAAD,CAAK,CAAL,CAAlB,EADoE,CACxC;;AAE5B,YAAIk0B,MAAM,IAAI,GAAd,EAAmB;AACnB;AACIL,YAAAA,MAAM,CAAC7zB,CAAD,CAAN,GAAYk0B,MAAZ,CADJ,CACwB;;AACpBl0B,YAAAA,CAAC,KAAMyzB,IAAI,GAAGI,MAAM,CAAC7zB,CAAC,GAAG,CAAL,CAAnB,CAAD,CAFJ,CAEkC;AACjC;;AACDwI,QAAAA,CAAC,CAACxI,CAAD,CAAD,GAAOwzB,WAAW,CAAChrB,CAAC,CAACxI,CAAD,CAAF,EAAO4C,KAAP,EAAc6wB,IAAd,CAAlB,CARoE,CAQ7B;;AAEvC,YAAII,MAAM,CAAC7zB,CAAD,CAAN,IAAa,GAAb,IAAoBk0B,MAAM,IAAI,GAAlC,EAAuCL,MAAM,CAAC7zB,CAAD,CAAN,GAAY,GAAZ,CAV6B,CAUZ;AACxD;AACA;;AAEA2zB,QAAAA,MAAM,CAACnrB,CAAD,EAAIxI,CAAJ,CAAN,CAdoE,CActD;;AAEd,YAAIqsB,EAAJ,EAAQ;AAAE;AACNA,UAAAA,EAAE,CAACrsB,CAAD,CAAF,KAAUk0B,MAAM,GAAG7H,EAAE,CAACrsB,CAAD,CAAF,CAAM,CAAN,CAAnB;;AACA,cAAIk0B,MAAM,IAAI,GAAd,EAAmB;AACfJ,YAAAA,MAAM,CAAC9zB,CAAD,CAAN,GAAYk0B,MAAZ;AACAl0B,YAAAA,CAAC,KAAKyzB,IAAI,GAAGK,MAAM,CAAC9zB,CAAC,GAAG,CAAL,CAAlB,CAAD;AACH;;AACDqsB,UAAAA,EAAE,CAACrsB,CAAD,CAAF,GAAQwzB,WAAW,CAACnH,EAAE,CAACrsB,CAAD,CAAH,EAAQuzB,MAAR,EAAgBE,IAAhB,CAAnB;;AAEA,cAAIK,MAAM,CAAC9zB,CAAD,CAAN,IAAa,GAAb,IAAoBk0B,MAAM,IAAI,GAAlC,EAAuC;AACnCJ,YAAAA,MAAM,CAAC9zB,CAAD,CAAN,GAAY,GAAZ;AACH;;AAED2zB,UAAAA,MAAM,CAACtH,EAAD,EAAKrsB,CAAL,CAAN;AACH;;AACD+zB,QAAAA,IAAI,CAACvrB,CAAD,EAAI6jB,EAAJ,EAAQzpB,KAAR,EAAe2wB,MAAf,EAAuBvzB,CAAvB,CAAJ;AACA+zB,QAAAA,IAAI,CAAC1H,EAAD,EAAK7jB,CAAL,EAAQ+qB,MAAR,EAAgB3wB,KAAhB,EAAuB5C,CAAvB,CAAJ;AACA,YAAIm0B,GAAG,GAAG3rB,CAAC,CAACxI,CAAD,CAAX;AAAA,YACIo0B,IAAI,GAAG/H,EAAE,IAAIA,EAAE,CAACrsB,CAAD,CADnB;AAAA,YAEIq0B,MAAM,GAAGF,GAAG,CAACj0B,MAFjB;AAAA,YAGIo0B,OAAO,GAAGjI,EAAE,IAAI+H,IAAI,CAACl0B,MAHzB;AAIA0C,QAAAA,KAAK,CAACgF,CAAN,GAAUusB,GAAG,CAACE,MAAM,GAAG,CAAV,CAAb;AACAzxB,QAAAA,KAAK,CAACmF,CAAN,GAAUosB,GAAG,CAACE,MAAM,GAAG,CAAV,CAAb;AACAzxB,QAAAA,KAAK,CAACuwB,EAAN,GAAW3pB,OAAO,CAAC2qB,GAAG,CAACE,MAAM,GAAG,CAAV,CAAJ,CAAP,IAA4BzxB,KAAK,CAACgF,CAA7C;AACAhF,QAAAA,KAAK,CAACwwB,EAAN,GAAW5pB,OAAO,CAAC2qB,GAAG,CAACE,MAAM,GAAG,CAAV,CAAJ,CAAP,IAA4BzxB,KAAK,CAACmF,CAA7C;AACAwrB,QAAAA,MAAM,CAACJ,EAAP,GAAY9G,EAAE,KAAK7iB,OAAO,CAAC4qB,IAAI,CAACE,OAAO,GAAG,CAAX,CAAL,CAAP,IAA8Bf,MAAM,CAAC3rB,CAA1C,CAAd;AACA2rB,QAAAA,MAAM,CAACH,EAAP,GAAY/G,EAAE,KAAK7iB,OAAO,CAAC4qB,IAAI,CAACE,OAAO,GAAG,CAAX,CAAL,CAAP,IAA8Bf,MAAM,CAACxrB,CAA1C,CAAd;AACAwrB,QAAAA,MAAM,CAAC3rB,CAAP,GAAWykB,EAAE,IAAI+H,IAAI,CAACE,OAAO,GAAG,CAAX,CAArB;AACAf,QAAAA,MAAM,CAACxrB,CAAP,GAAWskB,EAAE,IAAI+H,IAAI,CAACE,OAAO,GAAG,CAAX,CAArB;AACH;;AACD,UAAI,CAACjI,EAAL,EAAS;AACL/X,QAAAA,GAAG,CAAC4e,KAAJ,GAAYzJ,SAAS,CAACjhB,CAAD,CAArB;AACH;;AACD,aAAO6jB,EAAE,GAAG,CAAC7jB,CAAD,EAAI6jB,EAAJ,CAAH,GAAa7jB,CAAtB;AACH;;AACD,aAAS+rB,OAAT,CAAiB9kB,IAAjB,EAAuB6N,MAAvB,EAA+B;AAC3B,UAAI,CAACA,MAAL,EAAa;AACT,eAAO7N,IAAP;AACH;;AACD,UAAI7H,CAAJ,EAAOG,CAAP,EAAU/H,CAAV,EAAamC,CAAb,EAAgBlC,EAAhB,EAAoBmC,EAApB,EAAwBoyB,KAAxB;AACA/kB,MAAAA,IAAI,GAAGmb,UAAU,CAACnb,IAAD,CAAjB;;AACA,WAAKzP,CAAC,GAAG,CAAJ,EAAOC,EAAE,GAAGwP,IAAI,CAACvP,MAAtB,EAA8BF,CAAC,GAAGC,EAAlC,EAAsCD,CAAC,EAAvC,EAA2C;AACvCw0B,QAAAA,KAAK,GAAG/kB,IAAI,CAACzP,CAAD,CAAZ;;AACA,aAAKmC,CAAC,GAAG,CAAJ,EAAOC,EAAE,GAAGoyB,KAAK,CAACt0B,MAAvB,EAA+BiC,CAAC,GAAGC,EAAnC,EAAuCD,CAAC,IAAI,CAA5C,EAA+C;AAC3CyF,UAAAA,CAAC,GAAG0V,MAAM,CAAC1V,CAAP,CAAS4sB,KAAK,CAACryB,CAAD,CAAd,EAAmBqyB,KAAK,CAACryB,CAAC,GAAG,CAAL,CAAxB,CAAJ;AACA4F,UAAAA,CAAC,GAAGuV,MAAM,CAACvV,CAAP,CAASysB,KAAK,CAACryB,CAAD,CAAd,EAAmBqyB,KAAK,CAACryB,CAAC,GAAG,CAAL,CAAxB,CAAJ;AACAqyB,UAAAA,KAAK,CAACryB,CAAD,CAAL,GAAWyF,CAAX;AACA4sB,UAAAA,KAAK,CAACryB,CAAC,GAAG,CAAL,CAAL,GAAe4F,CAAf;AACH;AACJ;;AACD,aAAO0H,IAAP;AACH,KAniC6C,CAqiC9C;;;AACA,aAASohB,iBAAT,CAA2B4D,GAA3B,EAAgCxzB,CAAhC,EAAmC;AAC/B,UAAIihB,CAAC,GAAG,EAAR;;AACA,WAAK,IAAIliB,CAAC,GAAG,CAAR,EAAW00B,IAAI,GAAGD,GAAG,CAACv0B,MAA3B,EAAmCw0B,IAAI,GAAG,IAAI,CAACzzB,CAAZ,GAAgBjB,CAAnD,EAAsDA,CAAC,IAAI,CAA3D,EAA8D;AAC1D,YAAIwI,CAAC,GAAG,CACI;AAACZ,UAAAA,CAAC,EAAE,CAAC6sB,GAAG,CAACz0B,CAAC,GAAG,CAAL,CAAR;AAAiB+H,UAAAA,CAAC,EAAE,CAAC0sB,GAAG,CAACz0B,CAAC,GAAG,CAAL;AAAxB,SADJ,EAEI;AAAC4H,UAAAA,CAAC,EAAE,CAAC6sB,GAAG,CAACz0B,CAAD,CAAR;AAAiB+H,UAAAA,CAAC,EAAE,CAAC0sB,GAAG,CAACz0B,CAAC,GAAG,CAAL;AAAxB,SAFJ,EAGI;AAAC4H,UAAAA,CAAC,EAAE,CAAC6sB,GAAG,CAACz0B,CAAC,GAAG,CAAL,CAAR;AAAiB+H,UAAAA,CAAC,EAAE,CAAC0sB,GAAG,CAACz0B,CAAC,GAAG,CAAL;AAAxB,SAHJ,EAII;AAAC4H,UAAAA,CAAC,EAAE,CAAC6sB,GAAG,CAACz0B,CAAC,GAAG,CAAL,CAAR;AAAiB+H,UAAAA,CAAC,EAAE,CAAC0sB,GAAG,CAACz0B,CAAC,GAAG,CAAL;AAAxB,SAJJ,CAAR;;AAMA,YAAIiB,CAAJ,EAAO;AACH,cAAI,CAACjB,CAAL,EAAQ;AACJwI,YAAAA,CAAC,CAAC,CAAD,CAAD,GAAO;AAACZ,cAAAA,CAAC,EAAE,CAAC6sB,GAAG,CAACC,IAAI,GAAG,CAAR,CAAR;AAAoB3sB,cAAAA,CAAC,EAAE,CAAC0sB,GAAG,CAACC,IAAI,GAAG,CAAR;AAA3B,aAAP;AACH,WAFD,MAEO,IAAIA,IAAI,GAAG,CAAP,IAAY10B,CAAhB,EAAmB;AACtBwI,YAAAA,CAAC,CAAC,CAAD,CAAD,GAAO;AAACZ,cAAAA,CAAC,EAAE,CAAC6sB,GAAG,CAAC,CAAD,CAAR;AAAa1sB,cAAAA,CAAC,EAAE,CAAC0sB,GAAG,CAAC,CAAD;AAApB,aAAP;AACH,WAFM,MAEA,IAAIC,IAAI,GAAG,CAAP,IAAY10B,CAAhB,EAAmB;AACtBwI,YAAAA,CAAC,CAAC,CAAD,CAAD,GAAO;AAACZ,cAAAA,CAAC,EAAE,CAAC6sB,GAAG,CAAC,CAAD,CAAR;AAAa1sB,cAAAA,CAAC,EAAE,CAAC0sB,GAAG,CAAC,CAAD;AAApB,aAAP;AACAjsB,YAAAA,CAAC,CAAC,CAAD,CAAD,GAAO;AAACZ,cAAAA,CAAC,EAAE,CAAC6sB,GAAG,CAAC,CAAD,CAAR;AAAa1sB,cAAAA,CAAC,EAAE,CAAC0sB,GAAG,CAAC,CAAD;AAApB,aAAP;AACH;AACJ,SATD,MASO;AACH,cAAIC,IAAI,GAAG,CAAP,IAAY10B,CAAhB,EAAmB;AACfwI,YAAAA,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAR;AACH,WAFD,MAEO,IAAI,CAACxI,CAAL,EAAQ;AACXwI,YAAAA,CAAC,CAAC,CAAD,CAAD,GAAO;AAACZ,cAAAA,CAAC,EAAE,CAAC6sB,GAAG,CAACz0B,CAAD,CAAR;AAAa+H,cAAAA,CAAC,EAAE,CAAC0sB,GAAG,CAACz0B,CAAC,GAAG,CAAL;AAApB,aAAP;AACH;AACJ;;AACDkiB,QAAAA,CAAC,CAACzgB,IAAF,CAAO,CAAC,GAAD,EACD,CAAC,CAAC+G,CAAC,CAAC,CAAD,CAAD,CAAKZ,CAAN,GAAU,IAAIY,CAAC,CAAC,CAAD,CAAD,CAAKZ,CAAnB,GAAuBY,CAAC,CAAC,CAAD,CAAD,CAAKZ,CAA7B,IAAkC,CADjC,EAED,CAAC,CAACY,CAAC,CAAC,CAAD,CAAD,CAAKT,CAAN,GAAU,IAAIS,CAAC,CAAC,CAAD,CAAD,CAAKT,CAAnB,GAAuBS,CAAC,CAAC,CAAD,CAAD,CAAKT,CAA7B,IAAkC,CAFjC,EAGD,CAACS,CAAC,CAAC,CAAD,CAAD,CAAKZ,CAAL,GAAS,IAAIY,CAAC,CAAC,CAAD,CAAD,CAAKZ,CAAlB,GAAsBY,CAAC,CAAC,CAAD,CAAD,CAAKZ,CAA5B,IAAiC,CAHhC,EAID,CAACY,CAAC,CAAC,CAAD,CAAD,CAAKT,CAAL,GAAS,IAAES,CAAC,CAAC,CAAD,CAAD,CAAKT,CAAhB,GAAoBS,CAAC,CAAC,CAAD,CAAD,CAAKT,CAA1B,IAA+B,CAJ9B,EAKDS,CAAC,CAAC,CAAD,CAAD,CAAKZ,CALJ,EAMDY,CAAC,CAAC,CAAD,CAAD,CAAKT,CANJ,CAAP;AAQH;;AAED,aAAOma,CAAP;AACH,KA1kC6C,CA4kC9C;;;AACAzZ,IAAAA,IAAI,CAACgH,IAAL,GAAYyZ,KAAZ;AAEA;;;;;;;;;;;AAUAzgB,IAAAA,IAAI,CAACgH,IAAL,CAAUO,cAAV,GAA2BA,cAA3B;AACA;;;;;;;;;;;;;;;;;AAgBAvH,IAAAA,IAAI,CAACgH,IAAL,CAAUkB,gBAAV,GAA6BA,gBAA7B;AACA;;;;;;;;;;;;;AAYAlI,IAAAA,IAAI,CAACgH,IAAL,CAAUklB,UAAV,GAAuB,UAAUllB,IAAV,EAAgBiR,IAAhB,EAAsBC,EAAtB,EAA0B;AAC7C,UAAI,KAAK3Q,cAAL,CAAoBP,IAApB,IAA4BkR,EAA5B,GAAiC,IAArC,EAA2C;AACvC,eAAOqK,mBAAmB,CAACvb,IAAD,EAAOiR,IAAP,CAAnB,CAAgCha,GAAvC;AACH;;AACD,UAAIjH,CAAC,GAAGurB,mBAAmB,CAACvb,IAAD,EAAOkR,EAAP,EAAW,CAAX,CAA3B;AACA,aAAOD,IAAI,GAAGsK,mBAAmB,CAACvrB,CAAD,EAAIihB,IAAJ,CAAnB,CAA6Bha,GAAhC,GAAsCjH,CAAjD;AACH,KAND;AAOA;;;;;;;;;AAOAkd,IAAAA,OAAO,CAAC3M,cAAR,GAAyB,YAAY;AACjC,UAAI,KAAKF,IAAL,CAAUE,cAAd,EAA8B;AAC1B,eAAO,KAAKF,IAAL,CAAUE,cAAV,EAAP;AACH;AACJ,KAJD,CAroC8C,CA0oC9C;;AACA;;;;;;;;;;;;;;;;;AAeA2M,IAAAA,OAAO,CAAChM,gBAAR,GAA2B,UAAUzQ,MAAV,EAAkB;AACzC,aAAOyQ,gBAAgB,CAAC,KAAKlF,IAAL,CAAU,GAAV,CAAD,EAAiBvL,MAAjB,CAAvB;AACH,KAFD,CA1pC8C,CA6pC9C;;AACA;;;;;;;;;;;;;AAWAyc,IAAAA,OAAO,CAACgY,UAAR,GAAqB,UAAUjU,IAAV,EAAgBC,EAAhB,EAAoB;AACrC,aAAOlY,IAAI,CAACgH,IAAL,CAAUklB,UAAV,CAAqB,KAAKlpB,IAAL,CAAU,GAAV,CAArB,EAAqCiV,IAArC,EAA2CC,EAA3C,CAAP;AACH,KAFD;;AAGAlY,IAAAA,IAAI,CAACW,CAAL,CAAOiS,GAAP,GAAaA,GAAb;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA5S,IAAAA,IAAI,CAACgH,IAAL,CAAU4a,iBAAV,GAA8BA,iBAA9B;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA5hB,IAAAA,IAAI,CAACgH,IAAL,CAAUoc,UAAV,GAAuBA,UAAvB;AACA;;;;;;;;;;;;;AAYApjB,IAAAA,IAAI,CAACgH,IAAL,CAAUsc,iBAAV,GAA8BA,iBAA9B;;AACAtjB,IAAAA,IAAI,CAACmsB,OAAL,GAAe,UAAUhtB,CAAV,EAAaG,CAAb,EAAgBF,CAAhB,EAAmBG,CAAnB,EAAsB;AACjC,UAAI2J,CAAC,GAAG,GAAR;AAAA,UACIjS,CAAC,GAAG2b,GAAG,CAACzT,CAAC,GAAG+J,CAAC,GAAG,CAAT,EAAY5J,CAAC,GAAG4J,CAAC,GAAG,CAApB,EAAuBA,CAAvB,EAA0BA,CAA1B,CADX;AAAA,UAEIkjB,MAAM,GAAG,EAFb;AAAA,UAGInQ,MAAM,GAAG7c,CAAC,CAAC,CAAD,CAAD,CAAKnF,cAAL,CAAoB,GAApB,IAA2B,UAAU1C,CAAV,EAAa;AAC7C,eAAO;AACH4H,UAAAA,CAAC,EAAEC,CAAC,CAAC7H,CAAD,CAAD,CAAK4H,CADL;AAEHG,UAAAA,CAAC,EAAEF,CAAC,CAAC7H,CAAD,CAAD,CAAK+H;AAFL,SAAP;AAIH,OALQ,GAKL,UAAU/H,CAAV,EAAa;AACb,eAAO;AACH4H,UAAAA,CAAC,EAAEC,CAAC,CAAC7H,CAAD,CADD;AAEH+H,UAAAA,CAAC,EAAEC,CAAC,CAAChI,CAAD;AAFD,SAAP;AAIH,OAbL;AAAA,UAcI80B,KAAK,GAAG,CAdZ;;AAeA,aAAOnjB,CAAC,IAAI,GAAL,IAAY,CAACmjB,KAApB,EAA2B;AACvB,aAAK,IAAI90B,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAG4H,CAAC,CAAC3H,MAAvB,EAA+BF,CAAC,GAAGC,EAAnC,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,cAAIquB,EAAE,GAAG3J,MAAM,CAAC1kB,CAAD,CAAf;;AACA,cAAI+rB,iBAAiB,CAACrsB,CAAD,EAAI2uB,EAAE,CAACzmB,CAAP,EAAUymB,EAAE,CAACtmB,CAAb,CAArB,EAAsC;AAClC+sB,YAAAA,KAAK;AACLD,YAAAA,MAAM,CAACpzB,IAAP,CAAY4sB,EAAZ;AACA;AACH;AACJ;;AACD,YAAI,CAACyG,KAAL,EAAY;AACRnjB,UAAAA,CAAC,IAAI,CAAL;AACAjS,UAAAA,CAAC,GAAG2b,GAAG,CAACzT,CAAC,GAAG+J,CAAC,GAAG,CAAT,EAAY5J,CAAC,GAAG4J,CAAC,GAAG,CAApB,EAAuBA,CAAvB,EAA0BA,CAA1B,CAAP;AACH;AACJ;;AACD,UAAIA,CAAC,IAAI,GAAT,EAAc;AACV;AACH;;AACD,UAAI7K,GAAG,GAAGyJ,QAAV;AAAA,UACIlL,GADJ;;AAEA,WAAKrF,CAAC,GAAG,CAAJ,EAAOC,EAAE,GAAG40B,MAAM,CAAC30B,MAAxB,EAAgCF,CAAC,GAAGC,EAApC,EAAwCD,CAAC,EAAzC,EAA6C;AACzC,YAAImB,CAAC,GAAGsH,IAAI,CAAC3B,GAAL,CAASc,CAAT,EAAYG,CAAZ,EAAe8sB,MAAM,CAAC70B,CAAD,CAAN,CAAU4H,CAAzB,EAA4BitB,MAAM,CAAC70B,CAAD,CAAN,CAAU+H,CAAtC,CAAR;;AACA,YAAIjB,GAAG,GAAG3F,CAAV,EAAa;AACT2F,UAAAA,GAAG,GAAG3F,CAAN;AACA0zB,UAAAA,MAAM,CAAC70B,CAAD,CAAN,CAAU8G,GAAV,GAAgB3F,CAAhB;AACAkE,UAAAA,GAAG,GAAGwvB,MAAM,CAAC70B,CAAD,CAAZ;AACH;AACJ;;AACD,aAAOqF,GAAP;AACH,KA5CD;AA6CA;;;;;;;;;;;;;AAWAoD,IAAAA,IAAI,CAACgH,IAAL,CAAUuc,eAAV,GAA4BA,eAA5B;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAuBAvjB,IAAAA,IAAI,CAACgH,IAAL,CAAUslB,YAAV,GAAyBnG,gBAAzB;AACAnmB,IAAAA,IAAI,CAACgH,IAAL,CAAUulB,kBAAV,GAA+BhG,sBAA/B;AACA;;;;;;;;;;;;;;;AAcAvmB,IAAAA,IAAI,CAACgH,IAAL,CAAUwlB,aAAV,GAA0BtF,iBAA1B;AACA;;;;;;;;;;;;;;;;;;;AAkBAlnB,IAAAA,IAAI,CAACgH,IAAL,CAAU0H,OAAV,GAAoByY,QAApB;AACAnnB,IAAAA,IAAI,CAACgH,IAAL,CAAUlJ,GAAV,GAAgB4pB,OAAhB;AACA;;;;;;;;;;;AAUA1nB,IAAAA,IAAI,CAACgH,IAAL,CAAUylB,UAAV,GAAuB9E,cAAvB;AACA;;;;;;;;;;;AAUA3nB,IAAAA,IAAI,CAACgH,IAAL,CAAUmU,UAAV,GAAuB4M,cAAvB;AACA;;;;;;;;;;;AAUA/nB,IAAAA,IAAI,CAACgH,IAAL,CAAU0lB,OAAV,GAAoBvK,UAApB;AACA;;;;;;;;;;AASAniB,IAAAA,IAAI,CAACgH,IAAL,CAAU8N,GAAV,GAAgBgX,OAAhB;AACA9rB,IAAAA,IAAI,CAACgH,IAAL,CAAU/L,QAAV,GAAqBA,QAArB;AACA+E,IAAAA,IAAI,CAACgH,IAAL,CAAUlC,KAAV,GAAkBkc,SAAlB;AACH,GAh6CD,EAlxJyC,CAorMzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAhhB,EAAAA,IAAI,CAACiU,MAAL,CAAY,UAAUjU,IAAV,EAAgBO,OAAhB,EAAyBG,KAAzB,EAAgClK,IAAhC,EAAsC;AAC9C,QAAI4K,IAAI,GAAGxC,IAAI,CAACyC,GAAhB;AAAA,QACIC,IAAI,GAAG1C,IAAI,CAAC2C,GADhB,CAD8C,CAI9C;;AACA,QAAIorB,GAAG,GAAG,UAAUnzB,KAAV,EAAiB;AACvB,WAAKA,KAAL,GAAa,EAAb;AACP,WAAKozB,QAAL,GAAgB,EAAhB;AACO,WAAKn1B,MAAL,GAAc,CAAd;AACA,WAAKgL,IAAL,GAAY,KAAZ;;AACA,UAAIjJ,KAAJ,EAAW;AACP,aAAK,IAAIjC,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGgC,KAAK,CAAC/B,MAA3B,EAAmCF,CAAC,GAAGC,EAAvC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5C,cAAIiC,KAAK,CAACjC,CAAD,CAAT,EAAc;AACV,iBAAK,KAAKiC,KAAL,CAAW/B,MAAhB,IAA0B,KAAK+B,KAAL,CAAW,KAAKA,KAAL,CAAW/B,MAAtB,IAAgC+B,KAAK,CAACjC,CAAD,CAA/D;AACA,iBAAKE,MAAL;AACH;AACJ;AACJ;AACJ,KAbD;AAAA,QAcAo1B,QAAQ,GAAGF,GAAG,CAACx0B,SAdf;AAeA;;;;;;;;;AAOA00B,IAAAA,QAAQ,CAAC7zB,IAAT,GAAgB,YAAY;AACxB,UAAIO,IAAJ,EACI8E,GADJ;;AAEA,WAAK,IAAI9G,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGc,SAAS,CAACb,MAA/B,EAAuCF,CAAC,GAAGC,EAA3C,EAA+CD,CAAC,EAAhD,EAAoD;AAChDgC,QAAAA,IAAI,GAAGjB,SAAS,CAACf,CAAD,CAAhB;;AACA,YAAIgC,IAAJ,EAAU;AACN8E,UAAAA,GAAG,GAAG,KAAK7E,KAAL,CAAW/B,MAAjB;AACA,eAAK4G,GAAL,IAAY,KAAK7E,KAAL,CAAW6E,GAAX,IAAkB9E,IAA9B;AACA,eAAK9B,MAAL;AACH;AACJ;;AACD,aAAO,IAAP;AACH,KAZD;AAaA;;;;;;;;;AAOAo1B,IAAAA,QAAQ,CAAC1E,GAAT,GAAe,YAAY;AACvB,WAAK1wB,MAAL,IAAe,OAAO,KAAK,KAAKA,MAAL,EAAL,CAAtB;AACA,aAAO,KAAK+B,KAAL,CAAW2uB,GAAX,EAAP;AACH,KAHD;AAIA;;;;;;;;;;;;;;AAYA0E,IAAAA,QAAQ,CAACzd,OAAT,GAAmB,UAAUnT,QAAV,EAAoB6wB,OAApB,EAA6B;AAC5C,WAAK,IAAIv1B,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAG,KAAKgC,KAAL,CAAW/B,MAAhC,EAAwCF,CAAC,GAAGC,EAA5C,EAAgDD,CAAC,EAAjD,EAAqD;AACjD,YAAI0E,QAAQ,CAAC5D,IAAT,CAAcy0B,OAAd,EAAuB,KAAKtzB,KAAL,CAAWjC,CAAX,CAAvB,EAAsCA,CAAtC,MAA6C,KAAjD,EAAwD;AACpD,iBAAO,IAAP;AACH;AACJ;;AACD,aAAO,IAAP;AACH,KAPD;AAQA;;;;;;;;;;;;;;;;;;;;;;;AAqBAs1B,IAAAA,QAAQ,CAACpU,OAAT,GAAmB,UAAUte,KAAV,EAAiBmb,EAAjB,EAAqBpX,MAArB,EAA6BjC,QAA7B,EAAuC;AACtD,UAAI,OAAOiC,MAAP,IAAiB,UAAjB,IAA+B,CAACA,MAAM,CAACzG,MAA3C,EAAmD;AAC/CwE,QAAAA,QAAQ,GAAGiC,MAAX;AACAA,QAAAA,MAAM,GAAGzC,IAAI,CAAC8C,MAAd;AACH;;AACD,UAAIpE,KAAK,YAAY6F,IAAI,CAACW,CAAL,CAAOwX,SAA5B,EAAuC;AACnClc,QAAAA,QAAQ,GAAG9B,KAAK,CAAC8B,QAAjB;AACAiC,QAAAA,MAAM,GAAG/D,KAAK,CAAC+D,MAAf;AACAoX,QAAAA,EAAE,GAAGpX,MAAM,CAACb,GAAZ;AACAlD,QAAAA,KAAK,GAAGA,KAAK,CAAC6I,IAAd;AACH;;AACD,UAAI/K,IAAI,GAAGK,SAAX;;AACA,UAAI0H,IAAI,CAACM,EAAL,CAAQnG,KAAR,EAAe,OAAf,KAA2B6F,IAAI,CAACM,EAAL,CAAQrI,IAAI,CAACA,IAAI,CAACR,MAAL,GAAc,CAAf,CAAZ,EAA+B,OAA/B,CAA/B,EAAwE;AACpE,YAAIs1B,IAAI,GAAG,IAAX;AACH;;AACD,UAAIC,KAAJ;AAAA,UACIC,OAAO,GAAG,YAAY;AAClB,YAAID,KAAJ,EAAW;AACP,eAAK/1B,CAAL,GAAS+1B,KAAT;AACH,SAFD,MAEO;AACHA,UAAAA,KAAK,GAAG,KAAK/1B,CAAb;AACH;AACJ,OAPL;AAAA,UAQIi2B,EAAE,GAAG,CART;AAAA,UASI/uB,GAAG,GAAG,IATV;AAAA,UAUIgvB,UAAU,GAAGlxB,QAAQ,IAAI,YAAY;AACjC,YAAI,EAAEixB,EAAF,IAAQ/uB,GAAG,CAAC1G,MAAhB,EAAwB;AACpBwE,UAAAA,QAAQ,CAAC5D,IAAT,CAAc,IAAd;AACH;AACJ,OAdL;;AAeA,aAAO,KAAK+W,OAAL,CAAa,UAAU5M,EAAV,EAAcjL,CAAd,EAAiB;AACjCI,QAAAA,GAAG,CAACoD,IAAJ,CAAS,sBAAsByH,EAAE,CAAC9E,EAAlC,EAAsCuvB,OAAtC;;AACA,YAAIF,IAAJ,EAAU;AACN90B,UAAAA,IAAI,CAACV,CAAD,CAAJ,IAAWiL,EAAE,CAACiW,OAAH,CAAWtf,KAAX,CAAiBqJ,EAAjB,EAAqBvK,IAAI,CAACV,CAAD,CAAzB,CAAX;AACH,SAFD,MAEO;AACHiL,UAAAA,EAAE,CAACiW,OAAH,CAAWte,KAAX,EAAkBmb,EAAlB,EAAsBpX,MAAtB,EAA8BivB,UAA9B;AACH;AACJ,OAPM,CAAP;AAQH,KAtCD;;AAuCAN,IAAAA,QAAQ,CAACrW,MAAT,GAAkB,YAAY;AAC1B,aAAO,KAAK/e,MAAZ,EAAoB;AAChB,aAAK0wB,GAAL,GAAW3R,MAAX;AACH;;AACD,aAAO,IAAP;AACH,KALD;AAMA;;;;;;;;;;;;;;;;;;;;;AAmBAqW,IAAAA,QAAQ,CAACO,IAAT,GAAgB,UAAUpqB,IAAV,EAAgBhM,CAAhB,EAAmBC,CAAnB,EAAsB;AAClC,UAAIiV,IAAI,GAAG,EAAX;;AACA,UAAI,OAAOlV,CAAP,IAAY,UAAhB,EAA4B;AACxB,aAAK41B,QAAL,CAAc5pB,IAAd,IAAsBhM,CAAtB;AACH,OAFD,MAEO;AACH,YAAIq2B,KAAK,GAAGp2B,CAAC,IAAI+L,IAAjB;;AACA,aAAK4pB,QAAL,CAAc5pB,IAAd,IAAsB,UAAUkI,CAAV,EAAa;AAC/BgB,UAAAA,IAAI,CAACmhB,KAAD,CAAJ,GAAcniB,CAAd;AACAlU,UAAAA,CAAC,CAACgM,IAAF,CAAOkJ,IAAP;AACH,SAHD;AAIH;;AACD,aAAO,IAAP;AACH,KAZD;;AAaA2gB,IAAAA,QAAQ,CAAC7pB,IAAT,GAAgB,UAAU4F,KAAV,EAAiB;AAC7B,UAAI0kB,OAAO,GAAG,EAAd;;AACA,WAAK,IAAI7zB,CAAT,IAAcmP,KAAd,EAAqB;AACjB,YAAI,KAAKgkB,QAAL,CAAcnzB,CAAd,CAAJ,EAAsB;AAClB,eAAKmzB,QAAL,CAAcnzB,CAAd,EAAiBmP,KAAK,CAACnP,CAAD,CAAtB;AACH,SAFD,MAEO;AACH6zB,UAAAA,OAAO,CAAC7zB,CAAD,CAAP,GAAamP,KAAK,CAACnP,CAAD,CAAlB;AACH;AACJ;;AACD,WAAK,IAAIlC,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAG,KAAKgC,KAAL,CAAW/B,MAAhC,EAAwCF,CAAC,GAAGC,EAA5C,EAAgDD,CAAC,EAAjD,EAAqD;AACjD,aAAKiC,KAAL,CAAWjC,CAAX,EAAcyL,IAAd,CAAmBsqB,OAAnB;AACH;;AACD,aAAO,IAAP;AACH,KAbD;AAcA;;;;;;;;AAMAT,IAAAA,QAAQ,CAACvM,KAAT,GAAiB,YAAY;AACzB,aAAO,KAAK7oB,MAAZ,EAAoB;AAChB,aAAK0wB,GAAL;AACH;AACJ,KAJD;AAKA;;;;;;;;;;;;;AAWA0E,IAAAA,QAAQ,CAACjyB,MAAT,GAAkB,UAAU2yB,KAAV,EAAiB/nB,KAAjB,EAAwBgoB,SAAxB,EAAmC;AACjDD,MAAAA,KAAK,GAAGA,KAAK,GAAG,CAAR,GAAYnsB,IAAI,CAAC,KAAK3J,MAAL,GAAc81B,KAAf,EAAsB,CAAtB,CAAhB,GAA2CA,KAAnD;AACA/nB,MAAAA,KAAK,GAAGpE,IAAI,CAAC,CAAD,EAAIE,IAAI,CAAC,KAAK7J,MAAL,GAAc81B,KAAf,EAAsB/nB,KAAtB,CAAR,CAAZ;AACA,UAAIioB,IAAI,GAAG,EAAX;AAAA,UACIC,KAAK,GAAG,EADZ;AAAA,UAEIz1B,IAAI,GAAG,EAFX;AAAA,UAGIV,CAHJ;;AAIA,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGe,SAAS,CAACb,MAA1B,EAAkCF,CAAC,EAAnC,EAAuC;AACnCU,QAAAA,IAAI,CAACe,IAAL,CAAUV,SAAS,CAACf,CAAD,CAAnB;AACH;;AACD,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGiO,KAAhB,EAAuBjO,CAAC,EAAxB,EAA4B;AACxBm2B,QAAAA,KAAK,CAAC10B,IAAN,CAAW,KAAKu0B,KAAK,GAAGh2B,CAAb,CAAX;AACH;;AACD,aAAOA,CAAC,GAAG,KAAKE,MAAL,GAAc81B,KAAzB,EAAgCh2B,CAAC,EAAjC,EAAqC;AACjCk2B,QAAAA,IAAI,CAACz0B,IAAL,CAAU,KAAKu0B,KAAK,GAAGh2B,CAAb,CAAV;AACH;;AACD,UAAIo2B,MAAM,GAAG11B,IAAI,CAACR,MAAlB;;AACA,WAAKF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGo2B,MAAM,GAAGF,IAAI,CAACh2B,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AACvC,aAAKiC,KAAL,CAAW+zB,KAAK,GAAGh2B,CAAnB,IAAwB,KAAKg2B,KAAK,GAAGh2B,CAAb,IAAkBA,CAAC,GAAGo2B,MAAJ,GAAa11B,IAAI,CAACV,CAAD,CAAjB,GAAuBk2B,IAAI,CAACl2B,CAAC,GAAGo2B,MAAL,CAArE;AACH;;AACDp2B,MAAAA,CAAC,GAAG,KAAKiC,KAAL,CAAW/B,MAAX,GAAoB,KAAKA,MAAL,IAAe+N,KAAK,GAAGmoB,MAA/C;;AACA,aAAO,KAAKp2B,CAAL,CAAP,EAAgB;AACZ,eAAO,KAAKA,CAAC,EAAN,CAAP;AACH;;AACD,aAAO,IAAIo1B,GAAJ,CAAQe,KAAR,CAAP;AACH,KAzBD;AA0BA;;;;;;;;;;;AASAb,IAAAA,QAAQ,CAACe,OAAT,GAAmB,UAAUprB,EAAV,EAAc;AAC7B,WAAK,IAAIjL,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAG,KAAKC,MAA1B,EAAkCF,CAAC,GAAGC,EAAtC,EAA0CD,CAAC,EAA3C,EAA+C,IAAI,KAAKA,CAAL,KAAWiL,EAAf,EAAmB;AAC9D,aAAK5H,MAAL,CAAYrD,CAAZ,EAAe,CAAf;AACA,eAAO,IAAP;AACH;;AACD,aAAO,KAAP;AACH,KAND;;AAOAs1B,IAAAA,QAAQ,CAACtW,WAAT,GAAuB,UAAU/T,EAAV,EAAc;AACjC,UAAIjL,CAAC,GAAG,KAAKiC,KAAL,CAAW/B,MAAnB;;AACA,aAAOF,CAAC,EAAR,EAAY;AACR,aAAKiC,KAAL,CAAWjC,CAAX,EAAcgf,WAAd,CAA0B/T,EAA1B;AACH;;AACD,aAAO,IAAP;AACH,KAND;;AAOAqqB,IAAAA,QAAQ,CAACne,OAAT,GAAmB,YAAY;AAC3B,UAAIvP,CAAC,GAAG,EAAR;AAAA,UACIG,CAAC,GAAG,EADR;AAAA,UAEIuG,EAAE,GAAG,EAFT;AAAA,UAGIC,EAAE,GAAG,EAHT;;AAIA,WAAK,IAAIvO,CAAC,GAAG,KAAKiC,KAAL,CAAW/B,MAAxB,EAAgCF,CAAC,EAAjC,GAAsC,IAAI,CAAC,KAAKiC,KAAL,CAAWjC,CAAX,EAAc6c,OAAnB,EAA4B;AAC9D,YAAIxB,GAAG,GAAG,KAAKpZ,KAAL,CAAWjC,CAAX,EAAcmX,OAAd,EAAV;AACAvP,QAAAA,CAAC,CAACnG,IAAF,CAAO4Z,GAAG,CAACzT,CAAX;AACAG,QAAAA,CAAC,CAACtG,IAAF,CAAO4Z,GAAG,CAACtT,CAAX;AACAuG,QAAAA,EAAE,CAAC7M,IAAH,CAAQ4Z,GAAG,CAACzT,CAAJ,GAAQyT,GAAG,CAACtM,KAApB;AACAR,QAAAA,EAAE,CAAC9M,IAAH,CAAQ4Z,GAAG,CAACtT,CAAJ,GAAQsT,GAAG,CAACrM,MAApB;AACH;;AACDpH,MAAAA,CAAC,GAAGmC,IAAI,CAACnI,KAAL,CAAW,CAAX,EAAcgG,CAAd,CAAJ;AACAG,MAAAA,CAAC,GAAGgC,IAAI,CAACnI,KAAL,CAAW,CAAX,EAAcmG,CAAd,CAAJ;AACAuG,MAAAA,EAAE,GAAGzE,IAAI,CAACjI,KAAL,CAAW,CAAX,EAAc0M,EAAd,CAAL;AACAC,MAAAA,EAAE,GAAG1E,IAAI,CAACjI,KAAL,CAAW,CAAX,EAAc2M,EAAd,CAAL;AACA,aAAO;AACH3G,QAAAA,CAAC,EAAEA,CADA;AAEHG,QAAAA,CAAC,EAAEA,CAFA;AAGHuG,QAAAA,EAAE,EAAEA,EAHD;AAIHC,QAAAA,EAAE,EAAEA,EAJD;AAKHQ,QAAAA,KAAK,EAAET,EAAE,GAAG1G,CALT;AAMHoH,QAAAA,MAAM,EAAET,EAAE,GAAGxG,CANV;AAOHsY,QAAAA,EAAE,EAAEzY,CAAC,GAAG,CAAC0G,EAAE,GAAG1G,CAAN,IAAW,CAPhB;AAQH0Y,QAAAA,EAAE,EAAEvY,CAAC,GAAG,CAACwG,EAAE,GAAGxG,CAAN,IAAW;AARhB,OAAP;AAUH,KA1BD;;AA2BAutB,IAAAA,QAAQ,CAAC/nB,KAAT,GAAiB,UAAU3H,CAAV,EAAa;AAC1BA,MAAAA,CAAC,GAAG,IAAIwvB,GAAJ,EAAJ;;AACA,WAAK,IAAIp1B,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAG,KAAKgC,KAAL,CAAW/B,MAAhC,EAAwCF,CAAC,GAAGC,EAA5C,EAAgDD,CAAC,EAAjD,EAAqD;AACjD4F,QAAAA,CAAC,CAACnE,IAAF,CAAO,KAAKQ,KAAL,CAAWjC,CAAX,EAAcuN,KAAd,EAAP;AACH;;AACD,aAAO3H,CAAP;AACH,KAND;;AAOA0vB,IAAAA,QAAQ,CAAC5xB,QAAT,GAAoB,YAAY;AAC5B,aAAO,iBAAP;AACH,KAFD;;AAGA4xB,IAAAA,QAAQ,CAACpqB,IAAT,GAAgB,KAAhB,CAnS8C,CAoS9C;;AACAzC,IAAAA,IAAI,CAAC2sB,GAAL,GAAWA,GAAX;;AACA3sB,IAAAA,IAAI,CAAC7B,GAAL,GAAW,YAAY;AACnB,UAAIA,GAAG,GAAG,IAAIwuB,GAAJ,EAAV;;AACA,UAAIr0B,SAAS,CAACb,MAAd,EAAsB;AAClB0G,QAAAA,GAAG,CAACnF,IAAJ,CAASG,KAAT,CAAegF,GAAf,EAAoBjG,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAApB;AACH;;AACD,aAAO6F,GAAP;AACH,KAND;AAOH,GA7SD,EAjsMyC,CAg/MzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA6B,EAAAA,IAAI,CAACiU,MAAL,CAAY,UAAUjU,IAAV,EAAgBO,OAAhB,EAAyBG,KAAzB,EAAgClK,IAAhC,EAAsC;AAC9C,QAAI6C,KAAK,GAAG,EAAZ;AAAA,QACI8jB,MAAM,GAAG,UADb;AAAA,QAEIrc,GAAG,GAAGhJ,MAFV;AAGAuB,IAAAA,KAAK,CAACw0B,MAAN,GAAex0B,KAAK,CAACkV,IAAN,GAAa,QAA5B;;AACA,aAASuf,QAAT,CAAkBv0B,IAAlB,EAAwB;AACpB,UAAIb,CAAC,GAAGa,IAAI,CAAC,CAAD,CAAZ;;AACA,cAAQb,CAAC,CAACuL,WAAF,EAAR;AACI,aAAK,GAAL;AAAU,iBAAO,CAACvL,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAP;;AACV,aAAK,GAAL;AAAU,iBAAO,CAACA,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAP;;AACV,aAAK,GAAL;AAAU,cAAIa,IAAI,CAAC9B,MAAL,IAAe,CAAnB,EAAsB;AAC5B,mBAAO,CAACiB,CAAD,EAAI,CAAJ,EAAOa,IAAI,CAAC,CAAD,CAAX,EAAgBA,IAAI,CAAC,CAAD,CAApB,CAAP;AACH,WAFS,MAEH;AACH,mBAAO,CAACb,CAAD,EAAI,CAAJ,CAAP;AACH;;AACD,aAAK,GAAL;AAAU,cAAIa,IAAI,CAAC9B,MAAL,IAAe,CAAnB,EAAsB;AAC5B,mBAAO,CAACiB,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAUa,IAAI,CAAC,CAAD,CAAd,EAAmBA,IAAI,CAAC,CAAD,CAAvB,CAAP;AACH,WAFS,MAEH,IAAIA,IAAI,CAAC9B,MAAL,IAAe,CAAnB,EAAsB;AACzB,mBAAO,CAACiB,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAP;AACH,WAFM,MAEA;AACH,mBAAO,CAACA,CAAD,EAAI,CAAJ,CAAP;AACH;;AAdL;AAgBH;;AACD,aAASq1B,iBAAT,CAA2BvL,EAA3B,EAA+BG,EAA/B,EAAmCjU,OAAnC,EAA4C;AACxCiU,MAAAA,EAAE,GAAG7hB,GAAG,CAAC6hB,EAAD,CAAH,CAAQle,OAAR,CAAgB,eAAhB,EAAiC+d,EAAjC,CAAL;AACAA,MAAAA,EAAE,GAAGxiB,IAAI,CAACoM,oBAAL,CAA0BoW,EAA1B,KAAiC,EAAtC;AACAG,MAAAA,EAAE,GAAG3iB,IAAI,CAACoM,oBAAL,CAA0BuW,EAA1B,KAAiC,EAAtC;AACA,UAAIqL,SAAS,GAAGpvB,IAAI,CAACyC,GAAL,CAASmhB,EAAE,CAAC/qB,MAAZ,EAAoBkrB,EAAE,CAAClrB,MAAvB,CAAhB;AAAA,UACIwgB,IAAI,GAAG,EADX;AAAA,UAEIC,EAAE,GAAG,EAFT;AAAA,UAGI3gB,CAAC,GAAG,CAHR;AAAA,UAGWmC,CAHX;AAAA,UAGcC,EAHd;AAAA,UAIIs0B,GAJJ;AAAA,UAISC,GAJT;;AAKA,aAAO32B,CAAC,GAAGy2B,SAAX,EAAsBz2B,CAAC,EAAvB,EAA2B;AACvB02B,QAAAA,GAAG,GAAGzL,EAAE,CAACjrB,CAAD,CAAF,IAASu2B,QAAQ,CAACnL,EAAE,CAACprB,CAAD,CAAH,CAAvB;AACA22B,QAAAA,GAAG,GAAGvL,EAAE,CAACprB,CAAD,CAAF,IAASu2B,QAAQ,CAACG,GAAD,CAAvB;;AACA,YAAKA,GAAG,CAAC,CAAD,CAAH,IAAUC,GAAG,CAAC,CAAD,CAAd,IACCD,GAAG,CAAC,CAAD,CAAH,CAAOhqB,WAAP,MAAwB,GAAxB,KAAgCgqB,GAAG,CAAC,CAAD,CAAH,IAAUC,GAAG,CAAC,CAAD,CAAb,IAAoBD,GAAG,CAAC,CAAD,CAAH,IAAUC,GAAG,CAAC,CAAD,CAAjE,CADD,IAECD,GAAG,CAAC,CAAD,CAAH,CAAOhqB,WAAP,MAAwB,GAAxB,KAAgCgqB,GAAG,CAAC,CAAD,CAAH,IAAUC,GAAG,CAAC,CAAD,CAAb,IAAoBD,GAAG,CAAC,CAAD,CAAH,IAAUC,GAAG,CAAC,CAAD,CAAjE,CAFL,EAGM;AACE1L,UAAAA,EAAE,GAAGxiB,IAAI,CAACW,CAAL,CAAO8L,gBAAP,CAAwB+V,EAAxB,EAA4B9T,OAAO,EAAnC,CAAL;AACAiU,UAAAA,EAAE,GAAG3iB,IAAI,CAACW,CAAL,CAAO8L,gBAAP,CAAwBkW,EAAxB,EAA4BjU,OAAO,EAAnC,CAAL;AACAuJ,UAAAA,IAAI,GAAG,CAAC,CAAC,GAAD,EAAMuK,EAAE,CAACxrB,CAAT,EAAYwrB,EAAE,CAACvrB,CAAf,EAAkBurB,EAAE,CAACxW,CAArB,EAAwBwW,EAAE,CAAC/I,CAA3B,EAA8B+I,EAAE,CAACzqB,CAAjC,EAAoCyqB,EAAE,CAAC/pB,CAAvC,CAAD,CAAP;AACAyf,UAAAA,EAAE,GAAG,CAAC,CAAC,GAAD,EAAMyK,EAAE,CAAC3rB,CAAT,EAAY2rB,EAAE,CAAC1rB,CAAf,EAAkB0rB,EAAE,CAAC3W,CAArB,EAAwB2W,EAAE,CAAClJ,CAA3B,EAA8BkJ,EAAE,CAAC5qB,CAAjC,EAAoC4qB,EAAE,CAAClqB,CAAvC,CAAD,CAAL;AACA;AACP;;AACDwf,QAAAA,IAAI,CAAC1gB,CAAD,CAAJ,GAAU,EAAV;AACA2gB,QAAAA,EAAE,CAAC3gB,CAAD,CAAF,GAAQ,EAAR;;AACA,aAAKmC,CAAC,GAAG,CAAJ,EAAOC,EAAE,GAAGiF,IAAI,CAACyC,GAAL,CAAS4sB,GAAG,CAACx2B,MAAb,EAAqBy2B,GAAG,CAACz2B,MAAzB,CAAjB,EAAmDiC,CAAC,GAAGC,EAAvD,EAA2DD,CAAC,EAA5D,EAAgE;AAC5DA,UAAAA,CAAC,IAAIu0B,GAAL,KAAahW,IAAI,CAAC1gB,CAAD,CAAJ,CAAQmC,CAAR,IAAau0B,GAAG,CAACv0B,CAAD,CAA7B;AACAA,UAAAA,CAAC,IAAIw0B,GAAL,KAAahW,EAAE,CAAC3gB,CAAD,CAAF,CAAMmC,CAAN,IAAWw0B,GAAG,CAACx0B,CAAD,CAA3B;AACH;AACJ;;AACD,aAAO;AACHue,QAAAA,IAAI,EAAEkW,UAAU,CAAClW,IAAD,CADb;AAEHC,QAAAA,EAAE,EAAEiW,UAAU,CAACjW,EAAD,CAFX;AAGHzf,QAAAA,CAAC,EAAEivB,OAAO,CAACzP,IAAD;AAHP,OAAP;AAKH;;AACD,aAASoF,SAAT,CAAmBngB,GAAnB,EAAwB;AACpB,aAAOA,GAAP;AACH;;AACD,aAASogB,OAAT,CAAiBC,IAAjB,EAAuB;AACnB,aAAO,UAAUrgB,GAAV,EAAe;AAClB,eAAO,CAACA,GAAG,CAACiN,OAAJ,CAAY,CAAZ,CAAD,GAAkBoT,IAAzB;AACH,OAFD;AAGH;;AACD,aAAS6Q,UAAT,CAAoBlxB,GAApB,EAAyB;AACrB,aAAOA,GAAG,CAACoI,IAAJ,CAAS,GAAT,CAAP;AACH;;AACD,aAAS+oB,SAAT,CAAmBvjB,GAAnB,EAAwB;AACpB,aAAO9K,IAAI,CAAC6J,GAAL,CAASiB,GAAG,CAAC,CAAD,CAAZ,EAAiBA,GAAG,CAAC,CAAD,CAApB,EAAyBA,GAAG,CAAC,CAAD,CAA5B,CAAP;AACH;;AACD,aAAS4c,OAAT,CAAiB1gB,IAAjB,EAAuB;AACnB,UAAIvN,CAAC,GAAG,CAAR;AAAA,UAAWlC,CAAX;AAAA,UAAcC,EAAd;AAAA,UAAkBkC,CAAlB;AAAA,UAAqBC,EAArB;AAAA,UAAyBd,GAAzB;AAAA,UAA8B7B,CAA9B;AAAA,UAAiCC,CAAC,GAAG,EAArC;;AACA,WAAKM,CAAC,GAAG,CAAJ,EAAOC,EAAE,GAAGwP,IAAI,CAACvP,MAAtB,EAA8BF,CAAC,GAAGC,EAAlC,EAAsCD,CAAC,EAAvC,EAA2C;AACvCsB,QAAAA,GAAG,GAAG,GAAN;AACA7B,QAAAA,CAAC,GAAG,CAAC,MAAMgQ,IAAI,CAACzP,CAAD,CAAJ,CAAQ,CAAR,CAAN,GAAmB,GAApB,CAAJ;;AACA,aAAKmC,CAAC,GAAG,CAAJ,EAAOC,EAAE,GAAGqN,IAAI,CAACzP,CAAD,CAAJ,CAAQE,MAAzB,EAAiCiC,CAAC,GAAGC,EAArC,EAAyCD,CAAC,EAA1C,EAA8C;AAC1C1C,UAAAA,CAAC,CAAC0C,CAAD,CAAD,GAAO,SAAUD,CAAC,EAAX,GAAiB,GAAxB;AACH;;AACDZ,QAAAA,GAAG,IAAI7B,CAAC,GAAG,GAAX;AACAC,QAAAA,CAAC,CAACM,CAAD,CAAD,GAAOsB,GAAP;AACH;;AACD,aAAOy1B,QAAQ,CAAC,KAAD,EAAQ,qCAAqCr3B,CAArC,GAAyC,IAAjD,CAAf;AACH;;AACD,aAASk3B,UAAT,CAAoBnnB,IAApB,EAA0B;AACtB,UAAInO,GAAG,GAAG,EAAV;;AACA,WAAK,IAAItB,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGwP,IAAI,CAACvP,MAA1B,EAAkCF,CAAC,GAAGC,EAAtC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3C,aAAK,IAAImC,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGqN,IAAI,CAACzP,CAAD,CAAJ,CAAQE,MAA7B,EAAqCiC,CAAC,GAAGC,EAAzC,EAA6CD,CAAC,EAA9C,EAAkD;AAC9Cb,UAAAA,GAAG,CAACG,IAAJ,CAASgO,IAAI,CAACzP,CAAD,CAAJ,CAAQmC,CAAR,CAAT;AACH;AACJ;;AACD,aAAOb,GAAP;AACH;;AACD,aAAS01B,SAAT,CAAmB/pB,GAAnB,EAAwB;AACpB,aAAON,QAAQ,CAAClD,UAAU,CAACwD,GAAD,CAAX,CAAf;AACH;;AACD,aAASgqB,UAAT,CAAoBC,IAApB,EAA0BC,IAA1B,EAAgC;AAC5B,UAAI,CAAC1uB,IAAI,CAACM,EAAL,CAAQmuB,IAAR,EAAc,OAAd,CAAD,IAA2B,CAACzuB,IAAI,CAACM,EAAL,CAAQouB,IAAR,EAAc,OAAd,CAAhC,EAAwD;AACpD,eAAO,KAAP;AACH;;AACD,aAAOD,IAAI,CAACxzB,QAAL,MAAmByzB,IAAI,CAACzzB,QAAL,EAA1B;AACH;;AACDsF,IAAAA,OAAO,CAACpI,SAAR,CAAkB4gB,KAAlB,GAA0B,UAAUnhB,IAAV,EAAgBX,CAAhB,EAAmB;AACzC,aAAOU,GAAG,CAAC,iBAAD,EAAoB,IAApB,EAA0BC,IAA1B,EAAgCX,CAAhC,CAAH,CAAsCK,YAAtC,EAAP;AACH,KAFD;;AAGAK,IAAAA,GAAG,CAACoC,EAAJ,CAAO,iBAAP,EAA0B,UAAUnC,IAAV,EAAgBX,CAAhB,EAAmB;AACzC,UAAIyF,CAAJ;AAAA,UAAOC,CAAP;AAAA,UAAU3F,CAAC,GAAG8J,GAAG,CAAC,KAAKkC,IAAL,CAAUpL,IAAV,KAAmB,EAApB,CAAjB;AAAA,UACI4K,EAAE,GAAG,IADT;;AAEA,UAAI+rB,SAAS,CAACv3B,CAAD,CAAT,IAAgBu3B,SAAS,CAACt3B,CAAD,CAA7B,EAAkC;AAC9B,eAAO;AACHghB,UAAAA,IAAI,EAAEjX,UAAU,CAAChK,CAAD,CADb;AAEHkhB,UAAAA,EAAE,EAAElX,UAAU,CAAC/J,CAAD,CAFX;AAGHwB,UAAAA,CAAC,EAAE4kB;AAHA,SAAP;AAKH;;AACD,UAAIhkB,KAAK,CAACzB,IAAD,CAAL,IAAe,QAAnB,EAA6B;AACzB8E,QAAAA,CAAC,GAAGsD,IAAI,CAACoK,KAAL,CAAWpT,CAAX,CAAJ;AACA2F,QAAAA,CAAC,GAAGqD,IAAI,CAACoK,KAAL,CAAWnT,CAAX,CAAJ;AACA,eAAO;AACHghB,UAAAA,IAAI,EAAE,CAACvb,CAAC,CAACwM,CAAH,EAAMxM,CAAC,CAACyM,CAAR,EAAWzM,CAAC,CAACzF,CAAb,EAAgByF,CAAC,CAACkN,OAAlB,CADH;AAEHsO,UAAAA,EAAE,EAAE,CAACvb,CAAC,CAACuM,CAAH,EAAMvM,CAAC,CAACwM,CAAR,EAAWxM,CAAC,CAAC1F,CAAb,EAAgB0F,CAAC,CAACiN,OAAlB,CAFD;AAGHnR,UAAAA,CAAC,EAAE41B;AAHA,SAAP;AAKH;;AACD,UAAIz2B,IAAI,IAAI,SAAZ,EAAuB;AACnB8E,QAAAA,CAAC,GAAG,KAAKsG,IAAL,CAAUpL,IAAV,EAAgB2jB,EAAhB,CAAmBjiB,KAAnB,CAAyB,GAAzB,EAA8Bwb,GAA9B,CAAkC6Z,MAAlC,CAAJ;AACAhyB,QAAAA,CAAC,GAAG1F,CAAC,CAACqC,KAAF,CAAQ,GAAR,EAAawb,GAAb,CAAiB6Z,MAAjB,CAAJ;AACA,eAAO;AACH1W,UAAAA,IAAI,EAAEvb,CADH;AAEHwb,UAAAA,EAAE,EAAEvb,CAFD;AAGHlE,UAAAA,CAAC,EAAE21B;AAHA,SAAP;AAKH;;AACD,UAAIx2B,IAAI,IAAI,WAAR,IAAuBA,IAAI,IAAI,mBAA/B,IAAsDA,IAAI,IAAI,kBAAlE,EAAsF;AAClF,YAAIX,CAAC,YAAY+I,IAAI,CAAC4M,MAAtB,EAA8B;AAC1B3V,UAAAA,CAAC,GAAGA,CAAC,CAACue,iBAAF,EAAJ;AACH;;AACD,YAAI,CAACxV,IAAI,CAACW,CAAL,CAAO6L,WAAP,CAAmBjS,IAAnB,CAAwBtD,CAAxB,CAAL,EAAiC;AAC7BA,UAAAA,CAAC,GAAG+I,IAAI,CAACW,CAAL,CAAO2L,mBAAP,CAA2BrV,CAA3B,CAAJ;AACH;;AACD,eAAO82B,iBAAiB,CAAC/2B,CAAD,EAAIC,CAAJ,EAAO,YAAY;AACvC,iBAAOuL,EAAE,CAACkM,OAAH,CAAW,CAAX,CAAP;AACH,SAFuB,CAAxB;AAGH;;AACD,UAAI9W,IAAI,IAAI,GAAR,IAAeA,IAAI,IAAI,MAA3B,EAAmC;AAC/B8E,QAAAA,CAAC,GAAGsD,IAAI,CAACgH,IAAL,CAAU0lB,OAAV,CAAkB11B,CAAlB,EAAqBC,CAArB,CAAJ;AACA,eAAO;AACHghB,UAAAA,IAAI,EAAEkW,UAAU,CAACzxB,CAAC,CAAC,CAAD,CAAF,CADb;AAEHwb,UAAAA,EAAE,EAAEiW,UAAU,CAACzxB,CAAC,CAAC,CAAD,CAAF,CAFX;AAGHjE,UAAAA,CAAC,EAAEivB,OAAO,CAAChrB,CAAC,CAAC,CAAD,CAAF;AAHP,SAAP;AAKH;;AACD,UAAI9E,IAAI,IAAI,QAAZ,EAAsB;AAClB8E,QAAAA,CAAC,GAAGoE,GAAG,CAAC9J,CAAD,CAAH,CAAOsC,KAAP,CAAa0G,IAAI,CAACW,CAAL,CAAOhK,SAApB,CAAJ;AACAgG,QAAAA,CAAC,GAAGmE,GAAG,CAAC7J,CAAD,CAAH,CAAOqC,KAAP,CAAa0G,IAAI,CAACW,CAAL,CAAOhK,SAApB,CAAJ;AACA,eAAO;AACHshB,UAAAA,IAAI,EAAEvb,CADH;AAEHwb,UAAAA,EAAE,EAAEvb,CAFD;AAGHlE,UAAAA,CAAC,EAAE,UAAUyE,GAAV,EAAe;AAAE,mBAAOA,GAAP;AAAa;AAH9B,SAAP;AAKH;;AACD,UAAIygB,KAAK,GAAG3mB,CAAC,CAAC8S,KAAF,CAAQqT,MAAR,CAAZ;AAAA,UACIyR,KAAK,GAAG9tB,GAAG,CAAC7J,CAAD,CAAH,CAAO6S,KAAP,CAAaqT,MAAb,CADZ;;AAEA,UAAIQ,KAAK,IAAI6Q,UAAU,CAAC7Q,KAAD,EAAQiR,KAAR,CAAvB,EAAuC;AACnC,eAAO;AACH3W,UAAAA,IAAI,EAAEjX,UAAU,CAAChK,CAAD,CADb;AAEHkhB,UAAAA,EAAE,EAAElX,UAAU,CAAC/J,CAAD,CAFX;AAGHwB,UAAAA,CAAC,EAAE6kB,OAAO,CAACK,KAAD;AAHP,SAAP;AAKH,OAND,MAMO;AACH,eAAO;AACH1F,UAAAA,IAAI,EAAE,KAAKxB,IAAL,CAAU7e,IAAV,CADH;AAEHsgB,UAAAA,EAAE,EAAE,KAAKzB,IAAL,CAAU7e,IAAV,EAAgBX,CAAhB,CAFD;AAGHwB,UAAAA,CAAC,EAAE4kB;AAHA,SAAP;AAKH;AACJ,KAvED;AAwEH,GAnLD,EA7/MyC,CAkrNzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACArd,EAAAA,IAAI,CAACiU,MAAL,CAAY,UAAUjU,IAAV,EAAgBO,OAAhB,EAAyBG,KAAzB,EAAgClK,IAAhC,EAAsC;AAC9C,QAAI0d,OAAO,GAAG3T,OAAO,CAACpI,SAAtB;AAAA,QACAzB,GAAG,GAAG,gBADN;AAAA,QAEAm4B,aAAa,IAAG,iBAAiBr4B,IAAI,CAACgK,GAAzB,CAFb;AAAA,QAGApJ,MAAM,GAAG,CACL,OADK,EACI,UADJ,EACgB,WADhB,EAC6B,WAD7B,EAC0C,UAD1C,EAEL,WAFK,EAEQ,SAFR,EAEmB,YAFnB,EAEiC,WAFjC,EAE8C,UAF9C,EAGL,aAHK,CAHT;AAAA,QAQA03B,QAAQ,GAAG;AACPC,MAAAA,SAAS,EAAE,YADJ;AAEPC,MAAAA,SAAS,EAAE,WAFJ;AAGPC,MAAAA,OAAO,EAAE;AAHF,KARX;AAAA,QAaAC,SAAS,GAAG,UAAUtJ,EAAV,EAAcpjB,EAAd,EAAkB;AAC1B,UAAI5K,IAAI,GAAGguB,EAAE,IAAI,GAAN,GAAY,WAAZ,GAA0B,YAArC;AAAA,UACIplB,GAAG,GAAGgC,EAAE,IAAIA,EAAE,CAAC6E,IAAT,GAAgB7E,EAAE,CAAC6E,IAAH,CAAQ4J,aAAxB,GAAwCza,IAAI,CAACgK,GADvD;AAEA,aAAOA,GAAG,CAAC5I,IAAI,IAAI4I,GAAG,CAACmN,eAAZ,GAA8B,iBAA9B,GAAkD,MAAnD,CAAH,CAA8D/V,IAA9D,CAAP;AACH,KAjBD;AAAA,QAkBAu3B,cAAc,GAAG,YAAY;AACzB,WAAKC,WAAL,GAAmB,KAAnB;AACH,KApBD;AAAA,QAqBAC,YAAY,GAAG,YAAY;AACvB,aAAO,KAAKC,aAAL,CAAmBH,cAAnB,EAAP;AACH,KAvBD;AAAA,QAwBAI,eAAe,GAAG,YAAY;AAC1B,WAAKC,YAAL,GAAoB,IAApB;AACH,KA1BD;AAAA,QA2BAC,SAAS,GAAG,YAAY;AACpB,aAAO,KAAKH,aAAL,CAAmBC,eAAnB,EAAP;AACH,KA7BD;AAAA,QA8BAG,QAAQ,GAAG,UAAUlrB,GAAV,EAAe/B,IAAf,EAAqBktB,EAArB,EAAyBC,OAAzB,EAAkC;AACzC,UAAIC,QAAQ,GAAGhB,aAAa,IAAIC,QAAQ,CAACrsB,IAAD,CAAzB,GAAkCqsB,QAAQ,CAACrsB,IAAD,CAA1C,GAAmDA,IAAlE;AAAA,UACIhK,CAAC,GAAG,UAAUV,CAAV,EAAa;AACb,YAAI+3B,OAAO,GAAGZ,SAAS,CAAC,GAAD,EAAMU,OAAN,CAAvB;AAAA,YACIG,OAAO,GAAGb,SAAS,CAAC,GAAD,EAAMU,OAAN,CADvB;;AAEA,YAAIf,aAAa,IAAIC,QAAQ,CAACp4B,GAAD,CAAR,CAAc+L,IAAd,CAArB,EAA0C;AACtC,eAAK,IAAIlL,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGO,CAAC,CAACi4B,aAAF,IAAmBj4B,CAAC,CAACi4B,aAAF,CAAgBv4B,MAAxD,EAAgEF,CAAC,GAAGC,EAApE,EAAwED,CAAC,EAAzE,EAA6E;AACzE,gBAAIQ,CAAC,CAACi4B,aAAF,CAAgBz4B,CAAhB,EAAmBkc,MAAnB,IAA6BjP,GAA7B,IAAoCA,GAAG,CAACgJ,QAAJ,CAAazV,CAAC,CAACi4B,aAAF,CAAgBz4B,CAAhB,EAAmBkc,MAAhC,CAAxC,EAAiF;AAC7E,kBAAIwc,IAAI,GAAGl4B,CAAX;AACAA,cAAAA,CAAC,GAAGA,CAAC,CAACi4B,aAAF,CAAgBz4B,CAAhB,CAAJ;AACAQ,cAAAA,CAAC,CAACu3B,aAAF,GAAkBW,IAAlB;AACAl4B,cAAAA,CAAC,CAACo3B,cAAF,GAAmBE,YAAnB;AACAt3B,cAAAA,CAAC,CAACw3B,eAAF,GAAoBE,SAApB;AACA;AACH;AACJ;AACJ;;AACD,YAAItwB,CAAC,GAAGpH,CAAC,CAACm4B,OAAF,GAAYH,OAApB;AAAA,YACIzwB,CAAC,GAAGvH,CAAC,CAACo4B,OAAF,GAAYL,OADpB;AAEA,eAAOH,EAAE,CAACt3B,IAAH,CAAQu3B,OAAR,EAAiB73B,CAAjB,EAAoBoH,CAApB,EAAuBG,CAAvB,CAAP;AACH,OAnBL;;AAqBA,UAAImD,IAAI,KAAKotB,QAAb,EAAuB;AACnBrrB,QAAAA,GAAG,CAAC4rB,gBAAJ,CAAqB3tB,IAArB,EAA2BhK,CAA3B,EAA8B,KAA9B;AACH;;AAED+L,MAAAA,GAAG,CAAC4rB,gBAAJ,CAAqBP,QAArB,EAA+Bp3B,CAA/B,EAAkC,KAAlC;AAEA,aAAO,YAAY;AACf,YAAIgK,IAAI,KAAKotB,QAAb,EAAuB;AACnBrrB,UAAAA,GAAG,CAAC6rB,mBAAJ,CAAwB5tB,IAAxB,EAA8BhK,CAA9B,EAAiC,KAAjC;AACH;;AAED+L,QAAAA,GAAG,CAAC6rB,mBAAJ,CAAwBR,QAAxB,EAAkCp3B,CAAlC,EAAqC,KAArC;AACA,eAAO,IAAP;AACH,OAPD;AAQH,KAlED;AAAA,QAmEA63B,IAAI,GAAG,EAnEP;AAAA,QAoEAC,QAAQ,GAAG,UAAUx4B,CAAV,EAAa;AACpB,UAAIoH,CAAC,GAAGpH,CAAC,CAACm4B,OAAV;AAAA,UACI5wB,CAAC,GAAGvH,CAAC,CAACo4B,OADV;AAAA,UAEIL,OAAO,GAAGZ,SAAS,CAAC,GAAD,CAFvB;AAAA,UAGIa,OAAO,GAAGb,SAAS,CAAC,GAAD,CAHvB;AAAA,UAIIsB,KAJJ;AAAA,UAKI92B,CAAC,GAAG42B,IAAI,CAAC74B,MALb;;AAMA,aAAOiC,CAAC,EAAR,EAAY;AACR82B,QAAAA,KAAK,GAAGF,IAAI,CAAC52B,CAAD,CAAZ;;AACA,YAAIm1B,aAAJ,EAAmB;AACf,cAAIt3B,CAAC,GAAGQ,CAAC,CAAC04B,OAAF,IAAa14B,CAAC,CAAC04B,OAAF,CAAUh5B,MAA/B;AAAA,cACIi5B,KADJ;;AAEA,iBAAOn5B,CAAC,EAAR,EAAY;AACRm5B,YAAAA,KAAK,GAAG34B,CAAC,CAAC04B,OAAF,CAAUl5B,CAAV,CAAR;;AACA,gBAAIm5B,KAAK,CAACC,UAAN,IAAoBH,KAAK,CAAChuB,EAAN,CAASouB,KAAT,CAAelzB,EAAnC,IAAyC8yB,KAAK,CAAChuB,EAAN,CAAS6E,IAAT,CAAcmG,QAAd,CAAuBkjB,KAAK,CAACjd,MAA7B,CAA7C,EAAmF;AAC/EtU,cAAAA,CAAC,GAAGuxB,KAAK,CAACR,OAAV;AACA5wB,cAAAA,CAAC,GAAGoxB,KAAK,CAACP,OAAV;AACA,eAACp4B,CAAC,CAACu3B,aAAF,GAAkBv3B,CAAC,CAACu3B,aAApB,GAAoCv3B,CAArC,EAAwCo3B,cAAxC;AACA;AACH;AACJ;AACJ,SAZD,MAYO;AACHp3B,UAAAA,CAAC,CAACo3B,cAAF;AACH;;AACD,YAAI9nB,IAAI,GAAGmpB,KAAK,CAAChuB,EAAN,CAAS6E,IAApB;AAAA,YACIrD,CADJ;AAAA,YAEIuc,IAAI,GAAGlZ,IAAI,CAACiP,WAFhB;AAAA,YAGIxF,MAAM,GAAGzJ,IAAI,CAACwG,UAHlB;AAAA,YAIIgjB,OAAO,GAAGxpB,IAAI,CAACiD,KAAL,CAAWumB,OAJzB,CAjBQ,CAsBR;AACA;AACA;AACA;AACA;AACA;;AACA1xB,QAAAA,CAAC,IAAI4wB,OAAL;AACAzwB,QAAAA,CAAC,IAAIwwB,OAAL;AACAn4B,QAAAA,GAAG,CAAC,oBAAoB64B,KAAK,CAAChuB,EAAN,CAAS9E,EAA9B,EAAkC8yB,KAAK,CAACM,UAAN,IAAoBN,KAAK,CAAChuB,EAA5D,EAAgErD,CAAC,GAAGqxB,KAAK,CAAChuB,EAAN,CAASouB,KAAT,CAAezxB,CAAnF,EAAsFG,CAAC,GAAGkxB,KAAK,CAAChuB,EAAN,CAASouB,KAAT,CAAetxB,CAAzG,EAA4GH,CAA5G,EAA+GG,CAA/G,EAAkHvH,CAAlH,CAAH;AACH;AACJ,KA3GD;AAAA,QA4GAg5B,MAAM,GAAG,UAAUh5B,CAAV,EAAa;AAClBiI,MAAAA,IAAI,CAACgxB,WAAL,CAAiBT,QAAjB,EAA2BU,SAA3B,CAAqCF,MAArC;AACA,UAAIx5B,CAAC,GAAG+4B,IAAI,CAAC74B,MAAb;AAAA,UACI+4B,KADJ;;AAEA,aAAOj5B,CAAC,EAAR,EAAY;AACRi5B,QAAAA,KAAK,GAAGF,IAAI,CAAC/4B,CAAD,CAAZ;AACAi5B,QAAAA,KAAK,CAAChuB,EAAN,CAASouB,KAAT,GAAiB,EAAjB;AACAj5B,QAAAA,GAAG,CAAC,mBAAmB64B,KAAK,CAAChuB,EAAN,CAAS9E,EAA7B,EAAiC8yB,KAAK,CAACU,SAAN,IAAmBV,KAAK,CAACW,WAAzB,IAAwCX,KAAK,CAACM,UAA9C,IAA4DN,KAAK,CAAChuB,EAAnG,EAAuGzK,CAAvG,CAAH;AACAJ,QAAAA,GAAG,CAAC8C,GAAJ,CAAQ,iBAAiB+1B,KAAK,CAAChuB,EAAN,CAAS9E,EAAlC;AACH;;AACD4yB,MAAAA,IAAI,GAAG,EAAP;AACH,KAvHD;AAwHA;;;;;;;;;AAQA;;;;;;;;;AASA;;;;;;;;;AAQA;;;;;;;;;AASA;;;;;;;;;AAQA;;;;;;;;;AASA;;;;;;;;;AAQA;;;;;;;;;AASA;;;;;;;;;AAQA;;;;;;;;;AASA;;;;;;;;;AAQA;;;;;;;;;AASA;;;;;;;;;AAQA;;;;;;;;;AASA;;;;;;;;;AAQA;;;;;;;;;AASA;;;;;;;;;AAQA;;;;;;;;;AASA;;;;;;;;;AAQA;;;;;;;;;AASA;;;;;;;;;AAQA;;;;;;;;;;AAQA,SAAK,IAAI/4B,CAAC,GAAGH,MAAM,CAACK,MAApB,EAA4BF,CAAC,EAA7B,GAAkC;AAC9B,OAAC,UAAU65B,SAAV,EAAqB;AAClBpxB,QAAAA,IAAI,CAACoxB,SAAD,CAAJ,GAAkBld,OAAO,CAACkd,SAAD,CAAP,GAAqB,UAAUzB,EAAV,EAAc93B,KAAd,EAAqB;AACxD,cAAImI,IAAI,CAACM,EAAL,CAAQqvB,EAAR,EAAY,UAAZ,CAAJ,EAA6B;AACzB,iBAAKv4B,MAAL,GAAc,KAAKA,MAAL,IAAe,EAA7B;AACA,iBAAKA,MAAL,CAAY4B,IAAZ,CAAiB;AACbpB,cAAAA,IAAI,EAAEw5B,SADO;AAEb34B,cAAAA,CAAC,EAAEk3B,EAFU;AAGbj1B,cAAAA,MAAM,EAAEg1B,QAAQ,CAAC,KAAKroB,IAAL,IAAaxG,QAAd,EAAwBuwB,SAAxB,EAAmCzB,EAAnC,EAAuC93B,KAAK,IAAI,IAAhD;AAHH,aAAjB;AAKH,WAPD,MAOO;AACH,iBAAK,IAAIN,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAG,KAAKJ,MAAL,CAAYK,MAAjC,EAAyCF,CAAC,GAAGC,EAA7C,EAAiDD,CAAC,EAAlD,EAAsD,IAAI,KAAKH,MAAL,CAAYG,CAAZ,EAAeK,IAAf,IAAuBw5B,SAA3B,EAAsC;AACxF,kBAAI;AACA,qBAAKh6B,MAAL,CAAYG,CAAZ,EAAekB,CAAf,CAAiBJ,IAAjB,CAAsB,IAAtB;AACH,eAFD,CAEE,OAAON,CAAP,EAAU,CAAE;AACjB;AACJ;;AACD,iBAAO,IAAP;AACH,SAhBD;;AAiBAiI,QAAAA,IAAI,CAAC,OAAOoxB,SAAR,CAAJ,GACAld,OAAO,CAAC,OAAOkd,SAAR,CAAP,GAA4B,UAAUzB,EAAV,EAAc;AACtC,cAAIv4B,MAAM,GAAG,KAAKA,MAAL,IAAe,EAA5B;AAAA,cACIsB,CAAC,GAAGtB,MAAM,CAACK,MADf;;AAEA,iBAAOiB,CAAC,EAAR,EAAY,IAAItB,MAAM,CAACsB,CAAD,CAAN,CAAUd,IAAV,IAAkBw5B,SAAlB,KACAh6B,MAAM,CAACsB,CAAD,CAAN,CAAUD,CAAV,IAAek3B,EAAf,IAAqB,CAACA,EADtB,CAAJ,EAC+B;AACvCv4B,YAAAA,MAAM,CAACsB,CAAD,CAAN,CAAUgC,MAAV;AACAtD,YAAAA,MAAM,CAACwD,MAAP,CAAclC,CAAd,EAAiB,CAAjB;AACA,aAACtB,MAAM,CAACK,MAAR,IAAkB,OAAO,KAAKL,MAA9B;AACA,mBAAO,IAAP;AACH;;AACD,iBAAO,IAAP;AACH,SAZD;AAaH,OA/BD,EA+BGA,MAAM,CAACG,CAAD,CA/BT;AAgCH;AACD;;;;;;;;;;;;;AAWA2c,IAAAA,OAAO,CAACmd,KAAR,GAAgB,UAAUC,IAAV,EAAgBC,KAAhB,EAAuBC,QAAvB,EAAiCC,SAAjC,EAA4C;AACxD,aAAO,KAAKC,SAAL,CAAeJ,IAAf,EAAqBE,QAArB,EAA+BG,QAA/B,CAAwCJ,KAAxC,EAA+CE,SAAS,IAAID,QAA5D,CAAP;AACH,KAFD;AAGA;;;;;;;;;;;AASAtd,IAAAA,OAAO,CAAC0d,OAAR,GAAkB,UAAUN,IAAV,EAAgBC,KAAhB,EAAuB;AACrC,aAAO,KAAKM,WAAL,CAAiBP,IAAjB,EAAuBQ,UAAvB,CAAkCP,KAAlC,CAAP;AACH,KAFD;;AAGA,QAAIQ,SAAS,GAAG,EAAhB,CA/W8C,CAgX9C;AACA;AACA;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA7d,IAAAA,OAAO,CAACoc,IAAR,GAAe,UAAU0B,MAAV,EAAkBC,OAAlB,EAA2BC,KAA3B,EAAkCpB,UAAlC,EAA8CK,WAA9C,EAA2DD,SAA3D,EAAsE;AACjF,UAAI1uB,EAAE,GAAG,IAAT;;AACA,UAAI,CAAClK,SAAS,CAACb,MAAf,EAAuB;AACnB,YAAI06B,aAAJ;AACA,eAAO3vB,EAAE,CAAC8tB,IAAH,CAAQ,UAAUppB,EAAV,EAAcC,EAAd,EAAkB;AAC7B,eAAKnE,IAAL,CAAU;AACN6M,YAAAA,SAAS,EAAEsiB,aAAa,IAAIA,aAAa,GAAG,GAAH,GAAS,GAA1B,CAAb,GAA8C,CAACjrB,EAAD,EAAKC,EAAL;AADnD,WAAV;AAGH,SAJM,EAIJ,YAAY;AACXgrB,UAAAA,aAAa,GAAG,KAAKtiB,SAAL,GAAiBwF,KAAjC;AACH,SANM,CAAP;AAOH;;AACD,eAASrX,KAAT,CAAejG,CAAf,EAAkBoH,CAAlB,EAAqBG,CAArB,EAAwB;AACpB,SAACvH,CAAC,CAACu3B,aAAF,IAAmBv3B,CAApB,EAAuBo3B,cAAvB;AACA3sB,QAAAA,EAAE,CAACouB,KAAH,CAASzxB,CAAT,GAAaA,CAAb;AACAqD,QAAAA,EAAE,CAACouB,KAAH,CAAStxB,CAAT,GAAaA,CAAb;AACAkD,QAAAA,EAAE,CAACouB,KAAH,CAASlzB,EAAT,GAAc3F,CAAC,CAAC44B,UAAhB;AACA,SAACL,IAAI,CAAC74B,MAAN,IAAgBuI,IAAI,CAACgvB,SAAL,CAAeuB,QAAf,EAAyBtB,OAAzB,CAAiC8B,MAAjC,CAAhB;AACAT,QAAAA,IAAI,CAACt3B,IAAL,CAAU;AAACwJ,UAAAA,EAAE,EAAEA,EAAL;AAASsuB,UAAAA,UAAU,EAAEA,UAArB;AAAiCK,UAAAA,WAAW,EAAEA,WAA9C;AAA2DD,UAAAA,SAAS,EAAEA;AAAtE,SAAV;AACAe,QAAAA,OAAO,IAAIt6B,GAAG,CAACoC,EAAJ,CAAO,qBAAqByI,EAAE,CAAC9E,EAA/B,EAAmCu0B,OAAnC,CAAX;AACAD,QAAAA,MAAM,IAAIr6B,GAAG,CAACoC,EAAJ,CAAO,oBAAoByI,EAAE,CAAC9E,EAA9B,EAAkCs0B,MAAlC,CAAV;AACAE,QAAAA,KAAK,IAAIv6B,GAAG,CAACoC,EAAJ,CAAO,mBAAmByI,EAAE,CAAC9E,EAA7B,EAAiCw0B,KAAjC,CAAT;AACAv6B,QAAAA,GAAG,CAAC,qBAAqB6K,EAAE,CAAC9E,EAAzB,EAA6ByzB,WAAW,IAAIL,UAAf,IAA6BtuB,EAA1D,EAA8DrD,CAA9D,EAAiEG,CAAjE,EAAoEvH,CAApE,CAAH;AACH;;AACD,eAASq6B,IAAT,CAAcr6B,CAAd,EAAiBoH,CAAjB,EAAoBG,CAApB,EAAuB;AACnB3H,QAAAA,GAAG,CAAC,mBAAmB6K,EAAE,CAAC9E,EAAvB,EAA2B8E,EAA3B,EAA+BzK,CAA/B,EAAkCoH,CAAlC,EAAqCG,CAArC,CAAH;AACH;;AACD3H,MAAAA,GAAG,CAACoC,EAAJ,CAAO,mBAAmByI,EAAE,CAAC9E,EAA7B,EAAiCM,KAAjC;AACAwE,MAAAA,EAAE,CAACouB,KAAH,GAAW,EAAX;AACAmB,MAAAA,SAAS,CAAC/4B,IAAV,CAAe;AAACwJ,QAAAA,EAAE,EAAEA,EAAL;AAASxE,QAAAA,KAAK,EAAEA,KAAhB;AAAuBo0B,QAAAA,IAAI,EAAEA;AAA7B,OAAf;AACA5vB,MAAAA,EAAE,CAACusB,SAAH,CAAaqD,IAAb;AACA,aAAO5vB,EAAP;AACH,KAhCD;AAiCA;;;;;;;AAOA;AACA;AACA;;AACA;;;;;;;;AAMA0R,IAAAA,OAAO,CAACme,MAAR,GAAiB,YAAY;AACzB,UAAI96B,CAAC,GAAGw6B,SAAS,CAACt6B,MAAlB;;AACA,aAAOF,CAAC,EAAR,EAAY,IAAIw6B,SAAS,CAACx6B,CAAD,CAAT,CAAaiL,EAAb,IAAmB,IAAvB,EAA6B;AACrC,aAAK8vB,WAAL,CAAiBP,SAAS,CAACx6B,CAAD,CAAT,CAAa66B,IAA9B;AACAL,QAAAA,SAAS,CAACn3B,MAAV,CAAiBrD,CAAjB,EAAoB,CAApB;AACAI,QAAAA,GAAG,CAAC+C,MAAJ,CAAW,iBAAiB,KAAKgD,EAAjC;AACA/F,QAAAA,GAAG,CAAC+C,MAAJ,CAAW,mBAAmB,KAAKgD,EAAnC;AACH;;AACD,OAACq0B,SAAS,CAACt6B,MAAX,IAAqBuI,IAAI,CAACgxB,WAAL,CAAiBT,QAAjB,EAA2BU,SAA3B,CAAqCF,MAArC,CAArB;AACA,aAAO,IAAP;AACH,KAVD;AAWH,GA9cD,EA/rNyC,CA+oOzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA/wB,EAAAA,IAAI,CAACiU,MAAL,CAAY,UAAUjU,IAAV,EAAgBO,OAAhB,EAAyBG,KAAzB,EAAgClK,IAAhC,EAAsC;AAC9C,QAAI0d,OAAO,GAAG3T,OAAO,CAACpI,SAAtB;AAAA,QACIo6B,MAAM,GAAG7xB,KAAK,CAACvI,SADnB;AAAA,QAEIq6B,KAAK,GAAG,iBAFZ;AAAA,QAGI1xB,GAAG,GAAGhJ,MAHV;AAAA,QAIIiL,CAAC,GAAG/C,IAAI,CAACW,CAAL,CAAOoC,CAJf;AAKA/C,IAAAA,IAAI,CAACyyB,MAAL,GAAc,EAAd;AACA;;;;;;;;;;;;;;;;AAeAF,IAAAA,MAAM,CAACE,MAAP,GAAgB,UAAUC,MAAV,EAAkB;AAC9B,UAAIjjB,KAAK,GAAG,IAAZ;;AACA,UAAIA,KAAK,CAAChN,IAAN,IAAc,KAAlB,EAAyB;AACrBgN,QAAAA,KAAK,GAAGA,KAAK,CAACA,KAAd;AACH;;AACD,UAAIhX,CAAC,GAAGuH,IAAI,CAACoQ,KAAL,CAAWtP,GAAG,CAAC4xB,MAAD,CAAd,CAAR;AAAA,UACIh1B,EAAE,GAAGsC,IAAI,CAACW,CAAL,CAAOjD,EAAP,EADT;AAAA,UAEI4I,KAAK,GAAGmJ,KAAK,CAACpI,IAAN,CAAWoX,WAFvB;AAAA,UAGIlY,MAAM,GAAGkJ,KAAK,CAACpI,IAAN,CAAWqX,YAHxB;AAAA,UAII+T,MAAM,GAAG1vB,CAAC,CAAC,QAAD,CAJd;;AAKAA,MAAAA,CAAC,CAAC0vB,MAAD,EAAS;AACN/0B,QAAAA,EAAE,EAAEA,EADE;AAENi1B,QAAAA,WAAW,EAAE;AAFP,OAAT,CAAD;AAIAF,MAAAA,MAAM,CAACjkB,WAAP,CAAmB/V,CAAC,CAAC4O,IAArB;AACAoI,MAAAA,KAAK,CAACvB,IAAN,CAAWM,WAAX,CAAuBikB,MAAvB;AACA,aAAO,IAAIlyB,OAAJ,CAAYkyB,MAAZ,CAAP;AACH,KAjBD;;AAmBA96B,IAAAA,GAAG,CAACoC,EAAJ,CAAO,0BAAP,EAAmC,YAAY;AAC3CpC,MAAAA,GAAG,CAACR,IAAJ;AACA,UAAI4I,CAAC,GAAGgD,CAAC,CAAC,KAAKsE,IAAN,EAAY,QAAZ,CAAT;;AACA,UAAItH,CAAJ,EAAO;AACH,YAAI+J,KAAK,GAAGhJ,GAAG,CAACf,CAAD,CAAH,CAAO+J,KAAP,CAAa0oB,KAAb,CAAZ;AACA,eAAO1oB,KAAK,IAAI9J,IAAI,CAACgO,MAAL,CAAYlE,KAAK,CAAC,CAAD,CAAjB,CAAhB;AACH;AACJ,KAPD;AAQAnS,IAAAA,GAAG,CAACoC,EAAJ,CAAO,uBAAP,EAAgC,UAAU6O,KAAV,EAAiB;AAC7C,UAAIA,KAAK,YAAYrI,OAAjB,IAA4BqI,KAAK,CAACnG,IAAN,IAAc,QAA9C,EAAwD;AACpD9K,QAAAA,GAAG,CAACR,IAAJ;AACA,YAAIuG,EAAE,GAAGkL,KAAK,CAACvB,IAAN,CAAW3J,EAApB;;AACA,YAAI,CAACA,EAAL,EAAS;AACLqF,UAAAA,CAAC,CAAC6F,KAAK,CAACvB,IAAP,EAAa;AAAC3J,YAAAA,EAAE,EAAEkL,KAAK,CAAClL;AAAX,WAAb,CAAD;AACAA,UAAAA,EAAE,GAAGkL,KAAK,CAAClL,EAAX;AACH;;AACDqF,QAAAA,CAAC,CAAC,KAAKsE,IAAN,EAAY;AACTorB,UAAAA,MAAM,EAAEzyB,IAAI,CAAC8C,GAAL,CAASpF,EAAT;AADC,SAAZ,CAAD;AAGH;;AACD,UAAI,CAACkL,KAAD,IAAUA,KAAK,IAAI,MAAvB,EAA+B;AAC3BjR,QAAAA,GAAG,CAACR,IAAJ;AACA,aAAKkQ,IAAL,CAAU3D,eAAV,CAA0B,QAA1B;AACH;AACJ,KAhBD;AAiBA;;;;;;;;;;;;;;;;AAeA1D,IAAAA,IAAI,CAACyyB,MAAL,CAAYG,IAAZ,GAAmB,UAAUzzB,CAAV,EAAaG,CAAb,EAAgB;AAC/B,UAAIH,CAAC,IAAI,IAAT,EAAe;AACXA,QAAAA,CAAC,GAAG,CAAJ;AACH;;AACD,UAAI0zB,GAAG,GAAGvzB,CAAC,IAAI,IAAL,GAAYH,CAAZ,GAAgB,CAACA,CAAD,EAAIG,CAAJ,CAA1B;AACA,aAAOU,IAAI,CAACmE,MAAL,CAAY,yCAAZ,EAAuD;AAC1D0uB,QAAAA,GAAG,EAAEA;AADqD,OAAvD,CAAP;AAGH,KARD;;AASA7yB,IAAAA,IAAI,CAACyyB,MAAL,CAAYG,IAAZ,CAAiB33B,QAAjB,GAA4B,YAAY;AACpC,aAAO,MAAP;AACH,KAFD;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA+E,IAAAA,IAAI,CAACyyB,MAAL,CAAYK,MAAZ,GAAqB,UAAU5rB,EAAV,EAAcC,EAAd,EAAkByrB,IAAlB,EAAwBxoB,KAAxB,EAA+BR,OAA/B,EAAwC;AACzD,UAAI,OAAOgpB,IAAP,IAAe,QAAnB,EAA6B;AACzBxoB,QAAAA,KAAK,GAAGwoB,IAAR;AACAhpB,QAAAA,OAAO,GAAGQ,KAAV;AACAwoB,QAAAA,IAAI,GAAG,CAAP;AACH;;AACD,UAAI,OAAOxoB,KAAP,IAAgB,QAApB,EAA8B;AAC1BR,QAAAA,OAAO,GAAGQ,KAAV;AACAA,QAAAA,KAAK,GAAG,MAAR;AACH;;AACDA,MAAAA,KAAK,GAAGA,KAAK,IAAI,MAAjB;;AACA,UAAIwoB,IAAI,IAAI,IAAZ,EAAkB;AACdA,QAAAA,IAAI,GAAG,CAAP;AACH;;AACD,UAAIhpB,OAAO,IAAI,IAAf,EAAqB;AACjBA,QAAAA,OAAO,GAAG,CAAV;AACH;;AACD,UAAI1C,EAAE,IAAI,IAAV,EAAgB;AACZA,QAAAA,EAAE,GAAG,CAAL;AACAC,QAAAA,EAAE,GAAG,CAAL;AACH;;AACD,UAAIA,EAAE,IAAI,IAAV,EAAgB;AACZA,QAAAA,EAAE,GAAGD,EAAL;AACH;;AACDkD,MAAAA,KAAK,GAAGpK,IAAI,CAACoK,KAAL,CAAWA,KAAX,CAAR;AACA,aAAOpK,IAAI,CAACmE,MAAL,CAAY,iVAAZ,EAA+V;AAClWiG,QAAAA,KAAK,EAAEA,KAD2V;AAElWlD,QAAAA,EAAE,EAAEA,EAF8V;AAGlWC,QAAAA,EAAE,EAAEA,EAH8V;AAIlWyrB,QAAAA,IAAI,EAAEA,IAJ4V;AAKlWhpB,QAAAA,OAAO,EAAEA;AALyV,OAA/V,CAAP;AAOH,KAhCD;;AAiCA5J,IAAAA,IAAI,CAACyyB,MAAL,CAAYK,MAAZ,CAAmB73B,QAAnB,GAA8B,YAAY;AACtC,aAAO,MAAP;AACH,KAFD;AAGA;;;;;;;;;;;AASA+E,IAAAA,IAAI,CAACyyB,MAAL,CAAYM,SAAZ,GAAwB,UAAUC,MAAV,EAAkB;AACtC,UAAIA,MAAM,IAAI,IAAd,EAAoB;AAChBA,QAAAA,MAAM,GAAG,CAAT;AACH;;AACD,aAAOhzB,IAAI,CAACmE,MAAL,CAAY,mGAAZ,EAAiH;AACpHnN,QAAAA,CAAC,EAAE,SAAS,UAAU,IAAIg8B,MAAd,CADwG;AAEpH/7B,QAAAA,CAAC,EAAE,SAAS,UAAU,IAAI+7B,MAAd,CAFwG;AAGpHhnB,QAAAA,CAAC,EAAE,SAAS,UAAU,IAAIgnB,MAAd,CAHwG;AAIpHvZ,QAAAA,CAAC,EAAE,SAAS,UAAU,IAAIuZ,MAAd,CAJwG;AAKpHj7B,QAAAA,CAAC,EAAE,SAAS,UAAU,IAAIi7B,MAAd,CALwG;AAMpHv6B,QAAAA,CAAC,EAAE,SAAS,UAAU,IAAIu6B,MAAd,CANwG;AAOpH7pB,QAAAA,CAAC,EAAE,SAAS,UAAU,IAAI6pB,MAAd,CAPwG;AAQpH7yB,QAAAA,CAAC,EAAE,SAAS,UAAU,IAAI6yB,MAAd;AARwG,OAAjH,CAAP;AAUH,KAdD;;AAeAhzB,IAAAA,IAAI,CAACyyB,MAAL,CAAYM,SAAZ,CAAsB93B,QAAtB,GAAiC,YAAY;AACzC,aAAO,MAAP;AACH,KAFD;AAGA;;;;;;;;;;;AASA+E,IAAAA,IAAI,CAACyyB,MAAL,CAAYQ,KAAZ,GAAoB,UAAUD,MAAV,EAAkB;AAClC,UAAIA,MAAM,IAAI,IAAd,EAAoB;AAChBA,QAAAA,MAAM,GAAG,CAAT;AACH;;AACD,aAAOhzB,IAAI,CAACmE,MAAL,CAAY,mGAAZ,EAAiH;AACpHnN,QAAAA,CAAC,EAAE,QAAQ,SAAS,IAAIg8B,MAAb,CADyG;AAEpH/7B,QAAAA,CAAC,EAAE,QAAQ,SAAS,IAAI+7B,MAAb,CAFyG;AAGpHhnB,QAAAA,CAAC,EAAE,QAAQ,SAAS,IAAIgnB,MAAb,CAHyG;AAIpHvZ,QAAAA,CAAC,EAAE,QAAQ,SAAS,IAAIuZ,MAAb,CAJyG;AAKpHj7B,QAAAA,CAAC,EAAE,QAAQ,SAAS,IAAIi7B,MAAb,CALyG;AAMpHv6B,QAAAA,CAAC,EAAE,QAAQ,SAAS,IAAIu6B,MAAb,CANyG;AAOpH7pB,QAAAA,CAAC,EAAE,QAAQ,SAAS,IAAI6pB,MAAb,CAPyG;AAQpH7yB,QAAAA,CAAC,EAAE,QAAQ,SAAS,IAAI6yB,MAAb,CARyG;AASpHz7B,QAAAA,CAAC,EAAE,QAAQ,SAAS,IAAIy7B,MAAb;AATyG,OAAjH,CAAP;AAWH,KAfD;;AAgBAhzB,IAAAA,IAAI,CAACyyB,MAAL,CAAYQ,KAAZ,CAAkBh4B,QAAlB,GAA6B,YAAY;AACrC,aAAO,MAAP;AACH,KAFD;AAGA;;;;;;;;;;;AASA+E,IAAAA,IAAI,CAACyyB,MAAL,CAAYS,QAAZ,GAAuB,UAAUF,MAAV,EAAkB;AACrC,UAAIA,MAAM,IAAI,IAAd,EAAoB;AAChBA,QAAAA,MAAM,GAAG,CAAT;AACH;;AACD,aAAOhzB,IAAI,CAACmE,MAAL,CAAY,oDAAZ,EAAkE;AACrE6uB,QAAAA,MAAM,EAAE,IAAIA;AADyD,OAAlE,CAAP;AAGH,KAPD;;AAQAhzB,IAAAA,IAAI,CAACyyB,MAAL,CAAYS,QAAZ,CAAqBj4B,QAArB,GAAgC,YAAY;AACxC,aAAO,MAAP;AACH,KAFD;AAGA;;;;;;;;;;;AASA+E,IAAAA,IAAI,CAACyyB,MAAL,CAAYU,SAAZ,GAAwB,UAAUztB,KAAV,EAAiB;AACrCA,MAAAA,KAAK,GAAGA,KAAK,IAAI,CAAjB;AACA,aAAO1F,IAAI,CAACmE,MAAL,CAAY,oDAAZ,EAAkE;AACrEuB,QAAAA,KAAK,EAAEA;AAD8D,OAAlE,CAAP;AAGH,KALD;;AAMA1F,IAAAA,IAAI,CAACyyB,MAAL,CAAYU,SAAZ,CAAsBl4B,QAAtB,GAAiC,YAAY;AACzC,aAAO,MAAP;AACH,KAFD;AAGA;;;;;;;;;;;AASA+E,IAAAA,IAAI,CAACyyB,MAAL,CAAYxlB,MAAZ,GAAqB,UAAU+lB,MAAV,EAAkB;AACnC,UAAIA,MAAM,IAAI,IAAd,EAAoB;AAChBA,QAAAA,MAAM,GAAG,CAAT;AACH,OAHkC,CAI3C;;;AACQ,aAAOhzB,IAAI,CAACmE,MAAL,CAAY,qNAAZ,EAAmO;AACtO6uB,QAAAA,MAAM,EAAEA,MAD8N;AAEtOI,QAAAA,OAAO,EAAE,IAAIJ;AAFyN,OAAnO,CAAP;AAIH,KATD;;AAUAhzB,IAAAA,IAAI,CAACyyB,MAAL,CAAYxlB,MAAZ,CAAmBhS,QAAnB,GAA8B,YAAY;AACtC,aAAO,MAAP;AACH,KAFD;AAGA;;;;;;;;;;;AASA+E,IAAAA,IAAI,CAACyyB,MAAL,CAAYY,UAAZ,GAAyB,UAAUL,MAAV,EAAkB;AACvC,UAAIA,MAAM,IAAI,IAAd,EAAoB;AAChBA,QAAAA,MAAM,GAAG,CAAT;AACH;;AACD,aAAOhzB,IAAI,CAACmE,MAAL,CAAY,wKAAZ,EAAsL;AACzL6uB,QAAAA,MAAM,EAAEA;AADiL,OAAtL,CAAP;AAGH,KAPD;;AAQAhzB,IAAAA,IAAI,CAACyyB,MAAL,CAAYY,UAAZ,CAAuBp4B,QAAvB,GAAkC,YAAY;AAC1C,aAAO,MAAP;AACH,KAFD;AAGA;;;;;;;;;;;AASA+E,IAAAA,IAAI,CAACyyB,MAAL,CAAYa,QAAZ,GAAuB,UAAUN,MAAV,EAAkB;AACrC,UAAIA,MAAM,IAAI,IAAd,EAAoB;AAChBA,QAAAA,MAAM,GAAG,CAAT;AACH;;AACD,aAAOhzB,IAAI,CAACmE,MAAL,CAAY,0OAAZ,EAAwP;AAC3P6uB,QAAAA,MAAM,EAAEA,MADmP;AAE3PI,QAAAA,OAAO,EAAE,KAAKJ,MAAM,GAAG;AAFoO,OAAxP,CAAP;AAIH,KARD;;AASAhzB,IAAAA,IAAI,CAACyyB,MAAL,CAAYa,QAAZ,CAAqBr4B,QAArB,GAAgC,YAAY;AACxC,aAAO,MAAP;AACH,KAFD;AAGH,GAxTD,EA5pOyC,CAs9OzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA+E,EAAAA,IAAI,CAACiU,MAAL,CAAY,UAAUjU,IAAV,EAAgBO,OAAhB,EAAyBG,KAAzB,EAAgClK,IAAhC,EAAsCma,QAAtC,EAAgD;AACxD,QAAIiC,GAAG,GAAG5S,IAAI,CAACW,CAAL,CAAOiS,GAAjB;AAAA,QACItS,EAAE,GAAGN,IAAI,CAACM,EADd;AAAA,QAEIizB,WAAW,GAAG,qBAFlB;AAAA,QAGIt4B,QAAQ,GAAG,YAAY;AACnB,aAAO,MAAM,KAAKiM,EAAX,GAAgB,GAAhB,GAAsB,KAAKC,EAAlC;AACH,KALL;AAMA;;;;;;;;;;;;;;;;AAcA5G,IAAAA,OAAO,CAACpI,SAAR,CAAkBq7B,QAAlB,GAA6B,UAAUhxB,EAAV,EAAcixB,GAAd,EAAmB;AAC5C,UAAIA,GAAG,IAAI,IAAP,IAAenzB,EAAE,CAACkC,EAAD,EAAK,QAAL,CAArB,EAAqC;AACjCixB,QAAAA,GAAG,GAAGjxB,EAAN;AACAA,QAAAA,EAAE,GAAG,IAAL;AACH;;AACDA,MAAAA,EAAE,GAAGA,EAAE,IAAI,KAAKiN,KAAhB;AACA,UAAIib,EAAE,GAAGloB,EAAE,CAACkM,OAAH,GAAalM,EAAE,CAACkM,OAAH,EAAb,GAA4BkE,GAAG,CAACpQ,EAAD,CAAxC;AAAA,UACI1F,EAAE,GAAG,KAAK4R,OAAL,EADT;AAAA,UAEI7V,GAAG,GAAG,EAFV;AAGA46B,MAAAA,GAAG,GAAGA,GAAG,IAAIA,GAAG,CAAC3pB,KAAJ,CAAUypB,WAAV,CAAb;AACAE,MAAAA,GAAG,GAAGA,GAAG,GAAGA,GAAG,CAAC,CAAD,CAAH,CAAOxvB,WAAP,EAAH,GAA0B,GAAnC;;AACA,cAAQwvB,GAAR;AACI,aAAK,GAAL;AACI56B,UAAAA,GAAG,CAACqO,EAAJ,GAAS,CAAT;AACArO,UAAAA,GAAG,CAACsO,EAAJ,GAASujB,EAAE,CAACprB,CAAH,GAAOxC,EAAE,CAACwC,CAAnB;AACJ;;AACA,aAAK,GAAL;AACIzG,UAAAA,GAAG,CAACqO,EAAJ,GAAS,CAAT;AACArO,UAAAA,GAAG,CAACsO,EAAJ,GAASujB,EAAE,CAAC5kB,EAAH,GAAQhJ,EAAE,CAACgJ,EAApB;AACJ;;AACA,aAAK,GAAL;AACIjN,UAAAA,GAAG,CAACqO,EAAJ,GAAS,CAAT;AACArO,UAAAA,GAAG,CAACsO,EAAJ,GAASujB,EAAE,CAAC7S,EAAH,GAAQ/a,EAAE,CAAC+a,EAApB;AACJ;;AACA,aAAK,GAAL;AACIhf,UAAAA,GAAG,CAACqO,EAAJ,GAASwjB,EAAE,CAACvrB,CAAH,GAAOrC,EAAE,CAACqC,CAAnB;AACAtG,UAAAA,GAAG,CAACsO,EAAJ,GAAS,CAAT;AACJ;;AACA,aAAK,GAAL;AACItO,UAAAA,GAAG,CAACqO,EAAJ,GAASwjB,EAAE,CAAC7kB,EAAH,GAAQ/I,EAAE,CAAC+I,EAApB;AACAhN,UAAAA,GAAG,CAACsO,EAAJ,GAAS,CAAT;AACJ;;AACA;AACItO,UAAAA,GAAG,CAACqO,EAAJ,GAASwjB,EAAE,CAAC9S,EAAH,GAAQ9a,EAAE,CAAC8a,EAApB;AACA/e,UAAAA,GAAG,CAACsO,EAAJ,GAAS,CAAT;AACJ;AAxBJ;;AA0BAtO,MAAAA,GAAG,CAACoC,QAAJ,GAAeA,QAAf;AACA,aAAOpC,GAAP;AACH,KAvCD;AAwCA;;;;;;;;;;;;;;;;AAcA0H,IAAAA,OAAO,CAACpI,SAAR,CAAkBu7B,KAAlB,GAA0B,UAAUlxB,EAAV,EAAcixB,GAAd,EAAmB;AACzC,aAAO,KAAK5jB,SAAL,CAAe,QAAQ,KAAK2jB,QAAL,CAAchxB,EAAd,EAAkBixB,GAAlB,CAAvB,CAAP;AACH,KAFD;AAGH,GA9ED;AAgFA,SAAOzzB,IAAP;AACC,CApkPA,CAAD","sourcesContent":["// Snap.svg 0.4.0\n// \n// Copyright (c) 2013 – 2015 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// \n// build: 2015-04-07\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// ┌────────────────────────────────────────────────────────────┐ \\\\\n// │ Eve 0.4.2 - JavaScript Events Library                      │ \\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\n\n(function (glob) {\n    var version = \"0.4.2\",\n        has = \"hasOwnProperty\",\n        separator = /[\\.\\/]/,\n        comaseparator = /\\s*,\\s*/,\n        wildcard = \"*\",\n        fun = function () {},\n        numsort = function (a, b) {\n            return a - b;\n        },\n        current_event,\n        stop,\n        events = {n: {}},\n        firstDefined = function () {\n            for (var i = 0, ii = this.length; i < ii; i++) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        lastDefined = function () {\n            var i = this.length;\n            while (--i) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n    /*\\\n     * eve\n     [ method ]\n\n     * Fires event with given `name`, given scope and other parameters.\n\n     > Arguments\n\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n     - scope (object) context for the event handlers\n     - varargs (...) the rest of arguments will be sent to event handlers\n\n     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n    \\*/\n        eve = function (name, scope) {\n            name = String(name);\n            var e = events,\n                oldstop = stop,\n                args = Array.prototype.slice.call(arguments, 2),\n                listeners = eve.listeners(name),\n                z = 0,\n                f = false,\n                l,\n                indexed = [],\n                queue = {},\n                out = [],\n                ce = current_event,\n                errors = [];\n            out.firstDefined = firstDefined;\n            out.lastDefined = lastDefined;\n            current_event = name;\n            stop = 0;\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n                indexed.push(listeners[i].zIndex);\n                if (listeners[i].zIndex < 0) {\n                    queue[listeners[i].zIndex] = listeners[i];\n                }\n            }\n            indexed.sort(numsort);\n            while (indexed[z] < 0) {\n                l = queue[indexed[z++]];\n                out.push(l.apply(scope, args));\n                if (stop) {\n                    stop = oldstop;\n                    return out;\n                }\n            }\n            for (i = 0; i < ii; i++) {\n                l = listeners[i];\n                if (\"zIndex\" in l) {\n                    if (l.zIndex == indexed[z]) {\n                        out.push(l.apply(scope, args));\n                        if (stop) {\n                            break;\n                        }\n                        do {\n                            z++;\n                            l = queue[indexed[z]];\n                            l && out.push(l.apply(scope, args));\n                            if (stop) {\n                                break;\n                            }\n                        } while (l)\n                    } else {\n                        queue[l.zIndex] = l;\n                    }\n                } else {\n                    out.push(l.apply(scope, args));\n                    if (stop) {\n                        break;\n                    }\n                }\n            }\n            stop = oldstop;\n            current_event = ce;\n            return out;\n        };\n        // Undocumented. Debug only.\n        eve._events = events;\n    /*\\\n     * eve.listeners\n     [ method ]\n\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n\n     > Arguments\n\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\n\n     = (array) array of event handlers\n    \\*/\n    eve.listeners = function (name) {\n        var names = name.split(separator),\n            e = events,\n            item,\n            items,\n            k,\n            i,\n            ii,\n            j,\n            jj,\n            nes,\n            es = [e],\n            out = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            nes = [];\n            for (j = 0, jj = es.length; j < jj; j++) {\n                e = es[j].n;\n                items = [e[names[i]], e[wildcard]];\n                k = 2;\n                while (k--) {\n                    item = items[k];\n                    if (item) {\n                        nes.push(item);\n                        out = out.concat(item.f || []);\n                    }\n                }\n            }\n            es = nes;\n        }\n        return out;\n    };\n    \n    /*\\\n     * eve.on\n     [ method ]\n     **\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n     | eve.on(\"*.under.*\", f);\n     | eve(\"mouse.under.floor\"); // triggers f\n     * Use @eve to trigger the listener.\n     **\n     > Arguments\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment. \n     > Example:\n     | eve.on(\"mouse\", eatIt)(2);\n     | eve.on(\"mouse\", scream);\n     | eve.on(\"mouse\", catchIt)(1);\n     * This will ensure that `catchIt` function will be called before `eatIt`.\n     *\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n    \\*/\n    eve.on = function (name, f) {\n        name = String(name);\n        if (typeof f != \"function\") {\n            return function () {};\n        }\n        var names = name.split(comaseparator);\n        for (var i = 0, ii = names.length; i < ii; i++) {\n            (function (name) {\n                var names = name.split(separator),\n                    e = events,\n                    exist;\n                for (var i = 0, ii = names.length; i < ii; i++) {\n                    e = e.n;\n                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\n                }\n                e.f = e.f || [];\n                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n                    exist = true;\n                    break;\n                }\n                !exist && e.f.push(f);\n            }(names[i]));\n        }\n        return function (zIndex) {\n            if (+zIndex == +zIndex) {\n                f.zIndex = +zIndex;\n            }\n        };\n    };\n    /*\\\n     * eve.f\n     [ method ]\n     **\n     * Returns function that will fire given event with optional arguments.\n     * Arguments that will be passed to the result function will be also\n     * concated to the list of final arguments.\n     | el.onclick = eve.f(\"click\", 1, 2);\n     | eve.on(\"click\", function (a, b, c) {\n     |     console.log(a, b, c); // 1, 2, [event object]\n     | });\n     > Arguments\n     - event (string) event name\n     - varargs (…) and any other arguments\n     = (function) possible event handler function\n    \\*/\n    eve.f = function (event) {\n        var attrs = [].slice.call(arguments, 1);\n        return function () {\n            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n        };\n    };\n    /*\\\n     * eve.stop\n     [ method ]\n     **\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n    \\*/\n    eve.stop = function () {\n        stop = 1;\n    };\n    /*\\\n     * eve.nt\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     > Arguments\n     **\n     - subname (string) #optional subname of the event\n     **\n     = (string) name of the event, if `subname` is not specified\n     * or\n     = (boolean) `true`, if current event’s name contains `subname`\n    \\*/\n    eve.nt = function (subname) {\n        if (subname) {\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(current_event);\n        }\n        return current_event;\n    };\n    /*\\\n     * eve.nts\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     **\n     = (array) names of the event\n    \\*/\n    eve.nts = function () {\n        return current_event.split(separator);\n    };\n    /*\\\n     * eve.off\n     [ method ]\n     **\n     * Removes given function from the list of event listeners assigned to given name.\n     * If no arguments specified all the events will be cleared.\n     **\n     > Arguments\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n    \\*/\n    /*\\\n     * eve.unbind\n     [ method ]\n     **\n     * See @eve.off\n    \\*/\n    eve.off = eve.unbind = function (name, f) {\n        if (!name) {\n            eve._events = events = {n: {}};\n            return;\n        }\n        var names = name.split(comaseparator);\n        if (names.length > 1) {\n            for (var i = 0, ii = names.length; i < ii; i++) {\n                eve.off(names[i], f);\n            }\n            return;\n        }\n        names = name.split(separator);\n        var e,\n            key,\n            splice,\n            i, ii, j, jj,\n            cur = [events];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            for (j = 0; j < cur.length; j += splice.length - 2) {\n                splice = [j, 1];\n                e = cur[j].n;\n                if (names[i] != wildcard) {\n                    if (e[names[i]]) {\n                        splice.push(e[names[i]]);\n                    }\n                } else {\n                    for (key in e) if (e[has](key)) {\n                        splice.push(e[key]);\n                    }\n                }\n                cur.splice.apply(cur, splice);\n            }\n        }\n        for (i = 0, ii = cur.length; i < ii; i++) {\n            e = cur[i];\n            while (e.n) {\n                if (f) {\n                    if (e.f) {\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n                            e.f.splice(j, 1);\n                            break;\n                        }\n                        !e.f.length && delete e.f;\n                    }\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        var funcs = e.n[key].f;\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n                            funcs.splice(j, 1);\n                            break;\n                        }\n                        !funcs.length && delete e.n[key].f;\n                    }\n                } else {\n                    delete e.f;\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        delete e.n[key].f;\n                    }\n                }\n                e = e.n;\n            }\n        }\n    };\n    /*\\\n     * eve.once\n     [ method ]\n     **\n     * Binds given event handler with a given name to only run once then unbind itself.\n     | eve.once(\"login\", f);\n     | eve(\"login\"); // triggers f\n     | eve(\"login\"); // no listeners\n     * Use @eve to trigger the listener.\n     **\n     > Arguments\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     = (function) same return function as @eve.on\n    \\*/\n    eve.once = function (name, f) {\n        var f2 = function () {\n            eve.unbind(name, f2);\n            return f.apply(this, arguments);\n        };\n        return eve.on(name, f2);\n    };\n    /*\\\n     * eve.version\n     [ property (string) ]\n     **\n     * Current version of the library.\n    \\*/\n    eve.version = version;\n    eve.toString = function () {\n        return \"You are running Eve \" + version;\n    };\n    (typeof module != \"undefined\" && module.exports) ? (module.exports = eve) : (typeof define === \"function\" && define.amd ? (define(\"eve\", [], function() { return eve; })) : (glob.eve = eve));\n})(this);\n\n(function (glob, factory) {\n    // AMD support\n    if (typeof define == \"function\" && define.amd) {\n        // Define as an anonymous module\n        define([\"eve\"], function (eve) {\n            return factory(glob, eve);\n        });\n    } else if (typeof exports != 'undefined') {\n        // Next for Node.js or CommonJS\n        var eve = require('eve');\n        module.exports = factory(glob, eve);\n    } else {\n        // Browser globals (glob is window)\n        // Snap adds itself to window\n        factory(glob, glob.eve);\n    }\n}(window || this, function (window, eve) {\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar mina = (function (eve) {\n    var animations = {},\n    requestAnimFrame = window.requestAnimationFrame       ||\n                       window.webkitRequestAnimationFrame ||\n                       window.mozRequestAnimationFrame    ||\n                       window.oRequestAnimationFrame      ||\n                       window.msRequestAnimationFrame     ||\n                       function (callback) {\n                           setTimeout(callback, 16);\n                       },\n    isArray = Array.isArray || function (a) {\n        return a instanceof Array ||\n            Object.prototype.toString.call(a) == \"[object Array]\";\n    },\n    idgen = 0,\n    idprefix = \"M\" + (+new Date).toString(36),\n    ID = function () {\n        return idprefix + (idgen++).toString(36);\n    },\n    diff = function (a, b, A, B) {\n        if (isArray(a)) {\n            res = [];\n            for (var i = 0, ii = a.length; i < ii; i++) {\n                res[i] = diff(a[i], b, A[i], B);\n            }\n            return res;\n        }\n        var dif = (A - a) / (B - b);\n        return function (bb) {\n            return a + dif * (bb - b);\n        };\n    },\n    timer = Date.now || function () {\n        return +new Date;\n    },\n    sta = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.s;\n        }\n        var ds = a.s - val;\n        a.b += a.dur * ds;\n        a.B += a.dur * ds;\n        a.s = val;\n    },\n    speed = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.spd;\n        }\n        a.spd = val;\n    },\n    duration = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.dur;\n        }\n        a.s = a.s * val / a.dur;\n        a.dur = val;\n    },\n    stopit = function () {\n        var a = this;\n        delete animations[a.id];\n        a.update();\n        eve(\"mina.stop.\" + a.id, a);\n    },\n    pause = function () {\n        var a = this;\n        if (a.pdif) {\n            return;\n        }\n        delete animations[a.id];\n        a.update();\n        a.pdif = a.get() - a.b;\n    },\n    resume = function () {\n        var a = this;\n        if (!a.pdif) {\n            return;\n        }\n        a.b = a.get() - a.pdif;\n        delete a.pdif;\n        animations[a.id] = a;\n    },\n    update = function () {\n        var a = this,\n            res;\n        if (isArray(a.start)) {\n            res = [];\n            for (var j = 0, jj = a.start.length; j < jj; j++) {\n                res[j] = +a.start[j] +\n                    (a.end[j] - a.start[j]) * a.easing(a.s);\n            }\n        } else {\n            res = +a.start + (a.end - a.start) * a.easing(a.s);\n        }\n        a.set(res);\n    },\n    frame = function () {\n        var len = 0;\n        for (var i in animations) if (animations.hasOwnProperty(i)) {\n            var a = animations[i],\n                b = a.get(),\n                res;\n            len++;\n            a.s = (b - a.b) / (a.dur / a.spd);\n            if (a.s >= 1) {\n                delete animations[i];\n                a.s = 1;\n                len--;\n                (function (a) {\n                    setTimeout(function () {\n                        eve(\"mina.finish.\" + a.id, a);\n                    });\n                }(a));\n            }\n            a.update();\n        }\n        len && requestAnimFrame(frame);\n    },\n    /*\\\n     * mina\n     [ method ]\n     **\n     * Generic animation of numbers\n     **\n     - a (number) start _slave_ number\n     - A (number) end _slave_ number\n     - b (number) start _master_ number (start time in general case)\n     - B (number) end _master_ number (end time in gereal case)\n     - get (function) getter of _master_ number (see @mina.time)\n     - set (function) setter of _slave_ number\n     - easing (function) #optional easing function, default is @mina.linear\n     = (object) animation descriptor\n     o {\n     o         id (string) animation id,\n     o         start (number) start _slave_ number,\n     o         end (number) end _slave_ number,\n     o         b (number) start _master_ number,\n     o         s (number) animation status (0..1),\n     o         dur (number) animation duration,\n     o         spd (number) animation speed,\n     o         get (function) getter of _master_ number (see @mina.time),\n     o         set (function) setter of _slave_ number,\n     o         easing (function) easing function, default is @mina.linear,\n     o         status (function) status getter/setter,\n     o         speed (function) speed getter/setter,\n     o         duration (function) duration getter/setter,\n     o         stop (function) animation stopper\n     o         pause (function) pauses the animation\n     o         resume (function) resumes the animation\n     o         update (function) calles setter with the right value of the animation\n     o }\n    \\*/\n    mina = function (a, A, b, B, get, set, easing) {\n        var anim = {\n            id: ID(),\n            start: a,\n            end: A,\n            b: b,\n            s: 0,\n            dur: B - b,\n            spd: 1,\n            get: get,\n            set: set,\n            easing: easing || mina.linear,\n            status: sta,\n            speed: speed,\n            duration: duration,\n            stop: stopit,\n            pause: pause,\n            resume: resume,\n            update: update\n        };\n        animations[anim.id] = anim;\n        var len = 0, i;\n        for (i in animations) if (animations.hasOwnProperty(i)) {\n            len++;\n            if (len == 2) {\n                break;\n            }\n        }\n        len == 1 && requestAnimFrame(frame);\n        return anim;\n    };\n    /*\\\n     * mina.time\n     [ method ]\n     **\n     * Returns the current time. Equivalent to:\n     | function () {\n     |     return (new Date).getTime();\n     | }\n    \\*/\n    mina.time = timer;\n    /*\\\n     * mina.getById\n     [ method ]\n     **\n     * Returns an animation by its id\n     - id (string) animation's id\n     = (object) See @mina\n    \\*/\n    mina.getById = function (id) {\n        return animations[id] || null;\n    };\n\n    /*\\\n     * mina.linear\n     [ method ]\n     **\n     * Default linear easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.linear = function (n) {\n        return n;\n    };\n    /*\\\n     * mina.easeout\n     [ method ]\n     **\n     * Easeout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeout = function (n) {\n        return Math.pow(n, 1.7);\n    };\n    /*\\\n     * mina.easein\n     [ method ]\n     **\n     * Easein easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easein = function (n) {\n        return Math.pow(n, .48);\n    };\n    /*\\\n     * mina.easeinout\n     [ method ]\n     **\n     * Easeinout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeinout = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        if (n == 0) {\n            return 0;\n        }\n        var q = .48 - n / 1.04,\n            Q = Math.sqrt(.1734 + q * q),\n            x = Q - q,\n            X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n            y = -Q - q,\n            Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n            t = X + Y + .5;\n        return (1 - t) * 3 * t * t + t * t * t;\n    };\n    /*\\\n     * mina.backin\n     [ method ]\n     **\n     * Backin easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backin = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        var s = 1.70158;\n        return n * n * ((s + 1) * n - s);\n    };\n    /*\\\n     * mina.backout\n     [ method ]\n     **\n     * Backout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backout = function (n) {\n        if (n == 0) {\n            return 0;\n        }\n        n = n - 1;\n        var s = 1.70158;\n        return n * n * ((s + 1) * n + s) + 1;\n    };\n    /*\\\n     * mina.elastic\n     [ method ]\n     **\n     * Elastic easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.elastic = function (n) {\n        if (n == !!n) {\n            return n;\n        }\n        return Math.pow(2, -10 * n) * Math.sin((n - .075) *\n            (2 * Math.PI) / .3) + 1;\n    };\n    /*\\\n     * mina.bounce\n     [ method ]\n     **\n     * Bounce easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.bounce = function (n) {\n        var s = 7.5625,\n            p = 2.75,\n            l;\n        if (n < (1 / p)) {\n            l = s * n * n;\n        } else {\n            if (n < (2 / p)) {\n                n -= (1.5 / p);\n                l = s * n * n + .75;\n            } else {\n                if (n < (2.5 / p)) {\n                    n -= (2.25 / p);\n                    l = s * n * n + .9375;\n                } else {\n                    n -= (2.625 / p);\n                    l = s * n * n + .984375;\n                }\n            }\n        }\n        return l;\n    };\n    window.mina = mina;\n    return mina;\n})(typeof eve == \"undefined\" ? function () {} : eve);\n// Copyright (c) 2013 - 2015 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar Snap = (function(root) {\nSnap.version = \"0.4.0\";\n/*\\\n * Snap\n [ method ]\n **\n * Creates a drawing surface or wraps existing SVG element.\n **\n - width (number|string) width of surface\n - height (number|string) height of surface\n * or\n - DOM (SVGElement) element to be wrapped into Snap structure\n * or\n - array (array) array of elements (will return set of elements)\n * or\n - query (string) CSS query selector\n = (object) @Element\n\\*/\nfunction Snap(w, h) {\n    if (w) {\n        if (w.nodeType) {\n            return wrap(w);\n        }\n        if (is(w, \"array\") && Snap.set) {\n            return Snap.set.apply(Snap, w);\n        }\n        if (w instanceof Element) {\n            return w;\n        }\n        if (h == null) {\n            w = glob.doc.querySelector(String(w));\n            return wrap(w);\n        }\n    }\n    w = w == null ? \"100%\" : w;\n    h = h == null ? \"100%\" : h;\n    return new Paper(w, h);\n}\nSnap.toString = function () {\n    return \"Snap v\" + this.version;\n};\nSnap._ = {};\nvar glob = {\n    win: root.window,\n    doc: root.window.document\n};\nSnap._.glob = glob;\nvar has = \"hasOwnProperty\",\n    Str = String,\n    toFloat = parseFloat,\n    toInt = parseInt,\n    math = Math,\n    mmax = math.max,\n    mmin = math.min,\n    abs = math.abs,\n    pow = math.pow,\n    PI = math.PI,\n    round = math.round,\n    E = \"\",\n    S = \" \",\n    objectToString = Object.prototype.toString,\n    ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n    bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n    reURLValue = /^url\\(#?([^)]+)\\)$/,\n    separator = Snap._.separator = /[,\\s]+/,\n    whitespace = /[\\s]/g,\n    commaSpaces = /[\\s]*,[\\s]*/,\n    hsrg = {hs: 1, rg: 1},\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\\\d+)?)[\\s]*,?[\\s]*/ig,\n    idgen = 0,\n    idprefix = \"S\" + (+new Date).toString(36),\n    ID = function (el) {\n        return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n    },\n    xlink = \"http://www.w3.org/1999/xlink\",\n    xmlns = \"http://www.w3.org/2000/svg\",\n    hub = {},\n    URL = Snap.url = function (url) {\n        return \"url('#\" + url + \"')\";\n    };\n\nfunction $(el, attr) {\n    if (attr) {\n        if (el == \"#text\") {\n            el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (el == \"#comment\") {\n            el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (typeof el == \"string\") {\n            el = $(el);\n        }\n        if (typeof attr == \"string\") {\n            if (el.nodeType == 1) {\n                if (attr.substring(0, 6) == \"xlink:\") {\n                    return el.getAttributeNS(xlink, attr.substring(6));\n                }\n                if (attr.substring(0, 4) == \"xml:\") {\n                    return el.getAttributeNS(xmlns, attr.substring(4));\n                }\n                return el.getAttribute(attr);\n            } else if (attr == \"text\") {\n                return el.nodeValue;\n            } else {\n                return null;\n            }\n        }\n        if (el.nodeType == 1) {\n            for (var key in attr) if (attr[has](key)) {\n                var val = Str(attr[key]);\n                if (val) {\n                    if (key.substring(0, 6) == \"xlink:\") {\n                        el.setAttributeNS(xlink, key.substring(6), val);\n                    } else if (key.substring(0, 4) == \"xml:\") {\n                        el.setAttributeNS(xmlns, key.substring(4), val);\n                    } else {\n                        el.setAttribute(key, val);\n                    }\n                } else {\n                    el.removeAttribute(key);\n                }\n            }\n        } else if (\"text\" in attr) {\n            el.nodeValue = attr.text;\n        }\n    } else {\n        el = glob.doc.createElementNS(xmlns, el);\n    }\n    return el;\n}\nSnap._.$ = $;\nSnap._.id = ID;\nfunction getAttrs(el) {\n    var attrs = el.attributes,\n        name,\n        out = {};\n    for (var i = 0; i < attrs.length; i++) {\n        if (attrs[i].namespaceURI == xlink) {\n            name = \"xlink:\";\n        } else {\n            name = \"\";\n        }\n        name += attrs[i].name;\n        out[name] = attrs[i].textContent;\n    }\n    return out;\n}\nfunction is(o, type) {\n    type = Str.prototype.toLowerCase.call(type);\n    if (type == \"finite\") {\n        return isFinite(o);\n    }\n    if (type == \"array\" &&\n        (o instanceof Array || Array.isArray && Array.isArray(o))) {\n        return true;\n    }\n    return  (type == \"null\" && o === null) ||\n            (type == typeof o && o !== null) ||\n            (type == \"object\" && o === Object(o)) ||\n            objectToString.call(o).slice(8, -1).toLowerCase() == type;\n}\n/*\\\n * Snap.format\n [ method ]\n **\n * Replaces construction of type `{<name>}` to the corresponding argument\n **\n - token (string) string to format\n - json (object) object which properties are used as a replacement\n = (string) formatted string\n > Usage\n | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n |     x: 10,\n |     y: 20,\n |     dim: {\n |         width: 40,\n |         height: 50,\n |         \"negative width\": -40\n |     }\n | }));\n\\*/\nSnap.format = (function () {\n    var tokenRegex = /\\{([^\\}]+)\\}/g,\n        objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n        replacer = function (all, key, obj) {\n            var res = obj;\n            key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n                name = name || quotedName;\n                if (res) {\n                    if (name in res) {\n                        res = res[name];\n                    }\n                    typeof res == \"function\" && isFunc && (res = res());\n                }\n            });\n            res = (res == null || res == obj ? all : res) + \"\";\n            return res;\n        };\n    return function (str, obj) {\n        return Str(str).replace(tokenRegex, function (all, key) {\n            return replacer(all, key, obj);\n        });\n    };\n})();\nfunction clone(obj) {\n    if (typeof obj == \"function\" || Object(obj) !== obj) {\n        return obj;\n    }\n    var res = new obj.constructor;\n    for (var key in obj) if (obj[has](key)) {\n        res[key] = clone(obj[key]);\n    }\n    return res;\n}\nSnap._.clone = clone;\nfunction repush(array, item) {\n    for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n        return array.push(array.splice(i, 1)[0]);\n    }\n}\nfunction cacher(f, scope, postprocessor) {\n    function newf() {\n        var arg = Array.prototype.slice.call(arguments, 0),\n            args = arg.join(\"\\u2400\"),\n            cache = newf.cache = newf.cache || {},\n            count = newf.count = newf.count || [];\n        if (cache[has](args)) {\n            repush(count, args);\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n        count.length >= 1e3 && delete cache[count.shift()];\n        count.push(args);\n        cache[args] = f.apply(scope, arg);\n        return postprocessor ? postprocessor(cache[args]) : cache[args];\n    }\n    return newf;\n}\nSnap._.cacher = cacher;\nfunction angle(x1, y1, x2, y2, x3, y3) {\n    if (x3 == null) {\n        var x = x1 - x2,\n            y = y1 - y2;\n        if (!x && !y) {\n            return 0;\n        }\n        return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n    } else {\n        return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n    }\n}\nfunction rad(deg) {\n    return deg % 360 * PI / 180;\n}\nfunction deg(rad) {\n    return rad * 180 / PI % 360;\n}\nfunction x_y() {\n    return this.x + S + this.y;\n}\nfunction x_y_w_h() {\n    return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n}\n\n/*\\\n * Snap.rad\n [ method ]\n **\n * Transform angle to radians\n - deg (number) angle in degrees\n = (number) angle in radians\n\\*/\nSnap.rad = rad;\n/*\\\n * Snap.deg\n [ method ]\n **\n * Transform angle to degrees\n - rad (number) angle in radians\n = (number) angle in degrees\n\\*/\nSnap.deg = deg;\n/*\\\n * Snap.sin\n [ method ]\n **\n * Equivalent to `Math.sin()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) sin\n\\*/\nSnap.sin = function (angle) {\n    return math.sin(Snap.rad(angle));\n};\n/*\\\n * Snap.tan\n [ method ]\n **\n * Equivalent to `Math.tan()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) tan\n\\*/\nSnap.tan = function (angle) {\n    return math.tan(Snap.rad(angle));\n};\n/*\\\n * Snap.cos\n [ method ]\n **\n * Equivalent to `Math.cos()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) cos\n\\*/\nSnap.cos = function (angle) {\n    return math.cos(Snap.rad(angle));\n};\n/*\\\n * Snap.asin\n [ method ]\n **\n * Equivalent to `Math.asin()` only works with degrees, not radians.\n - num (number) value\n = (number) asin in degrees\n\\*/\nSnap.asin = function (num) {\n    return Snap.deg(math.asin(num));\n};\n/*\\\n * Snap.acos\n [ method ]\n **\n * Equivalent to `Math.acos()` only works with degrees, not radians.\n - num (number) value\n = (number) acos in degrees\n\\*/\nSnap.acos = function (num) {\n    return Snap.deg(math.acos(num));\n};\n/*\\\n * Snap.atan\n [ method ]\n **\n * Equivalent to `Math.atan()` only works with degrees, not radians.\n - num (number) value\n = (number) atan in degrees\n\\*/\nSnap.atan = function (num) {\n    return Snap.deg(math.atan(num));\n};\n/*\\\n * Snap.atan2\n [ method ]\n **\n * Equivalent to `Math.atan2()` only works with degrees, not radians.\n - num (number) value\n = (number) atan2 in degrees\n\\*/\nSnap.atan2 = function (num) {\n    return Snap.deg(math.atan2(num));\n};\n/*\\\n * Snap.angle\n [ method ]\n **\n * Returns an angle between two or three points\n > Parameters\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n - x3 (number) #optional x coord of third point\n - y3 (number) #optional y coord of third point\n = (number) angle in degrees\n\\*/\nSnap.angle = angle;\n/*\\\n * Snap.len\n [ method ]\n **\n * Returns distance between two points\n > Parameters\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len = function (x1, y1, x2, y2) {\n    return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n};\n/*\\\n * Snap.len2\n [ method ]\n **\n * Returns squared distance between two points\n > Parameters\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len2 = function (x1, y1, x2, y2) {\n    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n};\n/*\\\n * Snap.closestPoint\n [ method ]\n **\n * Returns closest point to a given one on a given path.\n > Parameters\n - path (Element) path element\n - x (number) x coord of a point\n - y (number) y coord of a point\n = (object) in format\n {\n    x (number) x coord of the point on the path\n    y (number) y coord of the point on the path\n    length (number) length of the path to the point\n    distance (number) distance from the given point to the path\n }\n\\*/\n// Copied from http://bl.ocks.org/mbostock/8027637\nSnap.closestPoint = function (path, x, y) {\n    function distance2(p) {\n        var dx = p.x - x,\n            dy = p.y - y;\n        return dx * dx + dy * dy;\n    }\n    var pathNode = path.node,\n        pathLength = pathNode.getTotalLength(),\n        precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n        best,\n        bestLength,\n        bestDistance = Infinity;\n\n    // linear scan for coarse approximation\n    for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n        if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n            best = scan, bestLength = scanLength, bestDistance = scanDistance;\n        }\n    }\n\n    // binary search for precise estimate\n    precision *= .5;\n    while (precision > .5) {\n        var before,\n            after,\n            beforeLength,\n            afterLength,\n            beforeDistance,\n            afterDistance;\n        if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n            best = before, bestLength = beforeLength, bestDistance = beforeDistance;\n        } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n            best = after, bestLength = afterLength, bestDistance = afterDistance;\n        } else {\n            precision *= .5;\n        }\n    }\n\n    best = {\n        x: best.x,\n        y: best.y,\n        length: bestLength,\n        distance: Math.sqrt(bestDistance)\n    };\n    return best;\n}\n/*\\\n * Snap.is\n [ method ]\n **\n * Handy replacement for the `typeof` operator\n - o (…) any object or primitive\n - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n = (boolean) `true` if given value is of given type\n\\*/\nSnap.is = is;\n/*\\\n * Snap.snapTo\n [ method ]\n **\n * Snaps given value to given grid\n - values (array|number) given array of values or step of the grid\n - value (number) value to adjust\n - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n = (number) adjusted value\n\\*/\nSnap.snapTo = function (values, value, tolerance) {\n    tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n    if (is(values, \"array\")) {\n        var i = values.length;\n        while (i--) if (abs(values[i] - value) <= tolerance) {\n            return values[i];\n        }\n    } else {\n        values = +values;\n        var rem = value % values;\n        if (rem < tolerance) {\n            return value - rem;\n        }\n        if (rem > values - tolerance) {\n            return value - rem + values;\n        }\n    }\n    return value;\n};\n// Colour\n/*\\\n * Snap.getRGB\n [ method ]\n **\n * Parses color string as RGB object\n - color (string) color string in one of the following formats:\n # <ul>\n #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n # </ul>\n * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) true if string can't be parsed\n o }\n\\*/\nSnap.getRGB = cacher(function (colour) {\n    if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    if (colour == \"none\") {\n        return {r: -1, g: -1, b: -1, hex: \"none\", toString: rgbtoString};\n    }\n    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n    if (!colour) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    var res,\n        red,\n        green,\n        blue,\n        opacity,\n        t,\n        values,\n        rgb = colour.match(colourRegExp);\n    if (rgb) {\n        if (rgb[2]) {\n            blue = toInt(rgb[2].substring(5), 16);\n            green = toInt(rgb[2].substring(3, 5), 16);\n            red = toInt(rgb[2].substring(1, 3), 16);\n        }\n        if (rgb[3]) {\n            blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n            green = toInt((t = rgb[3].charAt(2)) + t, 16);\n            red = toInt((t = rgb[3].charAt(1)) + t, 16);\n        }\n        if (rgb[4]) {\n            values = rgb[4].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red *= 2.55);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green *= 2.55);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue *= 2.55);\n            rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        }\n        if (rgb[5]) {\n            values = rgb[5].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsb2rgb(red, green, blue, opacity);\n        }\n        if (rgb[6]) {\n            values = rgb[6].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsl2rgb(red, green, blue, opacity);\n        }\n        red = mmin(math.round(red), 255);\n        green = mmin(math.round(green), 255);\n        blue = mmin(math.round(blue), 255);\n        opacity = mmin(mmax(opacity, 0), 1);\n        rgb = {r: red, g: green, b: blue, toString: rgbtoString};\n        rgb.hex = \"#\" + (16777216 | blue | (green << 8) | (red << 16)).toString(16).slice(1);\n        rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n        return rgb;\n    }\n    return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n}, Snap);\n/*\\\n * Snap.hsb\n [ method ]\n **\n * Converts HSB values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - b (number) value or brightness\n = (string) hex representation of the color\n\\*/\nSnap.hsb = cacher(function (h, s, b) {\n    return Snap.hsb2rgb(h, s, b).hex;\n});\n/*\\\n * Snap.hsl\n [ method ]\n **\n * Converts HSL values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (string) hex representation of the color\n\\*/\nSnap.hsl = cacher(function (h, s, l) {\n    return Snap.hsl2rgb(h, s, l).hex;\n});\n/*\\\n * Snap.rgb\n [ method ]\n **\n * Converts RGB values to a hex representation of the color\n - r (number) red\n - g (number) green\n - b (number) blue\n = (string) hex representation of the color\n\\*/\nSnap.rgb = cacher(function (r, g, b, o) {\n    if (is(o, \"finite\")) {\n        var round = math.round;\n        return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n    }\n    return \"#\" + (16777216 | b | (g << 8) | (r << 16)).toString(16).slice(1);\n});\nvar toHex = function (color) {\n    var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n        red = \"rgb(255, 0, 0)\";\n    toHex = cacher(function (color) {\n        if (color.toLowerCase() == \"red\") {\n            return red;\n        }\n        i.style.color = red;\n        i.style.color = color;\n        var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n        return out == red ? null : out;\n    });\n    return toHex(color);\n},\nhsbtoString = function () {\n    return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n},\nhsltoString = function () {\n    return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n},\nrgbtoString = function () {\n    return this.opacity == 1 || this.opacity == null ?\n            this.hex :\n            \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n},\nprepareRGB = function (r, g, b) {\n    if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n        b = r.b;\n        g = r.g;\n        r = r.r;\n    }\n    if (g == null && is(r, string)) {\n        var clr = Snap.getRGB(r);\n        r = clr.r;\n        g = clr.g;\n        b = clr.b;\n    }\n    if (r > 1 || g > 1 || b > 1) {\n        r /= 255;\n        g /= 255;\n        b /= 255;\n    }\n    \n    return [r, g, b];\n},\npackageRGB = function (r, g, b, o) {\n    r = math.round(r * 255);\n    g = math.round(g * 255);\n    b = math.round(b * 255);\n    var rgb = {\n        r: r,\n        g: g,\n        b: b,\n        opacity: is(o, \"finite\") ? o : 1,\n        hex: Snap.rgb(r, g, b),\n        toString: rgbtoString\n    };\n    is(o, \"finite\") && (rgb.opacity = o);\n    return rgb;\n};\n/*\\\n * Snap.color\n [ method ]\n **\n * Parses the color string and returns an object featuring the color's component values\n - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n = (object) Combined RGB/HSB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) `true` if string can't be parsed,\n o     h (number) hue,\n o     s (number) saturation,\n o     v (number) value (brightness),\n o     l (number) lightness\n o }\n\\*/\nSnap.color = function (clr) {\n    var rgb;\n    if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n        rgb = Snap.hsb2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n        rgb = Snap.hsl2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else {\n        if (is(clr, \"string\")) {\n            clr = Snap.getRGB(clr);\n        }\n        if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n            rgb = Snap.rgb2hsl(clr);\n            clr.h = rgb.h;\n            clr.s = rgb.s;\n            clr.l = rgb.l;\n            rgb = Snap.rgb2hsb(clr);\n            clr.v = rgb.b;\n        } else {\n            clr = {hex: \"none\"};\n            clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n            clr.error = 1;\n        }\n    }\n    clr.toString = rgbtoString;\n    return clr;\n};\n/*\\\n * Snap.hsb2rgb\n [ method ]\n **\n * Converts HSB values to an RGB object\n - h (number) hue\n - s (number) saturation\n - v (number) value or brightness\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsb2rgb = function (h, s, v, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n        v = h.b;\n        s = h.s;\n        o = h.o;\n        h = h.h;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = (h % 360) / 60;\n    C = v * s;\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = v - C;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.hsl2rgb\n [ method ]\n **\n * Converts HSL values to an RGB object\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsl2rgb = function (h, s, l, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n    }\n    if (h > 1 || s > 1 || l > 1) {\n        h /= 360;\n        s /= 100;\n        l /= 100;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = (h % 360) / 60;\n    C = 2 * s * (l < .5 ? l : 1 - l);\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = l - C / 2;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.rgb2hsb\n [ method ]\n **\n * Converts RGB values to an HSB object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSB object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     b (number) brightness\n o }\n\\*/\nSnap.rgb2hsb = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, V, C;\n    V = mmax(r, g, b);\n    C = V - mmin(r, g, b);\n    H = (C == 0 ? null :\n         V == r ? (g - b) / C :\n         V == g ? (b - r) / C + 2 :\n                  (r - g) / C + 4\n        );\n    H = ((H + 360) % 6) * 60 / 360;\n    S = C == 0 ? 0 : C / V;\n    return {h: H, s: S, b: V, toString: hsbtoString};\n};\n/*\\\n * Snap.rgb2hsl\n [ method ]\n **\n * Converts RGB values to an HSL object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSL object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     l (number) luminosity\n o }\n\\*/\nSnap.rgb2hsl = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, L, M, m, C;\n    M = mmax(r, g, b);\n    m = mmin(r, g, b);\n    C = M - m;\n    H = (C == 0 ? null :\n         M == r ? (g - b) / C :\n         M == g ? (b - r) / C + 2 :\n                  (r - g) / C + 4);\n    H = ((H + 360) % 6) * 60 / 360;\n    L = (M + m) / 2;\n    S = (C == 0 ? 0 :\n         L < .5 ? C / (2 * L) :\n                  C / (2 - 2 * L));\n    return {h: H, s: S, l: L, toString: hsltoString};\n};\n\n// Transformations\n/*\\\n * Snap.parsePathString\n [ method ]\n **\n * Utility method\n **\n * Parses given path string into an array of arrays of path segments\n - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n = (array) array of segments\n\\*/\nSnap.parsePathString = function (pathString) {\n    if (!pathString) {\n        return null;\n    }\n    var pth = Snap.path(pathString);\n    if (pth.arr) {\n        return Snap.path.clone(pth.arr);\n    }\n    \n    var paramCounts = {a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0},\n        data = [];\n    if (is(pathString, \"array\") && is(pathString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(pathString);\n    }\n    if (!data.length) {\n        Str(pathString).replace(pathCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            if (name == \"m\" && params.length > 2) {\n                data.push([b].concat(params.splice(0, 2)));\n                name = \"l\";\n                b = b == \"m\" ? \"l\" : \"L\";\n            }\n            if (name == \"o\" && params.length == 1) {\n                data.push([b, params[0]]);\n            }\n            if (name == \"r\") {\n                data.push([b].concat(params));\n            } else while (params.length >= paramCounts[name]) {\n                data.push([b].concat(params.splice(0, paramCounts[name])));\n                if (!paramCounts[name]) {\n                    break;\n                }\n            }\n        });\n    }\n    data.toString = Snap.path.toString;\n    pth.arr = Snap.path.clone(data);\n    return data;\n};\n/*\\\n * Snap.parseTransformString\n [ method ]\n **\n * Utility method\n **\n * Parses given transform string into an array of transformations\n - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n = (array) array of transformations\n\\*/\nvar parseTransformString = Snap.parseTransformString = function (TString) {\n    if (!TString) {\n        return null;\n    }\n    var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n        data = [];\n    if (is(TString, \"array\") && is(TString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(TString);\n    }\n    if (!data.length) {\n        Str(TString).replace(tCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            data.push([b].concat(params));\n        });\n    }\n    data.toString = Snap.path.toString;\n    return data;\n};\nfunction svgTransform2string(tstr) {\n    var res = [];\n    tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n        params = params.split(/\\s*,\\s*|\\s+/);\n        if (name == \"rotate\" && params.length == 1) {\n            params.push(0, 0);\n        }\n        if (name == \"scale\") {\n            if (params.length > 2) {\n                params = params.slice(0, 2);\n            } else if (params.length == 2) {\n                params.push(0, 0);\n            }\n            if (params.length == 1) {\n                params.push(params[0], 0, 0);\n            }\n        }\n        if (name == \"skewX\") {\n            res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n        } else if (name == \"skewY\") {\n            res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n        } else {\n            res.push([name.charAt(0)].concat(params));\n        }\n        return all;\n    });\n    return res;\n}\nSnap._.svgTransform2string = svgTransform2string;\nSnap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\nfunction transform2matrix(tstr, bbox) {\n    var tdata = parseTransformString(tstr),\n        m = new Snap.Matrix;\n    if (tdata) {\n        for (var i = 0, ii = tdata.length; i < ii; i++) {\n            var t = tdata[i],\n                tlen = t.length,\n                command = Str(t[0]).toLowerCase(),\n                absolute = t[0] != command,\n                inver = absolute ? m.invert() : 0,\n                x1,\n                y1,\n                x2,\n                y2,\n                bb;\n            if (command == \"t\" && tlen == 2){\n                m.translate(t[1], 0);\n            } else if (command == \"t\" && tlen == 3) {\n                if (absolute) {\n                    x1 = inver.x(0, 0);\n                    y1 = inver.y(0, 0);\n                    x2 = inver.x(t[1], t[2]);\n                    y2 = inver.y(t[1], t[2]);\n                    m.translate(x2 - x1, y2 - y1);\n                } else {\n                    m.translate(t[1], t[2]);\n                }\n            } else if (command == \"r\") {\n                if (tlen == 2) {\n                    bb = bb || bbox;\n                    m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.rotate(t[1], x2, y2);\n                    } else {\n                        m.rotate(t[1], t[2], t[3]);\n                    }\n                }\n            } else if (command == \"s\") {\n                if (tlen == 2 || tlen == 3) {\n                    bb = bb || bbox;\n                    m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.scale(t[1], t[1], x2, y2);\n                    } else {\n                        m.scale(t[1], t[1], t[2], t[3]);\n                    }\n                } else if (tlen == 5) {\n                    if (absolute) {\n                        x2 = inver.x(t[3], t[4]);\n                        y2 = inver.y(t[3], t[4]);\n                        m.scale(t[1], t[2], x2, y2);\n                    } else {\n                        m.scale(t[1], t[2], t[3], t[4]);\n                    }\n                }\n            } else if (command == \"m\" && tlen == 7) {\n                m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n            }\n        }\n    }\n    return m;\n}\nSnap._.transform2matrix = transform2matrix;\nSnap._unit2px = unit2px;\nvar contains = glob.doc.contains || glob.doc.compareDocumentPosition ?\n    function (a, b) {\n        var adown = a.nodeType == 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n            return a == bup || !!(bup && bup.nodeType == 1 && (\n                adown.contains ?\n                    adown.contains(bup) :\n                    a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16\n            ));\n    } :\n    function (a, b) {\n        if (b) {\n            while (b) {\n                b = b.parentNode;\n                if (b == a) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\nfunction getSomeDefs(el) {\n    var p = (el.node.ownerSVGElement && wrap(el.node.ownerSVGElement)) ||\n            (el.node.parentNode && wrap(el.node.parentNode)) ||\n            Snap.select(\"svg\") ||\n            Snap(0, 0),\n        pdefs = p.select(\"defs\"),\n        defs  = pdefs == null ? false : pdefs.node;\n    if (!defs) {\n        defs = make(\"defs\", p.node).node;\n    }\n    return defs;\n}\nfunction getSomeSVG(el) {\n    return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n}\nSnap._.getSomeDefs = getSomeDefs;\nSnap._.getSomeSVG = getSomeSVG;\nfunction unit2px(el, name, value) {\n    var svg = getSomeSVG(el).node,\n        out = {},\n        mgr = svg.querySelector(\".svg---mgr\");\n    if (!mgr) {\n        mgr = $(\"rect\");\n        $(mgr, {x: -9e9, y: -9e9, width: 10, height: 10, \"class\": \"svg---mgr\", fill: \"none\"});\n        svg.appendChild(mgr);\n    }\n    function getW(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {width: val});\n        try {\n            return mgr.getBBox().width;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function getH(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {height: val});\n        try {\n            return mgr.getBBox().height;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function set(nam, f) {\n        if (name == null) {\n            out[nam] = f(el.attr(nam) || 0);\n        } else if (nam == name) {\n            out = f(value == null ? el.attr(nam) || 0 : value);\n        }\n    }\n    switch (el.type) {\n        case \"rect\":\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        case \"image\":\n            set(\"width\", getW);\n            set(\"height\", getH);\n        case \"text\":\n            set(\"x\", getW);\n            set(\"y\", getH);\n        break;\n        case \"circle\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"r\", getW);\n        break;\n        case \"ellipse\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        break;\n        case \"line\":\n            set(\"x1\", getW);\n            set(\"x2\", getW);\n            set(\"y1\", getH);\n            set(\"y2\", getH);\n        break;\n        case \"marker\":\n            set(\"refX\", getW);\n            set(\"markerWidth\", getW);\n            set(\"refY\", getH);\n            set(\"markerHeight\", getH);\n        break;\n        case \"radialGradient\":\n            set(\"fx\", getW);\n            set(\"fy\", getH);\n        break;\n        case \"tspan\":\n            set(\"dx\", getW);\n            set(\"dy\", getH);\n        break;\n        default:\n            set(name, getW);\n    }\n    svg.removeChild(mgr);\n    return out;\n}\n/*\\\n * Snap.select\n [ method ]\n **\n * Wraps a DOM element specified by CSS selector as @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.select = function (query) {\n    query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n    return wrap(glob.doc.querySelector(query));\n};\n/*\\\n * Snap.selectAll\n [ method ]\n **\n * Wraps DOM elements specified by CSS selector as set or array of @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.selectAll = function (query) {\n    var nodelist = glob.doc.querySelectorAll(query),\n        set = (Snap.set || Array)();\n    for (var i = 0; i < nodelist.length; i++) {\n        set.push(wrap(nodelist[i]));\n    }\n    return set;\n};\n\nfunction add2group(list) {\n    if (!is(list, \"array\")) {\n        list = Array.prototype.slice.call(arguments, 0);\n    }\n    var i = 0,\n        j = 0,\n        node = this.node;\n    while (this[i]) delete this[i++];\n    for (i = 0; i < list.length; i++) {\n        if (list[i].type == \"set\") {\n            list[i].forEach(function (el) {\n                node.appendChild(el.node);\n            });\n        } else {\n            node.appendChild(list[i].node);\n        }\n    }\n    var children = node.childNodes;\n    for (i = 0; i < children.length; i++) {\n        this[j++] = wrap(children[i]);\n    }\n    return this;\n}\n// Hub garbage collector every 10s\nsetInterval(function () {\n    for (var key in hub) if (hub[has](key)) {\n        var el = hub[key],\n            node = el.node;\n        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n            delete hub[key];\n        }\n    }\n}, 1e4);\nfunction Element(el) {\n    if (el.snap in hub) {\n        return hub[el.snap];\n    }\n    var svg;\n    try {\n        svg = el.ownerSVGElement;\n    } catch(e) {}\n    /*\\\n     * Element.node\n     [ property (object) ]\n     **\n     * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n     > Usage\n     | // draw a circle at coordinate 10,10 with radius of 10\n     | var c = paper.circle(10, 10, 10);\n     | c.node.onclick = function () {\n     |     c.attr(\"fill\", \"red\");\n     | };\n    \\*/\n    this.node = el;\n    if (svg) {\n        this.paper = new Paper(svg);\n    }\n    /*\\\n     * Element.type\n     [ property (string) ]\n     **\n     * SVG tag name of the given element.\n    \\*/\n    this.type = el.tagName || el.nodeName;\n    var id = this.id = ID(this);\n    this.anims = {};\n    this._ = {\n        transform: []\n    };\n    el.snap = id;\n    hub[id] = this;\n    if (this.type == \"g\") {\n        this.add = add2group;\n    }\n    if (this.type in {g: 1, mask: 1, pattern: 1, symbol: 1}) {\n        for (var method in Paper.prototype) if (Paper.prototype[has](method)) {\n            this[method] = Paper.prototype[method];\n        }\n    }\n}\n   /*\\\n     * Element.attr\n     [ method ]\n     **\n     * Gets or sets given attributes of the element.\n     **\n     - params (object) contains key-value pairs of attributes you want to set\n     * or\n     - param (string) name of the attribute\n     = (Element) the current element\n     * or\n     = (string) value of attribute\n     > Usage\n     | el.attr({\n     |     fill: \"#fc0\",\n     |     stroke: \"#000\",\n     |     strokeWidth: 2, // CamelCase...\n     |     \"fill-opacity\": 0.5, // or dash-separated names\n     |     width: \"*=2\" // prefixed values\n     | });\n     | console.log(el.attr(\"fill\")); // #fc0\n     * Prefixed values in format `\"+=10\"` supported. All four operations\n     * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n     * and `-`: `\"+=2em\"`.\n    \\*/\n    Element.prototype.attr = function (params, value) {\n        var el = this,\n            node = el.node;\n        if (!params) {\n            if (node.nodeType != 1) {\n                return {\n                    text: node.nodeValue\n                };\n            }\n            var attr = node.attributes,\n                out = {};\n            for (var i = 0, ii = attr.length; i < ii; i++) {\n                out[attr[i].nodeName] = attr[i].nodeValue;\n            }\n            return out;\n        }\n        if (is(params, \"string\")) {\n            if (arguments.length > 1) {\n                var json = {};\n                json[params] = value;\n                params = json;\n            } else {\n                return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n            }\n        }\n        for (var att in params) {\n            if (params[has](att)) {\n                eve(\"snap.util.attr.\" + att, el, params[att]);\n            }\n        }\n        return el;\n    };\n/*\\\n * Snap.parse\n [ method ]\n **\n * Parses SVG fragment and converts it into a @Fragment\n **\n - svg (string) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.parse = function (svg) {\n    var f = glob.doc.createDocumentFragment(),\n        full = true,\n        div = glob.doc.createElement(\"div\");\n    svg = Str(svg);\n    if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n        svg = \"<svg>\" + svg + \"</svg>\";\n        full = false;\n    }\n    div.innerHTML = svg;\n    svg = div.getElementsByTagName(\"svg\")[0];\n    if (svg) {\n        if (full) {\n            f = svg;\n        } else {\n            while (svg.firstChild) {\n                f.appendChild(svg.firstChild);\n            }\n        }\n    }\n    return new Fragment(f);\n};\nfunction Fragment(frag) {\n    this.node = frag;\n}\n/*\\\n * Snap.fragment\n [ method ]\n **\n * Creates a DOM fragment from a given list of elements or strings\n **\n - varargs (…) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.fragment = function () {\n    var args = Array.prototype.slice.call(arguments, 0),\n        f = glob.doc.createDocumentFragment();\n    for (var i = 0, ii = args.length; i < ii; i++) {\n        var item = args[i];\n        if (item.node && item.node.nodeType) {\n            f.appendChild(item.node);\n        }\n        if (item.nodeType) {\n            f.appendChild(item);\n        }\n        if (typeof item == \"string\") {\n            f.appendChild(Snap.parse(item).node);\n        }\n    }\n    return new Fragment(f);\n};\n\nfunction make(name, parent) {\n    var res = $(name);\n    parent.appendChild(res);\n    var el = wrap(res);\n    return el;\n}\nfunction Paper(w, h) {\n    var res,\n        desc,\n        defs,\n        proto = Paper.prototype;\n    if (w && w.tagName == \"svg\") {\n        if (w.snap in hub) {\n            return hub[w.snap];\n        }\n        var doc = w.ownerDocument;\n        res = new Element(w);\n        desc = w.getElementsByTagName(\"desc\")[0];\n        defs = w.getElementsByTagName(\"defs\")[0];\n        if (!desc) {\n            desc = $(\"desc\");\n            desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n            res.node.appendChild(desc);\n        }\n        if (!defs) {\n            defs = $(\"defs\");\n            res.node.appendChild(defs);\n        }\n        res.defs = defs;\n        for (var key in proto) if (proto[has](key)) {\n            res[key] = proto[key];\n        }\n        res.paper = res.root = res;\n    } else {\n        res = make(\"svg\", glob.doc.body);\n        $(res.node, {\n            height: h,\n            version: 1.1,\n            width: w,\n            xmlns: xmlns\n        });\n    }\n    return res;\n}\nfunction wrap(dom) {\n    if (!dom) {\n        return dom;\n    }\n    if (dom instanceof Element || dom instanceof Fragment) {\n        return dom;\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n        return new Paper(dom);\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n        return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n    }\n    return new Element(dom);\n}\n\nSnap._.make = make;\nSnap._.wrap = wrap;\n/*\\\n * Paper.el\n [ method ]\n **\n * Creates an element on paper with a given name and no attributes\n **\n - name (string) tag name\n - attr (object) attributes\n = (Element) the current element\n > Usage\n | var c = paper.circle(10, 10, 10); // is the same as...\n | var c = paper.el(\"circle\").attr({\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n | // and the same as\n | var c = paper.el(\"circle\", {\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n\\*/\nPaper.prototype.el = function (name, attr) {\n    var el = make(name, this.node);\n    attr && el.attr(attr);\n    return el;\n};\n/*\\\n * Element.children\n [ method ]\n **\n * Returns array of all the children of the element.\n = (array) array of Elements\n\\*/\nElement.prototype.children = function () {\n    var out = [],\n        ch = this.node.childNodes;\n    for (var i = 0, ii = ch.length; i < ii; i++) {\n        out[i] = Snap(ch[i]);\n    }\n    return out;\n};\nfunction jsonFiller(root, o) {\n    for (var i = 0, ii = root.length; i < ii; i++) {\n        var item = {\n                type: root[i].type,\n                attr: root[i].attr()\n            },\n            children = root[i].children();\n        o.push(item);\n        if (children.length) {\n            jsonFiller(children, item.childNodes = []);\n        }\n    }\n}\n/*\\\n * Element.toJSON\n [ method ]\n **\n * Returns object representation of the given element and all its children.\n = (object) in format\n o {\n o     type (string) this.type,\n o     attr (object) attributes map,\n o     childNodes (array) optional array of children in the same format\n o }\n\\*/\nElement.prototype.toJSON = function () {\n    var out = [];\n    jsonFiller([this], out);\n    return out[0];\n};\n// default\neve.on(\"snap.util.getattr\", function () {\n    var att = eve.nt();\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    var css = att.replace(/[A-Z]/g, function (letter) {\n        return \"-\" + letter.toLowerCase();\n    });\n    if (cssAttr[has](css)) {\n        return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n    } else {\n        return $(this.node, att);\n    }\n});\nvar cssAttr = {\n    \"alignment-baseline\": 0,\n    \"baseline-shift\": 0,\n    \"clip\": 0,\n    \"clip-path\": 0,\n    \"clip-rule\": 0,\n    \"color\": 0,\n    \"color-interpolation\": 0,\n    \"color-interpolation-filters\": 0,\n    \"color-profile\": 0,\n    \"color-rendering\": 0,\n    \"cursor\": 0,\n    \"direction\": 0,\n    \"display\": 0,\n    \"dominant-baseline\": 0,\n    \"enable-background\": 0,\n    \"fill\": 0,\n    \"fill-opacity\": 0,\n    \"fill-rule\": 0,\n    \"filter\": 0,\n    \"flood-color\": 0,\n    \"flood-opacity\": 0,\n    \"font\": 0,\n    \"font-family\": 0,\n    \"font-size\": 0,\n    \"font-size-adjust\": 0,\n    \"font-stretch\": 0,\n    \"font-style\": 0,\n    \"font-variant\": 0,\n    \"font-weight\": 0,\n    \"glyph-orientation-horizontal\": 0,\n    \"glyph-orientation-vertical\": 0,\n    \"image-rendering\": 0,\n    \"kerning\": 0,\n    \"letter-spacing\": 0,\n    \"lighting-color\": 0,\n    \"marker\": 0,\n    \"marker-end\": 0,\n    \"marker-mid\": 0,\n    \"marker-start\": 0,\n    \"mask\": 0,\n    \"opacity\": 0,\n    \"overflow\": 0,\n    \"pointer-events\": 0,\n    \"shape-rendering\": 0,\n    \"stop-color\": 0,\n    \"stop-opacity\": 0,\n    \"stroke\": 0,\n    \"stroke-dasharray\": 0,\n    \"stroke-dashoffset\": 0,\n    \"stroke-linecap\": 0,\n    \"stroke-linejoin\": 0,\n    \"stroke-miterlimit\": 0,\n    \"stroke-opacity\": 0,\n    \"stroke-width\": 0,\n    \"text-anchor\": 0,\n    \"text-decoration\": 0,\n    \"text-rendering\": 0,\n    \"unicode-bidi\": 0,\n    \"visibility\": 0,\n    \"word-spacing\": 0,\n    \"writing-mode\": 0\n};\n\neve.on(\"snap.util.attr\", function (value) {\n    var att = eve.nt(),\n        attr = {};\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    attr[att] = value;\n    var style = att.replace(/-(\\w)/gi, function (all, letter) {\n            return letter.toUpperCase();\n        }),\n        css = att.replace(/[A-Z]/g, function (letter) {\n            return \"-\" + letter.toLowerCase();\n        });\n    if (cssAttr[has](css)) {\n        this.node.style[style] = value == null ? E : value;\n    } else {\n        $(this.node, attr);\n    }\n});\n(function (proto) {}(Paper.prototype));\n\n// simple ajax\n/*\\\n * Snap.ajax\n [ method ]\n **\n * Simple implementation of Ajax\n **\n - url (string) URL\n - postData (object|string) data for post request\n - callback (function) callback\n - scope (object) #optional scope of callback\n * or\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n = (XMLHttpRequest) the XMLHttpRequest object, just in case\n\\*/\nSnap.ajax = function (url, postData, callback, scope){\n    var req = new XMLHttpRequest,\n        id = ID();\n    if (req) {\n        if (is(postData, \"function\")) {\n            scope = callback;\n            callback = postData;\n            postData = null;\n        } else if (is(postData, \"object\")) {\n            var pd = [];\n            for (var key in postData) if (postData.hasOwnProperty(key)) {\n                pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n            }\n            postData = pd.join(\"&\");\n        }\n        req.open((postData ? \"POST\" : \"GET\"), url, true);\n        if (postData) {\n            req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        }\n        if (callback) {\n            eve.once(\"snap.ajax.\" + id + \".0\", callback);\n            eve.once(\"snap.ajax.\" + id + \".200\", callback);\n            eve.once(\"snap.ajax.\" + id + \".304\", callback);\n        }\n        req.onreadystatechange = function() {\n            if (req.readyState != 4) return;\n            eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n        };\n        if (req.readyState == 4) {\n            return req;\n        }\n        req.send(postData);\n        return req;\n    }\n};\n/*\\\n * Snap.load\n [ method ]\n **\n * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n **\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n\\*/\nSnap.load = function (url, callback, scope) {\n    Snap.ajax(url, function (req) {\n        var f = Snap.parse(req.responseText);\n        scope ? callback.call(scope, f) : callback(f);\n    });\n};\nvar getOffset = function (elem) {\n    var box = elem.getBoundingClientRect(),\n        doc = elem.ownerDocument,\n        body = doc.body,\n        docElem = doc.documentElement,\n        clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n        top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n    return {\n        y: top,\n        x: left\n    };\n};\n/*\\\n * Snap.getElementByPoint\n [ method ]\n **\n * Returns you topmost element under given point.\n **\n = (object) Snap element object\n - x (number) x coordinate from the top left corner of the window\n - y (number) y coordinate from the top left corner of the window\n > Usage\n | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n\\*/\nSnap.getElementByPoint = function (x, y) {\n    var paper = this,\n        svg = paper.canvas,\n        target = glob.doc.elementFromPoint(x, y);\n    if (glob.win.opera && target.tagName == \"svg\") {\n        var so = getOffset(target),\n            sr = target.createSVGRect();\n        sr.x = x - so.x;\n        sr.y = y - so.y;\n        sr.width = sr.height = 1;\n        var hits = target.getIntersectionList(sr, null);\n        if (hits.length) {\n            target = hits[hits.length - 1];\n        }\n    }\n    if (!target) {\n        return null;\n    }\n    return wrap(target);\n};\n/*\\\n * Snap.plugin\n [ method ]\n **\n * Let you write plugins. You pass in a function with five arguments, like this:\n | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n |     Snap.newmethod = function () {};\n |     Element.prototype.newmethod = function () {};\n |     Paper.prototype.newmethod = function () {};\n | });\n * Inside the function you have access to all main objects (and their\n * prototypes). This allow you to extend anything you want.\n **\n - f (function) your plugin body\n\\*/\nSnap.plugin = function (f) {\n    f(Snap, Element, Paper, glob, Fragment);\n};\nglob.win.Snap = Snap;\nreturn Snap;\n}(window || this));\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        unit2px = Snap._unit2px,\n        $ = Snap._.$,\n        make = Snap._.make,\n        getSomeDefs = Snap._.getSomeDefs,\n        has = \"hasOwnProperty\",\n        wrap = Snap._.wrap;\n    /*\\\n     * Element.getBBox\n     [ method ]\n     **\n     * Returns the bounding box descriptor for the given element\n     **\n     = (object) bounding box descriptor:\n     o {\n     o     cx: (number) x of the center,\n     o     cy: (number) x of the center,\n     o     h: (number) height,\n     o     height: (number) height,\n     o     path: (string) path command for the box,\n     o     r0: (number) radius of a circle that fully encloses the box,\n     o     r1: (number) radius of the smallest circle that can be enclosed,\n     o     r2: (number) radius of the largest circle that can be enclosed,\n     o     vb: (string) box as a viewbox command,\n     o     w: (number) width,\n     o     width: (number) width,\n     o     x2: (number) x of the right side,\n     o     x: (number) x of the left side,\n     o     y2: (number) y of the bottom edge,\n     o     y: (number) y of the top edge\n     o }\n    \\*/\n    elproto.getBBox = function (isWithoutTransform) {\n        if (!Snap.Matrix || !Snap.path) {\n            return this.node.getBBox();\n        }\n        var el = this,\n            m = new Snap.Matrix;\n        if (el.removed) {\n            return Snap._.box();\n        }\n        while (el.type == \"use\") {\n            if (!isWithoutTransform) {\n                m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n            }\n            if (el.original) {\n                el = el.original;\n            } else {\n                var href = el.attr(\"xlink:href\");\n                el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n            }\n        }\n        var _ = el._,\n            pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n        try {\n            if (isWithoutTransform) {\n                _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n                return Snap._.box(_.bboxwt);\n            } else {\n                el.realPath = pathfinder(el);\n                el.matrix = el.transform().localMatrix;\n                _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n                return Snap._.box(_.bbox);\n            }\n        } catch (e) {\n            // Firefox doesn’t give you bbox of hidden element\n            return Snap._.box();\n        }\n    };\n    var propString = function () {\n        return this.string;\n    };\n    function extractTransform(el, tstr) {\n        if (tstr == null) {\n            var doReturn = true;\n            if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n                tstr = el.node.getAttribute(\"gradientTransform\");\n            } else if (el.type == \"pattern\") {\n                tstr = el.node.getAttribute(\"patternTransform\");\n            } else {\n                tstr = el.node.getAttribute(\"transform\");\n            }\n            if (!tstr) {\n                return new Snap.Matrix;\n            }\n            tstr = Snap._.svgTransform2string(tstr);\n        } else {\n            if (!Snap._.rgTransform.test(tstr)) {\n                tstr = Snap._.svgTransform2string(tstr);\n            } else {\n                tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || E);\n            }\n            if (is(tstr, \"array\")) {\n                tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n            }\n            el._.transform = tstr;\n        }\n        var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n        if (doReturn) {\n            return m;\n        } else {\n            el.matrix = m;\n        }\n    }\n    /*\\\n     * Element.transform\n     [ method ]\n     **\n     * Gets or sets transformation of the element\n     **\n     - tstr (string) transform string in Snap or SVG format\n     = (Element) the current element\n     * or\n     = (object) transformation descriptor:\n     o {\n     o     string (string) transform string,\n     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n     o     localMatrix (Matrix) matrix of transformations applied only to the element,\n     o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n     o     global (string) global transformation as string,\n     o     local (string) local transformation as string,\n     o     toString (function) returns `string` property\n     o }\n    \\*/\n    elproto.transform = function (tstr) {\n        var _ = this._;\n        if (tstr == null) {\n            var papa = this,\n                global = new Snap.Matrix(this.node.getCTM()),\n                local = extractTransform(this),\n                ms = [local],\n                m = new Snap.Matrix,\n                i,\n                localString = local.toTransformString(),\n                string = Str(local) == Str(this.matrix) ?\n                            Str(_.transform) : localString;\n            while (papa.type != \"svg\" && (papa = papa.parent())) {\n                ms.push(extractTransform(papa));\n            }\n            i = ms.length;\n            while (i--) {\n                m.add(ms[i]);\n            }\n            return {\n                string: string,\n                globalMatrix: global,\n                totalMatrix: m,\n                localMatrix: local,\n                diffMatrix: global.clone().add(local.invert()),\n                global: global.toTransformString(),\n                total: m.toTransformString(),\n                local: localString,\n                toString: propString\n            };\n        }\n        if (tstr instanceof Snap.Matrix) {\n            this.matrix = tstr;\n            this._.transform = tstr.toTransformString();\n        } else {\n            extractTransform(this, tstr);\n        }\n\n        if (this.node) {\n            if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n                $(this.node, {gradientTransform: this.matrix});\n            } else if (this.type == \"pattern\") {\n                $(this.node, {patternTransform: this.matrix});\n            } else {\n                $(this.node, {transform: this.matrix});\n            }\n        }\n\n        return this;\n    };\n    /*\\\n     * Element.parent\n     [ method ]\n     **\n     * Returns the element's parent\n     **\n     = (Element) the parent element\n    \\*/\n    elproto.parent = function () {\n        return wrap(this.node.parentNode);\n    };\n    /*\\\n     * Element.append\n     [ method ]\n     **\n     * Appends the given element to current one\n     **\n     - el (Element|Set) element to append\n     = (Element) the parent element\n    \\*/\n    /*\\\n     * Element.add\n     [ method ]\n     **\n     * See @Element.append\n    \\*/\n    elproto.append = elproto.add = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this;\n                el.forEach(function (el) {\n                    it.add(el);\n                });\n                return this;\n            }\n            el = wrap(el);\n            this.node.appendChild(el.node);\n            el.paper = this.paper;\n        }\n        return this;\n    };\n    /*\\\n     * Element.appendTo\n     [ method ]\n     **\n     * Appends the current element to the given one\n     **\n     - el (Element) parent element to append to\n     = (Element) the child element\n    \\*/\n    elproto.appendTo = function (el) {\n        if (el) {\n            el = wrap(el);\n            el.append(this);\n        }\n        return this;\n    };\n    /*\\\n     * Element.prepend\n     [ method ]\n     **\n     * Prepends the given element to the current one\n     **\n     - el (Element) element to prepend\n     = (Element) the parent element\n    \\*/\n    elproto.prepend = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this,\n                    first;\n                el.forEach(function (el) {\n                    if (first) {\n                        first.after(el);\n                    } else {\n                        it.prepend(el);\n                    }\n                    first = el;\n                });\n                return this;\n            }\n            el = wrap(el);\n            var parent = el.parent();\n            this.node.insertBefore(el.node, this.node.firstChild);\n            this.add && this.add();\n            el.paper = this.paper;\n            this.parent() && this.parent().add();\n            parent && parent.add();\n        }\n        return this;\n    };\n    /*\\\n     * Element.prependTo\n     [ method ]\n     **\n     * Prepends the current element to the given one\n     **\n     - el (Element) parent element to prepend to\n     = (Element) the child element\n    \\*/\n    elproto.prependTo = function (el) {\n        el = wrap(el);\n        el.prepend(this);\n        return this;\n    };\n    /*\\\n     * Element.before\n     [ method ]\n     **\n     * Inserts given element before the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.before = function (el) {\n        if (el.type == \"set\") {\n            var it = this;\n            el.forEach(function (el) {\n                var parent = el.parent();\n                it.node.parentNode.insertBefore(el.node, it.node);\n                parent && parent.add();\n            });\n            this.parent().add();\n            return this;\n        }\n        el = wrap(el);\n        var parent = el.parent();\n        this.node.parentNode.insertBefore(el.node, this.node);\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.after\n     [ method ]\n     **\n     * Inserts given element after the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.after = function (el) {\n        el = wrap(el);\n        var parent = el.parent();\n        if (this.node.nextSibling) {\n            this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n        } else {\n            this.node.parentNode.appendChild(el.node);\n        }\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.insertBefore\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertBefore = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.insertAfter\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertAfter = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.remove\n     [ method ]\n     **\n     * Removes element from the DOM\n     = (Element) the detached element\n    \\*/\n    elproto.remove = function () {\n        var parent = this.parent();\n        this.node.parentNode && this.node.parentNode.removeChild(this.node);\n        delete this.paper;\n        this.removed = true;\n        parent && parent.add();\n        return this;\n    };\n    /*\\\n     * Element.select\n     [ method ]\n     **\n     * Gathers the nested @Element matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Element) result of query selection\n    \\*/\n    elproto.select = function (query) {\n        query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n        return wrap(this.node.querySelector(query));\n    };\n    /*\\\n     * Element.selectAll\n     [ method ]\n     **\n     * Gathers nested @Element objects matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Set|array) result of query selection\n    \\*/\n    elproto.selectAll = function (query) {\n        var nodelist = this.node.querySelectorAll(query),\n            set = (Snap.set || Array)();\n        for (var i = 0; i < nodelist.length; i++) {\n            set.push(wrap(nodelist[i]));\n        }\n        return set;\n    };\n    /*\\\n     * Element.asPX\n     [ method ]\n     **\n     * Returns given attribute of the element as a `px` value (not %, em, etc.)\n     **\n     - attr (string) attribute name\n     - value (string) #optional attribute value\n     = (Element) result of query selection\n    \\*/\n    elproto.asPX = function (attr, value) {\n        if (value == null) {\n            value = this.attr(attr);\n        }\n        return +unit2px(this, attr, value);\n    };\n    // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n    /*\\\n     * Element.use\n     [ method ]\n     **\n     * Creates a `<use>` element linked to the current element\n     **\n     = (Element) the `<use>` element\n    \\*/\n    elproto.use = function () {\n        var use,\n            id = this.node.id;\n        if (!id) {\n            id = this.id;\n            $(this.node, {\n                id: id\n            });\n        }\n        if (this.type == \"linearGradient\" || this.type == \"radialGradient\" ||\n            this.type == \"pattern\") {\n            use = make(this.type, this.node.parentNode);\n        } else {\n            use = make(\"use\", this.node.parentNode);\n        }\n        $(use.node, {\n            \"xlink:href\": \"#\" + id\n        });\n        use.original = this;\n        return use;\n    };\n    function fixids(el) {\n        var els = el.selectAll(\"*\"),\n            it,\n            url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n            ids = [],\n            uses = {};\n        function urltest(it, name) {\n            var val = $(it.node, name);\n            val = val && val.match(url);\n            val = val && val[2];\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    var attr = {};\n                    attr[name] = URL(id);\n                    $(it.node, attr);\n                });\n            }\n        }\n        function linktest(it) {\n            var val = $(it.node, \"xlink:href\");\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    it.attr(\"xlink:href\", \"#\" + id);\n                });\n            }\n        }\n        for (var i = 0, ii = els.length; i < ii; i++) {\n            it = els[i];\n            urltest(it, \"fill\");\n            urltest(it, \"stroke\");\n            urltest(it, \"filter\");\n            urltest(it, \"mask\");\n            urltest(it, \"clip-path\");\n            linktest(it);\n            var oldid = $(it.node, \"id\");\n            if (oldid) {\n                $(it.node, {id: it.id});\n                ids.push({\n                    old: oldid,\n                    id: it.id\n                });\n            }\n        }\n        for (i = 0, ii = ids.length; i < ii; i++) {\n            var fs = uses[ids[i].old];\n            if (fs) {\n                for (var j = 0, jj = fs.length; j < jj; j++) {\n                    fs[j](ids[i].id);\n                }\n            }\n        }\n    }\n    /*\\\n     * Element.clone\n     [ method ]\n     **\n     * Creates a clone of the element and inserts it after the element\n     **\n     = (Element) the clone\n    \\*/\n    elproto.clone = function () {\n        var clone = wrap(this.node.cloneNode(true));\n        if ($(clone.node, \"id\")) {\n            $(clone.node, {id: clone.id});\n        }\n        fixids(clone);\n        clone.insertAfter(this);\n        return clone;\n    };\n    /*\\\n     * Element.toDefs\n     [ method ]\n     **\n     * Moves element to the shared `<defs>` area\n     **\n     = (Element) the element\n    \\*/\n    elproto.toDefs = function () {\n        var defs = getSomeDefs(this);\n        defs.appendChild(this.node);\n        return this;\n    };\n    /*\\\n     * Element.toPattern\n     [ method ]\n     **\n     * Creates a `<pattern>` element from the current element\n     **\n     * To create a pattern you have to specify the pattern rect:\n     - x (string|number)\n     - y (string|number)\n     - width (string|number)\n     - height (string|number)\n     = (Element) the `<pattern>` element\n     * You can use pattern later on as an argument for `fill` attribute:\n     | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n     |         fill: \"none\",\n     |         stroke: \"#bada55\",\n     |         strokeWidth: 5\n     |     }).pattern(0, 0, 10, 10),\n     |     c = paper.circle(200, 200, 100);\n     | c.attr({\n     |     fill: p\n     | });\n    \\*/\n    elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n        var p = make(\"pattern\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        $(p.node, {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            patternUnits: \"userSpaceOnUse\",\n            id: p.id,\n            viewBox: [x, y, width, height].join(\" \")\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n// SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n// SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n    /*\\\n     * Element.marker\n     [ method ]\n     **\n     * Creates a `<marker>` element from the current element\n     **\n     * To create a marker you have to specify the bounding rect and reference point:\n     - x (number)\n     - y (number)\n     - width (number)\n     - height (number)\n     - refX (number)\n     - refY (number)\n     = (Element) the `<marker>` element\n     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n    \\*/\n    // TODO add usage for markers\n    elproto.marker = function (x, y, width, height, refX, refY) {\n        var p = make(\"marker\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            refX = x.refX || x.cx;\n            refY = x.refY || x.cy;\n            x = x.x;\n        }\n        $(p.node, {\n            viewBox: [x, y, width, height].join(\" \"),\n            markerWidth: width,\n            markerHeight: height,\n            orient: \"auto\",\n            refX: refX || 0,\n            refY: refY || 0,\n            id: p.id\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n    // animation\n    function slice(from, to, f) {\n        return function (arr) {\n            var res = arr.slice(from, to);\n            if (res.length == 1) {\n                res = res[0];\n            }\n            return f ? f(res) : res;\n        };\n    }\n    var Animation = function (attr, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        this.attr = attr;\n        this.dur = ms;\n        easing && (this.easing = easing);\n        callback && (this.callback = callback);\n    };\n    Snap._.Animation = Animation;\n    /*\\\n     * Snap.animation\n     [ method ]\n     **\n     * Creates an animation object\n     **\n     - attr (object) attributes of final destination\n     - duration (number) duration of the animation, in milliseconds\n     - easing (function) #optional one of easing functions of @mina or custom one\n     - callback (function) #optional callback function that fires when animation ends\n     = (object) animation object\n    \\*/\n    Snap.animation = function (attr, ms, easing, callback) {\n        return new Animation(attr, ms, easing, callback);\n    };\n    /*\\\n     * Element.inAnim\n     [ method ]\n     **\n     * Returns a set of animations that may be able to manipulate the current element\n     **\n     = (object) in format:\n     o {\n     o     anim (object) animation object,\n     o     mina (object) @mina object,\n     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n    \\*/\n    elproto.inAnim = function () {\n        var el = this,\n            res = [];\n        for (var id in el.anims) if (el.anims[has](id)) {\n            (function (a) {\n                res.push({\n                    anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n                    mina: a,\n                    curStatus: a.status(),\n                    status: function (val) {\n                        return a.status(val);\n                    },\n                    stop: function () {\n                        a.stop();\n                    }\n                });\n            }(el.anims[id]));\n        }\n        return res;\n    };\n    /*\\\n     * Snap.animate\n     [ method ]\n     **\n     * Runs generic animation of one number into another with a caring function\n     **\n     - from (number|array) number or array of numbers\n     - to (number|array) number or array of numbers\n     - setter (function) caring function that accepts one number argument\n     - duration (number) duration, in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function to execute when animation ends\n     = (object) animation object in @mina format\n     o {\n     o     id (string) animation id, consider it read-only,\n     o     duration (function) gets or sets the duration of the animation,\n     o     easing (function) easing,\n     o     speed (function) gets or sets the speed of the animation,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n     | var rect = Snap().rect(0, 0, 10, 10);\n     | Snap.animate(0, 10, function (val) {\n     |     rect.attr({\n     |         x: val\n     |     });\n     | }, 1000);\n     | // in given context is equivalent to\n     | rect.animate({x: 10}, 1000);\n    \\*/\n    Snap.animate = function (from, to, setter, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        var now = mina.time(),\n            anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n        callback && eve.once(\"mina.finish.\" + anim.id, callback);\n        return anim;\n    };\n    /*\\\n     * Element.stop\n     [ method ]\n     **\n     * Stops all the animations for the current element\n     **\n     = (Element) the current element\n    \\*/\n    elproto.stop = function () {\n        var anims = this.inAnim();\n        for (var i = 0, ii = anims.length; i < ii; i++) {\n            anims[i].stop();\n        }\n        return this;\n    };\n    /*\\\n     * Element.animate\n     [ method ]\n     **\n     * Animates the given attributes of the element\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     = (Element) the current element\n    \\*/\n    elproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = easing.dur;\n            attrs = attrs.attr;\n        }\n        var fkeys = [], tkeys = [], keys = {}, from, to, f, eq,\n            el = this;\n        for (var key in attrs) if (attrs[has](key)) {\n            if (el.equal) {\n                eq = el.equal(key, Str(attrs[key]));\n                from = eq.from;\n                to = eq.to;\n                f = eq.f;\n            } else {\n                from = +el.attr(key);\n                to = +attrs[key];\n            }\n            var len = is(from, \"array\") ? from.length : 1;\n            keys[key] = slice(fkeys.length, fkeys.length + len, f);\n            fkeys = fkeys.concat(from);\n            tkeys = tkeys.concat(to);\n        }\n        var now = mina.time(),\n            anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n                var attr = {};\n                for (var key in keys) if (keys[has](key)) {\n                    attr[key] = keys[key](val);\n                }\n                el.attr(attr);\n            }, easing);\n        el.anims[anim.id] = anim;\n        anim._attrs = attrs;\n        anim._callback = callback;\n        eve(\"snap.animcreated.\" + el.id, anim);\n        eve.once(\"mina.finish.\" + anim.id, function () {\n            delete el.anims[anim.id];\n            callback && callback.call(el);\n        });\n        eve.once(\"mina.stop.\" + anim.id, function () {\n            delete el.anims[anim.id];\n        });\n        return el;\n    };\n    var eldata = {};\n    /*\\\n     * Element.data\n     [ method ]\n     **\n     * Adds or retrieves given value associated with given key. (Don’t confuse\n     * with `data-` attributes)\n     *\n     * See also @Element.removeData\n     - key (string) key to store data\n     - value (any) #optional value to store\n     = (object) @Element\n     * or, if value is not specified:\n     = (any) value\n     > Usage\n     | for (var i = 0, i < 5, i++) {\n     |     paper.circle(10 + 15 * i, 10, 10)\n     |          .attr({fill: \"#000\"})\n     |          .data(\"i\", i)\n     |          .click(function () {\n     |             alert(this.data(\"i\"));\n     |          });\n     | }\n    \\*/\n    elproto.data = function (key, value) {\n        var data = eldata[this.id] = eldata[this.id] || {};\n        if (arguments.length == 0){\n            eve(\"snap.data.get.\" + this.id, this, data, null);\n            return data;\n        }\n        if (arguments.length == 1) {\n            if (Snap.is(key, \"object\")) {\n                for (var i in key) if (key[has](i)) {\n                    this.data(i, key[i]);\n                }\n                return this;\n            }\n            eve(\"snap.data.get.\" + this.id, this, data[key], key);\n            return data[key];\n        }\n        data[key] = value;\n        eve(\"snap.data.set.\" + this.id, this, value, key);\n        return this;\n    };\n    /*\\\n     * Element.removeData\n     [ method ]\n     **\n     * Removes value associated with an element by given key.\n     * If key is not provided, removes all the data of the element.\n     - key (string) #optional key\n     = (object) @Element\n    \\*/\n    elproto.removeData = function (key) {\n        if (key == null) {\n            eldata[this.id] = {};\n        } else {\n            eldata[this.id] && delete eldata[this.id][key];\n        }\n        return this;\n    };\n    /*\\\n     * Element.outerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n     *\n     * See also @Element.innerSVG\n     = (string) SVG code for the element\n    \\*/\n    /*\\\n     * Element.toString\n     [ method ]\n     **\n     * See @Element.outerSVG\n    \\*/\n    elproto.outerSVG = elproto.toString = toString(1);\n    /*\\\n     * Element.innerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n     = (string) SVG code for the element\n    \\*/\n    elproto.innerSVG = toString();\n    function toString(type) {\n        return function () {\n            var res = type ? \"<\" + this.type : \"\",\n                attr = this.node.attributes,\n                chld = this.node.childNodes;\n            if (type) {\n                for (var i = 0, ii = attr.length; i < ii; i++) {\n                    res += \" \" + attr[i].name + '=\"' +\n                            attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n                }\n            }\n            if (chld.length) {\n                type && (res += \">\");\n                for (i = 0, ii = chld.length; i < ii; i++) {\n                    if (chld[i].nodeType == 3) {\n                        res += chld[i].nodeValue;\n                    } else if (chld[i].nodeType == 1) {\n                        res += wrap(chld[i]).toString();\n                    }\n                }\n                type && (res += \"</\" + this.type + \">\");\n            } else {\n                type && (res += \"/>\");\n            }\n            return res;\n        };\n    }\n    elproto.toDataURL = function () {\n        if (window && window.btoa) {\n            var bb = this.getBBox(),\n                svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n                x: +bb.x.toFixed(3),\n                y: +bb.y.toFixed(3),\n                width: +bb.width.toFixed(3),\n                height: +bb.height.toFixed(3),\n                contents: this.outerSVG()\n            });\n            return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n        }\n    };\n    /*\\\n     * Fragment.select\n     [ method ]\n     **\n     * See @Element.select\n    \\*/\n    Fragment.prototype.select = elproto.select;\n    /*\\\n     * Fragment.selectAll\n     [ method ]\n     **\n     * See @Element.selectAll\n    \\*/\n    Fragment.prototype.selectAll = elproto.selectAll;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var objectToString = Object.prototype.toString,\n        Str = String,\n        math = Math,\n        E = \"\";\n    function Matrix(a, b, c, d, e, f) {\n        if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n            this.a = a.a;\n            this.b = a.b;\n            this.c = a.c;\n            this.d = a.d;\n            this.e = a.e;\n            this.f = a.f;\n            return;\n        }\n        if (a != null) {\n            this.a = +a;\n            this.b = +b;\n            this.c = +c;\n            this.d = +d;\n            this.e = +e;\n            this.f = +f;\n        } else {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.e = 0;\n            this.f = 0;\n        }\n    }\n    (function (matrixproto) {\n        /*\\\n         * Matrix.add\n         [ method ]\n         **\n         * Adds the given matrix to existing one\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        matrixproto.add = function (a, b, c, d, e, f) {\n            var out = [[], [], []],\n                m = [[this.a, this.c, this.e], [this.b, this.d, this.f], [0, 0, 1]],\n                matrix = [[a, c, e], [b, d, f], [0, 0, 1]],\n                x, y, z, res;\n\n            if (a && a instanceof Matrix) {\n                matrix = [[a.a, a.c, a.e], [a.b, a.d, a.f], [0, 0, 1]];\n            }\n\n            for (x = 0; x < 3; x++) {\n                for (y = 0; y < 3; y++) {\n                    res = 0;\n                    for (z = 0; z < 3; z++) {\n                        res += m[x][z] * matrix[z][y];\n                    }\n                    out[x][y] = res;\n                }\n            }\n            this.a = out[0][0];\n            this.b = out[1][0];\n            this.c = out[0][1];\n            this.d = out[1][1];\n            this.e = out[0][2];\n            this.f = out[1][2];\n            return this;\n        };\n        /*\\\n         * Matrix.invert\n         [ method ]\n         **\n         * Returns an inverted version of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.invert = function () {\n            var me = this,\n                x = me.a * me.d - me.b * me.c;\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n        };\n        /*\\\n         * Matrix.clone\n         [ method ]\n         **\n         * Returns a copy of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.clone = function () {\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n        };\n        /*\\\n         * Matrix.translate\n         [ method ]\n         **\n         * Translate the matrix\n         - x (number) horizontal offset distance\n         - y (number) vertical offset distance\n        \\*/\n        matrixproto.translate = function (x, y) {\n            return this.add(1, 0, 0, 1, x, y);\n        };\n        /*\\\n         * Matrix.scale\n         [ method ]\n         **\n         * Scales the matrix\n         - x (number) amount to be scaled, with `1` resulting in no change\n         - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n         - cx (number) #optional horizontal origin point from which to scale\n         - cy (number) #optional vertical origin point from which to scale\n         * Default cx, cy is the middle point of the element.\n        \\*/\n        matrixproto.scale = function (x, y, cx, cy) {\n            y == null && (y = x);\n            (cx || cy) && this.add(1, 0, 0, 1, cx, cy);\n            this.add(x, 0, 0, y, 0, 0);\n            (cx || cy) && this.add(1, 0, 0, 1, -cx, -cy);\n            return this;\n        };\n        /*\\\n         * Matrix.rotate\n         [ method ]\n         **\n         * Rotates the matrix\n         - a (number) angle of rotation, in degrees\n         - x (number) horizontal origin point from which to rotate\n         - y (number) vertical origin point from which to rotate\n        \\*/\n        matrixproto.rotate = function (a, x, y) {\n            a = Snap.rad(a);\n            x = x || 0;\n            y = y || 0;\n            var cos = +math.cos(a).toFixed(9),\n                sin = +math.sin(a).toFixed(9);\n            this.add(cos, sin, -sin, cos, x, y);\n            return this.add(1, 0, 0, 1, -x, -y);\n        };\n        /*\\\n         * Matrix.x\n         [ method ]\n         **\n         * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n         - x (number)\n         - y (number)\n         = (number) x\n        \\*/\n        matrixproto.x = function (x, y) {\n            return x * this.a + y * this.c + this.e;\n        };\n        /*\\\n         * Matrix.y\n         [ method ]\n         **\n         * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n         - x (number)\n         - y (number)\n         = (number) y\n        \\*/\n        matrixproto.y = function (x, y) {\n            return x * this.b + y * this.d + this.f;\n        };\n        matrixproto.get = function (i) {\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n        };\n        matrixproto.toString = function () {\n            return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n        };\n        matrixproto.offset = function () {\n            return [this.e.toFixed(4), this.f.toFixed(4)];\n        };\n        function norm(a) {\n            return a[0] * a[0] + a[1] * a[1];\n        }\n        function normalize(a) {\n            var mag = math.sqrt(norm(a));\n            a[0] && (a[0] /= mag);\n            a[1] && (a[1] /= mag);\n        }\n        /*\\\n         * Matrix.determinant\n         [ method ]\n         **\n         * Finds determinant of the given matrix.\n         = (number) determinant\n        \\*/\n        matrixproto.determinant = function () {\n            return this.a * this.d - this.b * this.c;\n        };\n        /*\\\n         * Matrix.split\n         [ method ]\n         **\n         * Splits matrix into primitive transformations\n         = (object) in format:\n         o dx (number) translation by x\n         o dy (number) translation by y\n         o scalex (number) scale by x\n         o scaley (number) scale by y\n         o shear (number) shear\n         o rotate (number) rotation in deg\n         o isSimple (boolean) could it be represented via simple transformations\n        \\*/\n        matrixproto.split = function () {\n            var out = {};\n            // translation\n            out.dx = this.e;\n            out.dy = this.f;\n\n            // scale and shear\n            var row = [[this.a, this.c], [this.b, this.d]];\n            out.scalex = math.sqrt(norm(row[0]));\n            normalize(row[0]);\n\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\n            out.scaley = math.sqrt(norm(row[1]));\n            normalize(row[1]);\n            out.shear /= out.scaley;\n\n            if (this.determinant() < 0) {\n                out.scalex = -out.scalex;\n            }\n\n            // rotation\n            var sin = -row[0][1],\n                cos = row[1][1];\n            if (cos < 0) {\n                out.rotate = Snap.deg(math.acos(cos));\n                if (sin < 0) {\n                    out.rotate = 360 - out.rotate;\n                }\n            } else {\n                out.rotate = Snap.deg(math.asin(sin));\n            }\n\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n            return out;\n        };\n        /*\\\n         * Matrix.toTransformString\n         [ method ]\n         **\n         * Returns transform string that represents given matrix\n         = (string) transform string\n        \\*/\n        matrixproto.toTransformString = function (shorter) {\n            var s = shorter || this.split();\n            if (!+s.shear.toFixed(9)) {\n                s.scalex = +s.scalex.toFixed(4);\n                s.scaley = +s.scaley.toFixed(4);\n                s.rotate = +s.rotate.toFixed(4);\n                return  (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) + \n                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E) +\n                        (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E);\n            } else {\n                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n            }\n        };\n    })(Matrix.prototype);\n    /*\\\n     * Snap.Matrix\n     [ method ]\n     **\n     * Matrix constructor, extend on your own risk.\n     * To create matrices use @Snap.matrix.\n    \\*/\n    Snap.Matrix = Matrix;\n    /*\\\n     * Snap.matrix\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns a matrix based on the given parameters\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - svgMatrix (SVGMatrix)\n     = (object) @Matrix\n    \\*/\n    Snap.matrix = function (a, b, c, d, e, f) {\n        return new Matrix(a, b, c, d, e, f);\n    };\n});\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var has = \"hasOwnProperty\",\n        make = Snap._.make,\n        wrap = Snap._.wrap,\n        is = Snap.is,\n        getSomeDefs = Snap._.getSomeDefs,\n        reURLValue = /^url\\(#?([^)]+)\\)$/,\n        $ = Snap._.$,\n        URL = Snap.url,\n        Str = String,\n        separator = Snap._.separator,\n        E = \"\";\n    // Attributes event handlers\n    eve.on(\"snap.util.attr.mask\", function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value.type == \"mask\") {\n                var mask = value;\n            } else {\n                mask = make(\"mask\", getSomeDefs(this));\n                mask.node.appendChild(value.node);\n            }\n            !mask.node.id && $(mask.node, {\n                id: mask.id\n            });\n            $(this.node, {\n                mask: URL(mask.id)\n            });\n        }\n    });\n    (function (clipIt) {\n        eve.on(\"snap.util.attr.clip\", clipIt);\n        eve.on(\"snap.util.attr.clip-path\", clipIt);\n        eve.on(\"snap.util.attr.clipPath\", clipIt);\n    }(function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            if (value.type == \"clipPath\") {\n                var clip = value;\n            } else {\n                clip = make(\"clipPath\", getSomeDefs(this));\n                clip.node.appendChild(value.node);\n                !clip.node.id && $(clip.node, {\n                    id: clip.id\n                });\n            }\n            $(this.node, {\n                \"clip-path\": URL(clip.node.id || clip.id)\n            });\n        }\n    }));\n    function fillStroke(name) {\n        return function (value) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1 &&\n                (value.node.firstChild.tagName == \"radialGradient\" ||\n                value.node.firstChild.tagName == \"linearGradient\" ||\n                value.node.firstChild.tagName == \"pattern\")) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value instanceof Element) {\n                if (value.type == \"radialGradient\" || value.type == \"linearGradient\"\n                   || value.type == \"pattern\") {\n                    if (!value.node.id) {\n                        $(value.node, {\n                            id: value.id\n                        });\n                    }\n                    var fill = URL(value.node.id);\n                } else {\n                    fill = value.attr(name);\n                }\n            } else {\n                fill = Snap.color(value);\n                if (fill.error) {\n                    var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n                    if (grad) {\n                        if (!grad.node.id) {\n                            $(grad.node, {\n                                id: grad.id\n                            });\n                        }\n                        fill = URL(grad.node.id);\n                    } else {\n                        fill = value;\n                    }\n                } else {\n                    fill = Str(fill);\n                }\n            }\n            var attrs = {};\n            attrs[name] = fill;\n            $(this.node, attrs);\n            this.node.style[name] = E;\n        };\n    }\n    eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n    eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n    var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n    eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n        string = Str(string);\n        var tokens = string.match(gradrg);\n        if (!tokens) {\n            return null;\n        }\n        var type = tokens[1],\n            params = tokens[2],\n            stops = tokens[3];\n        params = params.split(/\\s*,\\s*/).map(function (el) {\n            return +el == el ? +el : el;\n        });\n        if (params.length == 1 && params[0] == 0) {\n            params = [];\n        }\n        stops = stops.split(\"-\");\n        stops = stops.map(function (el) {\n            el = el.split(\":\");\n            var out = {\n                color: el[0]\n            };\n            if (el[1]) {\n                out.offset = parseFloat(el[1]);\n            }\n            return out;\n        });\n        return {\n            type: type,\n            params: params,\n            stops: stops\n        };\n    });\n\n    eve.on(\"snap.util.attr.d\", function (value) {\n        eve.stop();\n        if (is(value, \"array\") && is(value[0], \"array\")) {\n            value = Snap.path.toString.call(value);\n        }\n        value = Str(value);\n        if (value.match(/[ruo]/i)) {\n            value = Snap.path.toAbsolute(value);\n        }\n        $(this.node, {d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.#text\", function (value) {\n        eve.stop();\n        value = Str(value);\n        var txt = glob.doc.createTextNode(value);\n        while (this.node.firstChild) {\n            this.node.removeChild(this.node.firstChild);\n        }\n        this.node.appendChild(txt);\n    })(-1);\n    eve.on(\"snap.util.attr.path\", function (value) {\n        eve.stop();\n        this.attr({d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.class\", function (value) {\n        eve.stop();\n        this.node.className.baseVal = value;\n    })(-1);\n    eve.on(\"snap.util.attr.viewBox\", function (value) {\n        var vb;\n        if (is(value, \"object\") && \"x\" in value) {\n            vb = [value.x, value.y, value.width, value.height].join(\" \");\n        } else if (is(value, \"array\")) {\n            vb = value.join(\" \");\n        } else {\n            vb = value;\n        }\n        $(this.node, {\n            viewBox: vb\n        });\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.transform\", function (value) {\n        this.transform(value);\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.r\", function (value) {\n        if (this.type == \"rect\") {\n            eve.stop();\n            $(this.node, {\n                rx: value,\n                ry: value\n            });\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.textpath\", function (value) {\n        eve.stop();\n        if (this.type == \"text\") {\n            var id, tp, node;\n            if (!value && this.textPath) {\n                tp = this.textPath;\n                while (tp.node.firstChild) {\n                    this.node.appendChild(tp.node.firstChild);\n                }\n                tp.remove();\n                delete this.textPath;\n                return;\n            }\n            if (is(value, \"string\")) {\n                var defs = getSomeDefs(this),\n                    path = wrap(defs.parentNode).path(value);\n                defs.appendChild(path.node);\n                id = path.id;\n                path.attr({id: id});\n            } else {\n                value = wrap(value);\n                if (value instanceof Element) {\n                    id = value.attr(\"id\");\n                    if (!id) {\n                        id = value.id;\n                        value.attr({id: id});\n                    }\n                }\n            }\n            if (id) {\n                tp = this.textPath;\n                node = this.node;\n                if (tp) {\n                    tp.attr({\"xlink:href\": \"#\" + id});\n                } else {\n                    tp = $(\"textPath\", {\n                        \"xlink:href\": \"#\" + id\n                    });\n                    while (node.firstChild) {\n                        tp.appendChild(node.firstChild);\n                    }\n                    node.appendChild(tp);\n                    this.textPath = wrap(tp);\n                }\n            }\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.text\", function (value) {\n        if (this.type == \"text\") {\n            var i = 0,\n                node = this.node,\n                tuner = function (chunk) {\n                    var out = $(\"tspan\");\n                    if (is(chunk, \"array\")) {\n                        for (var i = 0; i < chunk.length; i++) {\n                            out.appendChild(tuner(chunk[i]));\n                        }\n                    } else {\n                        out.appendChild(glob.doc.createTextNode(chunk));\n                    }\n                    out.normalize && out.normalize();\n                    return out;\n                };\n            while (node.firstChild) {\n                node.removeChild(node.firstChild);\n            }\n            var tuned = tuner(value);\n            while (tuned.firstChild) {\n                node.appendChild(tuned.firstChild);\n            }\n        }\n        eve.stop();\n    })(-1);\n    function setFontSize(value) {\n        eve.stop();\n        if (value == +value) {\n            value += \"px\";\n        }\n        this.node.style.fontSize = value;\n    }\n    eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n    eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n\n\n    eve.on(\"snap.util.getattr.transform\", function () {\n        eve.stop();\n        return this.transform();\n    })(-1);\n    eve.on(\"snap.util.getattr.textpath\", function () {\n        eve.stop();\n        return this.textPath;\n    })(-1);\n    // Markers\n    (function () {\n        function getter(end) {\n            return function () {\n                eve.stop();\n                var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n                if (style == \"none\") {\n                    return style;\n                } else {\n                    return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n                }\n            };\n        }\n        function setter(end) {\n            return function (value) {\n                eve.stop();\n                var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n                if (value == \"\" || !value) {\n                    this.node.style[name] = \"none\";\n                    return;\n                }\n                if (value.type == \"marker\") {\n                    var id = value.node.id;\n                    if (!id) {\n                        $(value.node, {id: value.id});\n                    }\n                    this.node.style[name] = URL(id);\n                    return;\n                }\n            };\n        }\n        eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n    }());\n    eve.on(\"snap.util.getattr.r\", function () {\n        if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n            eve.stop();\n            return $(this.node, \"rx\");\n        }\n    })(-1);\n    function textExtract(node) {\n        var out = [];\n        var children = node.childNodes;\n        for (var i = 0, ii = children.length; i < ii; i++) {\n            var chi = children[i];\n            if (chi.nodeType == 3) {\n                out.push(chi.nodeValue);\n            }\n            if (chi.tagName == \"tspan\") {\n                if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n                    out.push(chi.firstChild.nodeValue);\n                } else {\n                    out.push(textExtract(chi));\n                }\n            }\n        }\n        return out;\n    }\n    eve.on(\"snap.util.getattr.text\", function () {\n        if (this.type == \"text\" || this.type == \"tspan\") {\n            eve.stop();\n            var out = textExtract(this.node);\n            return out.length == 1 ? out[0] : out;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.#text\", function () {\n        return this.node.textContent;\n    })(-1);\n    eve.on(\"snap.util.getattr.viewBox\", function () {\n        eve.stop();\n        var vb = $(this.node, \"viewBox\");\n        if (vb) {\n            vb = vb.split(separator);\n            return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.points\", function () {\n        var p = $(this.node, \"points\");\n        eve.stop();\n        if (p) {\n            return p.split(separator);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.path\", function () {\n        var p = $(this.node, \"d\");\n        eve.stop();\n        return p;\n    })(-1);\n    eve.on(\"snap.util.getattr.class\", function () {\n        return this.node.className.baseVal;\n    })(-1);\n    function getFontSize() {\n        eve.stop();\n        return this.node.style.fontSize;\n    }\n    eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n    eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var rgNotSpace = /\\S+/g,\n        rgBadSpace = /[\\t\\r\\n\\f]/g,\n        rgTrim = /(^\\s+|\\s+$)/g,\n        Str = String,\n        elproto = Element.prototype;\n    /*\\\n     * Element.addClass\n     [ method ]\n     **\n     * Adds given class name or list of class names to the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.addClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n\n        if (classes.length) {\n            j = 0;\n            while ((clazz = classes[j++])) {\n                pos = curClasses.indexOf(clazz);\n                if (!~pos) {\n                    curClasses.push(clazz);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.removeClass\n     [ method ]\n     **\n     * Removes given class name or list of class names from the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.removeClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        if (curClasses.length) {\n            j = 0;\n            while ((clazz = classes[j++])) {\n                pos = curClasses.indexOf(clazz);\n                if (~pos) {\n                    curClasses.splice(pos, 1);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.hasClass\n     [ method ]\n     **\n     * Checks if the element has a given class name in the list of class names applied to it.\n     - value (string) class name\n     **\n     = (boolean) `true` if the element has given class\n    \\*/\n    elproto.hasClass = function (value) {\n        var elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [];\n        return !!~curClasses.indexOf(value);\n    };\n    /*\\\n     * Element.toggleClass\n     [ method ]\n     **\n     * Add or remove one or more classes from the element, depending on either\n     * the class’s presence or the value of the `flag` argument.\n     - value (string) class name or space separated list of class names\n     - flag (boolean) value to determine whether the class should be added or removed\n     **\n     = (Element) original element.\n    \\*/\n    elproto.toggleClass = function (value, flag) {\n        if (flag != null) {\n            if (flag) {\n                return this.addClass(value);\n            } else {\n                return this.removeClass(value);\n            }\n        }\n        var classes = (value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        j = 0;\n        while ((clazz = classes[j++])) {\n            pos = curClasses.indexOf(clazz);\n            if (~pos) {\n                curClasses.splice(pos, 1);\n            } else {\n                curClasses.push(clazz);\n            }\n        }\n\n        finalValue = curClasses.join(\" \");\n        if (className != finalValue) {\n            elem.className.baseVal = finalValue;\n        }\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var operators = {\n            \"+\": function (x, y) {\n                    return x + y;\n                },\n            \"-\": function (x, y) {\n                    return x - y;\n                },\n            \"/\": function (x, y) {\n                    return x / y;\n                },\n            \"*\": function (x, y) {\n                    return x * y;\n                }\n        },\n        Str = String,\n        reUnit = /[a-z]+$/i,\n        reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    eve.on(\"snap.util.attr\", function (val) {\n        var plus = Str(val).match(reAddon);\n        if (plus) {\n            var evnt = eve.nt(),\n                name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n                a = this.attr(name),\n                atr = {};\n            eve.stop();\n            var unit = plus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[plus[1]];\n            if (aUnit && aUnit == unit) {\n                val = op(parseFloat(a), +plus[2]);\n            } else {\n                a = this.asPX(name);\n                val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n            }\n            if (isNaN(a) || isNaN(val)) {\n                return;\n            }\n            atr[name] = val;\n            this.attr(atr);\n        }\n    })(-10);\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this,\n            bplus = Str(b).match(reAddon);\n        if (bplus) {\n            eve.stop();\n            var unit = bplus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[bplus[1]];\n            if (aUnit && aUnit == unit) {\n                return {\n                    from: parseFloat(a),\n                    to: op(parseFloat(a), +bplus[2]),\n                    f: getUnit(aUnit)\n                };\n            } else {\n                a = this.asPX(name);\n                return {\n                    from: a,\n                    to: op(a, this.asPX(name, bplus[2] + unit)),\n                    f: getNumber\n                };\n            }\n        }\n    })(-10);\n});\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var proto = Paper.prototype,\n        is = Snap.is;\n    /*\\\n     * Paper.rect\n     [ method ]\n     *\n     * Draws a rectangle\n     **\n     - x (number) x coordinate of the top left corner\n     - y (number) y coordinate of the top left corner\n     - width (number) width\n     - height (number) height\n     - rx (number) #optional horizontal radius for rounded corners, default is 0\n     - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n     = (object) the `rect` element\n     **\n     > Usage\n     | // regular rectangle\n     | var c = paper.rect(10, 10, 50, 50);\n     | // rectangle with rounded corners\n     | var c = paper.rect(40, 40, 50, 50, 10);\n    \\*/\n    proto.rect = function (x, y, w, h, rx, ry) {\n        var attr;\n        if (ry == null) {\n            ry = rx;\n        }\n        if (is(x, \"object\") && x == \"[object Object]\") {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                width: w,\n                height: h\n            };\n            if (rx != null) {\n                attr.rx = rx;\n                attr.ry = ry;\n            }\n        }\n        return this.el(\"rect\", attr);\n    };\n    /*\\\n     * Paper.circle\n     [ method ]\n     **\n     * Draws a circle\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - r (number) radius\n     = (object) the `circle` element\n     **\n     > Usage\n     | var c = paper.circle(50, 50, 40);\n    \\*/\n    proto.circle = function (cx, cy, r) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr = {\n                cx: cx,\n                cy: cy,\n                r: r\n            };\n        }\n        return this.el(\"circle\", attr);\n    };\n\n    var preload = (function () {\n        function onerror() {\n            this.parentNode.removeChild(this);\n        }\n        return function (src, f) {\n            var img = glob.doc.createElement(\"img\"),\n                body = glob.doc.body;\n            img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n            img.onload = function () {\n                f.call(img);\n                img.onload = img.onerror = null;\n                body.removeChild(img);\n            };\n            img.onerror = onerror;\n            body.appendChild(img);\n            img.src = src;\n        };\n    }());\n\n    /*\\\n     * Paper.image\n     [ method ]\n     **\n     * Places an image on the surface\n     **\n     - src (string) URI of the source image\n     - x (number) x offset position\n     - y (number) y offset position\n     - width (number) width of the image\n     - height (number) height of the image\n     = (object) the `image` element\n     * or\n     = (object) Snap element object with type `image`\n     **\n     > Usage\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n    \\*/\n    proto.image = function (src, x, y, width, height) {\n        var el = this.el(\"image\");\n        if (is(src, \"object\") && \"src\" in src) {\n            el.attr(src);\n        } else if (src != null) {\n            var set = {\n                \"xlink:href\": src,\n                preserveAspectRatio: \"none\"\n            };\n            if (x != null && y != null) {\n                set.x = x;\n                set.y = y;\n            }\n            if (width != null && height != null) {\n                set.width = width;\n                set.height = height;\n            } else {\n                preload(src, function () {\n                    Snap._.$(el.node, {\n                        width: this.offsetWidth,\n                        height: this.offsetHeight\n                    });\n                });\n            }\n            Snap._.$(el.node, set);\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ellipse\n     [ method ]\n     **\n     * Draws an ellipse\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - rx (number) horizontal radius\n     - ry (number) vertical radius\n     = (object) the `ellipse` element\n     **\n     > Usage\n     | var c = paper.ellipse(50, 50, 40, 20);\n    \\*/\n    proto.ellipse = function (cx, cy, rx, ry) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr ={\n                cx: cx,\n                cy: cy,\n                rx: rx,\n                ry: ry\n            };\n        }\n        return this.el(\"ellipse\", attr);\n    };\n    // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n    /*\\\n     * Paper.path\n     [ method ]\n     **\n     * Creates a `<path>` element using the given string as the path's definition\n     - pathString (string) #optional path string in SVG format\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n     | \"M10,20L30,40\"\n     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n     *\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n     > Usage\n     | var c = paper.path(\"M10 10L90 90\");\n     | // draw a diagonal line:\n     | // move to 10,10, line to 90,90\n    \\*/\n    proto.path = function (d) {\n        var attr;\n        if (is(d, \"object\") && !is(d, \"array\")) {\n            attr = d;\n        } else if (d) {\n            attr = {d: d};\n        }\n        return this.el(\"path\", attr);\n    };\n    /*\\\n     * Paper.g\n     [ method ]\n     **\n     * Creates a group element\n     **\n     - varargs (…) #optional elements to nest within the group\n     = (object) the `g` element\n     **\n     > Usage\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g(c2, c1); // note that the order of elements is different\n     * or\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g();\n     | g.add(c2, c1);\n    \\*/\n    /*\\\n     * Paper.group\n     [ method ]\n     **\n     * See @Paper.g\n    \\*/\n    proto.group = proto.g = function (first) {\n        var attr,\n            el = this.el(\"g\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.svg\n     [ method ]\n     **\n     * Creates a nested SVG element.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `svg` element\n     **\n    \\*/\n    proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n        var attrs = {};\n        if (is(x, \"object\") && y == null) {\n            attrs = x;\n        } else {\n            if (x != null) {\n                attrs.x = x;\n            }\n            if (y != null) {\n                attrs.y = y;\n            }\n            if (width != null) {\n                attrs.width = width;\n            }\n            if (height != null) {\n                attrs.height = height;\n            }\n            if (vbx != null && vby != null && vbw != null && vbh != null) {\n                attrs.viewBox = [vbx, vby, vbw, vbh];\n            }\n        }\n        return this.el(\"svg\", attrs);\n    };\n    /*\\\n     * Paper.mask\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a mask.\n     **\n     = (object) the `mask` element\n     **\n    \\*/\n    proto.mask = function (first) {\n        var attr,\n            el = this.el(\"mask\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ptrn\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `pattern` element\n     **\n    \\*/\n    proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n        if (is(x, \"object\")) {\n            var attr = x;\n        } else {\n            attr = {patternUnits: \"userSpaceOnUse\"};\n            if (x) {\n                attr.x = x;\n            }\n            if (y) {\n                attr.y = y;\n            }\n            if (width != null) {\n                attr.width = width;\n            }\n            if (height != null) {\n                attr.height = height;\n            }\n            if (vx != null && vy != null && vw != null && vh != null) {\n                attr.viewBox = [vx, vy, vw, vh];\n            } else {\n                attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n            }\n        }\n        return this.el(\"pattern\", attr);\n    };\n    /*\\\n     * Paper.use\n     [ method ]\n     **\n     * Creates a <use> element.\n     - id (string) @optional id of element to link\n     * or\n     - id (Element) @optional element to link\n     **\n     = (object) the `use` element\n     **\n    \\*/\n    proto.use = function (id) {\n        if (id != null) {\n            if (id instanceof Element) {\n                if (!id.attr(\"id\")) {\n                    id.attr({id: Snap._.id(id)});\n                }\n                id = id.attr(\"id\");\n            }\n            if (String(id).charAt() == \"#\") {\n                id = id.substring(1);\n            }\n            return this.el(\"use\", {\"xlink:href\": \"#\" + id});\n        } else {\n            return Element.prototype.use.call(this);\n        }\n    };\n    /*\\\n     * Paper.symbol\n     [ method ]\n     **\n     * Creates a <symbol> element.\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     = (object) the `symbol` element\n     **\n    \\*/\n    proto.symbol = function (vx, vy, vw, vh) {\n        var attr = {};\n        if (vx != null && vy != null && vw != null && vh != null) {\n            attr.viewBox = [vx, vy, vw, vh];\n        }\n\n        return this.el(\"symbol\", attr);\n    };\n    /*\\\n     * Paper.text\n     [ method ]\n     **\n     * Draws a text string\n     **\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n     = (object) the `text` element\n     **\n     > Usage\n     | var t1 = paper.text(50, 50, \"Snap\");\n     | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n     | // Text path usage\n     | t1.attr({textpath: \"M10,10L100,100\"});\n     | // or\n     | var pth = paper.path(\"M10,10L100,100\");\n     | t1.attr({textpath: pth});\n    \\*/\n    proto.text = function (x, y, text) {\n        var attr = {};\n        if (is(x, \"object\")) {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                text: text || \"\"\n            };\n        }\n        return this.el(\"text\", attr);\n    };\n    /*\\\n     * Paper.line\n     [ method ]\n     **\n     * Draws a line\n     **\n     - x1 (number) x coordinate position of the start\n     - y1 (number) y coordinate position of the start\n     - x2 (number) x coordinate position of the end\n     - y2 (number) y coordinate position of the end\n     = (object) the `line` element\n     **\n     > Usage\n     | var t1 = paper.line(50, 50, 100, 100);\n    \\*/\n    proto.line = function (x1, y1, x2, y2) {\n        var attr = {};\n        if (is(x1, \"object\")) {\n            attr = x1;\n        } else if (x1 != null) {\n            attr = {\n                x1: x1,\n                x2: x2,\n                y1: y1,\n                y2: y2\n            };\n        }\n        return this.el(\"line\", attr);\n    };\n    /*\\\n     * Paper.polyline\n     [ method ]\n     **\n     * Draws a polyline\n     **\n     - points (array) array of points\n     * or\n     - varargs (…) points\n     = (object) the `polyline` element\n     **\n     > Usage\n     | var p1 = paper.polyline([10, 10, 100, 100]);\n     | var p2 = paper.polyline(10, 10, 100, 100);\n    \\*/\n    proto.polyline = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polyline\", attr);\n    };\n    /*\\\n     * Paper.polygon\n     [ method ]\n     **\n     * Draws a polygon. See @Paper.polyline\n    \\*/\n    proto.polygon = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polygon\", attr);\n    };\n    // gradients\n    (function () {\n        var $ = Snap._.$;\n        // gradients' helpers\n        function Gstops() {\n            return this.selectAll(\"stop\");\n        }\n        function GaddStop(color, offset) {\n            var stop = $(\"stop\"),\n                attr = {\n                    offset: +offset + \"%\"\n                };\n            color = Snap.color(color);\n            attr[\"stop-color\"] = color.hex;\n            if (color.opacity < 1) {\n                attr[\"stop-opacity\"] = color.opacity;\n            }\n            $(stop, attr);\n            this.node.appendChild(stop);\n            return this;\n        }\n        function GgetBBox() {\n            if (this.type == \"linearGradient\") {\n                var x1 = $(this.node, \"x1\") || 0,\n                    x2 = $(this.node, \"x2\") || 1,\n                    y1 = $(this.node, \"y1\") || 0,\n                    y2 = $(this.node, \"y2\") || 0;\n                return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n            } else {\n                var cx = this.node.cx || .5,\n                    cy = this.node.cy || .5,\n                    r = this.node.r || 0;\n                return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n            }\n        }\n        function gradient(defs, str) {\n            var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n                el;\n            if (!grad) {\n                return null;\n            }\n            grad.params.unshift(defs);\n            if (grad.type.toLowerCase() == \"l\") {\n                el = gradientLinear.apply(0, grad.params);\n            } else {\n                el = gradientRadial.apply(0, grad.params);\n            }\n            if (grad.type != grad.type.toLowerCase()) {\n                $(el.node, {\n                    gradientUnits: \"userSpaceOnUse\"\n                });\n            }\n            var stops = grad.stops,\n                len = stops.length,\n                start = 0,\n                j = 0;\n            function seed(i, end) {\n                var step = (end - start) / (i - j);\n                for (var k = j; k < i; k++) {\n                    stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n                }\n                j = i;\n                start = end;\n            }\n            len--;\n            for (var i = 0; i < len; i++) if (\"offset\" in stops[i]) {\n                seed(i, stops[i].offset);\n            }\n            stops[len].offset = stops[len].offset || 100;\n            seed(len, stops[len].offset);\n            for (i = 0; i <= len; i++) {\n                var stop = stops[i];\n                el.addStop(stop.color, stop.offset);\n            }\n            return el;\n        }\n        function gradientLinear(defs, x1, y1, x2, y2) {\n            var el = Snap._.make(\"linearGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            if (x1 != null) {\n                $(el.node, {\n                    x1: x1,\n                    y1: y1,\n                    x2: x2,\n                    y2: y2\n                });\n            }\n            return el;\n        }\n        function gradientRadial(defs, cx, cy, r, fx, fy) {\n            var el = Snap._.make(\"radialGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            if (cx != null) {\n                $(el.node, {\n                    cx: cx,\n                    cy: cy,\n                    r: r\n                });\n            }\n            if (fx != null && fy != null) {\n                $(el.node, {\n                    fx: fx,\n                    fy: fy\n                });\n            }\n            return el;\n        }\n        /*\\\n         * Paper.gradient\n         [ method ]\n         **\n         * Creates a gradient element\n         **\n         - gradient (string) gradient descriptor\n         > Gradient Descriptor\n         * The gradient descriptor is an expression formatted as\n         * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n         * either linear or radial.  The uppercase `L` or `R` letters\n         * indicate absolute coordinates offset from the SVG surface.\n         * Lowercase `l` or `r` letters indicate coordinates\n         * calculated relative to the element to which the gradient is\n         * applied.  Coordinates specify a linear gradient vector as\n         * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n         * `r` and optional `fx`, `fy` specifying a focal point away\n         * from the center of the circle. Specify `<colors>` as a list\n         * of dash-separated CSS color values.  Each color may be\n         * followed by a custom offset value, separated with a colon\n         * character.\n         > Examples\n         * Linear gradient, relative from top-left corner to bottom-right\n         * corner, from black through red to white:\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         * Linear gradient, absolute from (0, 0) to (100, 100), from black\n         * through red at 25% to white:\n         | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n         * Radial gradient, relative from the center of the element with radius\n         * half the width, from black to white:\n         | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n         * To apply the gradient:\n         | paper.circle(50, 50, 40).attr({\n         |     fill: g\n         | });\n         = (object) the `gradient` element\n        \\*/\n        proto.gradient = function (str) {\n            return gradient(this.defs, str);\n        };\n        proto.gradientLinear = function (x1, y1, x2, y2) {\n            return gradientLinear(this.defs, x1, y1, x2, y2);\n        };\n        proto.gradientRadial = function (cx, cy, r, fx, fy) {\n            return gradientRadial(this.defs, cx, cy, r, fx, fy);\n        };\n        /*\\\n         * Paper.toString\n         [ method ]\n         **\n         * Returns SVG code for the @Paper\n         = (string) SVG code for the @Paper\n        \\*/\n        proto.toString = function () {\n            var doc = this.node.ownerDocument,\n                f = doc.createDocumentFragment(),\n                d = doc.createElement(\"div\"),\n                svg = this.node.cloneNode(true),\n                res;\n            f.appendChild(d);\n            d.appendChild(svg);\n            Snap._.$(svg, {xmlns: \"http://www.w3.org/2000/svg\"});\n            res = d.innerHTML;\n            f.removeChild(f.firstChild);\n            return res;\n        };\n        /*\\\n         * Paper.toDataURL\n         [ method ]\n         **\n         * Returns SVG code for the @Paper as Data URI string.\n         = (string) Data URI string\n        \\*/\n        proto.toDataURL = function () {\n            if (window && window.btoa) {\n                return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n            }\n        };\n        /*\\\n         * Paper.clear\n         [ method ]\n         **\n         * Removes all child nodes of the paper, except <defs>.\n        \\*/\n        proto.clear = function () {\n            var node = this.node.firstChild,\n                next;\n            while (node) {\n                next = node.nextSibling;\n                if (node.tagName != \"defs\") {\n                    node.parentNode.removeChild(node);\n                } else {\n                    proto.clear.call({node: node});\n                }\n                node = next;\n            }\n        };\n    }());\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        clone = Snap._.clone,\n        has = \"hasOwnProperty\",\n        p2s = /,?([a-z]),?/gi,\n        toFloat = parseFloat,\n        math = Math,\n        PI = math.PI,\n        mmin = math.min,\n        mmax = math.max,\n        pow = math.pow,\n        abs = math.abs;\n    function paths(ps) {\n        var p = paths.ps = paths.ps || {};\n        if (p[ps]) {\n            p[ps].sleep = 100;\n        } else {\n            p[ps] = {\n                sleep: 100\n            };\n        }\n        setTimeout(function () {\n            for (var key in p) if (p[has](key) && key != ps) {\n                p[key].sleep--;\n                !p[key].sleep && delete p[key];\n            }\n        });\n        return p[ps];\n    }\n    function box(x, y, width, height) {\n        if (x == null) {\n            x = y = width = height = 0;\n        }\n        if (y == null) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            w: width,\n            height: height,\n            h: height,\n            x2: x + width,\n            y2: y + height,\n            cx: x + width / 2,\n            cy: y + height / 2,\n            r1: math.min(width, height) / 2,\n            r2: math.max(width, height) / 2,\n            r0: math.sqrt(width * width + height * height) / 2,\n            path: rectPath(x, y, width, height),\n            vb: [x, y, width, height].join(\" \")\n        };\n    }\n    function toString() {\n        return this.join(\",\").replace(p2s, \"$1\");\n    }\n    function pathClone(pathArray) {\n        var res = clone(pathArray);\n        res.toString = toString;\n        return res;\n    }\n    function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n        if (length == null) {\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n        } else {\n            return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y,\n                getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n        }\n    }\n    function getLengthFactory(istotal, subpath) {\n        function O(val) {\n            return +(+val).toFixed(3);\n        }\n        return Snap._.cacher(function (path, length, onlystart) {\n            if (path instanceof Element) {\n                path = path.attr(\"d\");\n            }\n            path = path2curve(path);\n            var x, y, p, l, sp = \"\", subpaths = {}, point,\n                len = 0;\n            for (var i = 0, ii = path.length; i < ii; i++) {\n                p = path[i];\n                if (p[0] == \"M\") {\n                    x = +p[1];\n                    y = +p[2];\n                } else {\n                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                    if (len + l > length) {\n                        if (subpath && !subpaths.start) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            sp += [\n                                \"C\" + O(point.start.x),\n                                O(point.start.y),\n                                O(point.m.x),\n                                O(point.m.y),\n                                O(point.x),\n                                O(point.y)\n                            ];\n                            if (onlystart) {return sp;}\n                            subpaths.start = sp;\n                            sp = [\n                                \"M\" + O(point.x),\n                                O(point.y) + \"C\" + O(point.n.x),\n                                O(point.n.y),\n                                O(point.end.x),\n                                O(point.end.y),\n                                O(p[5]),\n                                O(p[6])\n                            ].join();\n                            len += l;\n                            x = +p[5];\n                            y = +p[6];\n                            continue;\n                        }\n                        if (!istotal && !subpath) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            return point;\n                        }\n                    }\n                    len += l;\n                    x = +p[5];\n                    y = +p[6];\n                }\n                sp += p.shift() + p;\n            }\n            subpaths.end = sp;\n            point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n            return point;\n        }, null, Snap._.clone);\n    }\n    var getTotalLength = getLengthFactory(1),\n        getPointAtLength = getLengthFactory(),\n        getSubpathsAtLength = getLengthFactory(0, 1);\n    function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t,\n            t13 = pow(t1, 3),\n            t12 = pow(t1, 2),\n            t2 = t * t,\n            t3 = t2 * t,\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n            ax = t1 * p1x + t * c1x,\n            ay = t1 * p1y + t * c1y,\n            cx = t1 * c2x + t * p2x,\n            cy = t1 * c2y + t * p2y,\n            alpha = (90 - math.atan2(mx - nx, my - ny) * 180 / PI);\n        // (mx > nx || my < ny) && (alpha += 180);\n        return {\n            x: x,\n            y: y,\n            m: {x: mx, y: my},\n            n: {x: nx, y: ny},\n            start: {x: ax, y: ay},\n            end: {x: cx, y: cy},\n            alpha: alpha\n        };\n    }\n    function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n        if (!Snap.is(p1x, \"array\")) {\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n        }\n        var bbox = curveDim.apply(null, p1x);\n        return box(\n            bbox.min.x,\n            bbox.min.y,\n            bbox.max.x - bbox.min.x,\n            bbox.max.y - bbox.min.y\n        );\n    }\n    function isPointInsideBBox(bbox, x, y) {\n        return  x >= bbox.x &&\n                x <= bbox.x + bbox.width &&\n                y >= bbox.y &&\n                y <= bbox.y + bbox.height;\n    }\n    function isBBoxIntersect(bbox1, bbox2) {\n        bbox1 = box(bbox1);\n        bbox2 = box(bbox2);\n        return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\n                || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\n                || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n    }\n    function base3(t, p1, p2, p3, p4) {\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n        return t * t2 - 3 * p1 + 3 * p2;\n    }\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n        if (z == null) {\n            z = 1;\n        }\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\n        var z2 = z / 2,\n            n = 12,\n            Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n            sum = 0;\n        for (var i = 0; i < n; i++) {\n            var ct = z2 * Tvalues[i] + z2,\n                xbase = base3(ct, x1, x2, x3, x4),\n                ybase = base3(ct, y1, y2, y3, y4),\n                comb = xbase * xbase + ybase * ybase;\n            sum += Cvalues[i] * math.sqrt(comb);\n        }\n        return z2 * sum;\n    }\n    function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n            return;\n        }\n        var t = 1,\n            step = t / 2,\n            t2 = t - step,\n            l,\n            e = .01;\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        while (abs(l - ll) > e) {\n            step /= 2;\n            t2 += (l < ll ? 1 : -1) * step;\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        }\n        return t2;\n    }\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (\n            mmax(x1, x2) < mmin(x3, x4) ||\n            mmin(x1, x2) > mmax(x3, x4) ||\n            mmax(y1, y2) < mmin(y3, y4) ||\n            mmin(y1, y2) > mmax(y3, y4)\n        ) {\n            return;\n        }\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n        if (!denominator) {\n            return;\n        }\n        var px = nx / denominator,\n            py = ny / denominator,\n            px2 = +px.toFixed(2),\n            py2 = +py.toFixed(2);\n        if (\n            px2 < +mmin(x1, x2).toFixed(2) ||\n            px2 > +mmax(x1, x2).toFixed(2) ||\n            px2 < +mmin(x3, x4).toFixed(2) ||\n            px2 > +mmax(x3, x4).toFixed(2) ||\n            py2 < +mmin(y1, y2).toFixed(2) ||\n            py2 > +mmax(y1, y2).toFixed(2) ||\n            py2 < +mmin(y3, y4).toFixed(2) ||\n            py2 > +mmax(y3, y4).toFixed(2)\n        ) {\n            return;\n        }\n        return {x: px, y: py};\n    }\n    function inter(bez1, bez2) {\n        return interHelper(bez1, bez2);\n    }\n    function interCount(bez1, bez2) {\n        return interHelper(bez1, bez2, 1);\n    }\n    function interHelper(bez1, bez2, justCount) {\n        var bbox1 = bezierBBox(bez1),\n            bbox2 = bezierBBox(bez2);\n        if (!isBBoxIntersect(bbox1, bbox2)) {\n            return justCount ? 0 : [];\n        }\n        var l1 = bezlen.apply(0, bez1),\n            l2 = bezlen.apply(0, bez2),\n            n1 = ~~(l1 / 8),\n            n2 = ~~(l2 / 8),\n            dots1 = [],\n            dots2 = [],\n            xy = {},\n            res = justCount ? 0 : [];\n        for (var i = 0; i < n1 + 1; i++) {\n            var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n            dots1.push({x: p.x, y: p.y, t: i / n1});\n        }\n        for (i = 0; i < n2 + 1; i++) {\n            p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n            dots2.push({x: p.x, y: p.y, t: i / n2});\n        }\n        for (i = 0; i < n1; i++) {\n            for (var j = 0; j < n2; j++) {\n                var di = dots1[i],\n                    di1 = dots1[i + 1],\n                    dj = dots2[j],\n                    dj1 = dots2[j + 1],\n                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n                if (is) {\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n                        continue;\n                    }\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n                    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n                        if (justCount) {\n                            res++;\n                        } else {\n                            res.push({\n                                x: is.x,\n                                y: is.y,\n                                t1: t1,\n                                t2: t2\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function pathIntersection(path1, path2) {\n        return interPathHelper(path1, path2);\n    }\n    function pathIntersectionNumber(path1, path2) {\n        return interPathHelper(path1, path2, 1);\n    }\n    function interPathHelper(path1, path2, justCount) {\n        path1 = path2curve(path1);\n        path2 = path2curve(path2);\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n            res = justCount ? 0 : [];\n        for (var i = 0, ii = path1.length; i < ii; i++) {\n            var pi = path1[i];\n            if (pi[0] == \"M\") {\n                x1 = x1m = pi[1];\n                y1 = y1m = pi[2];\n            } else {\n                if (pi[0] == \"C\") {\n                    bez1 = [x1, y1].concat(pi.slice(1));\n                    x1 = bez1[6];\n                    y1 = bez1[7];\n                } else {\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n                    x1 = x1m;\n                    y1 = y1m;\n                }\n                for (var j = 0, jj = path2.length; j < jj; j++) {\n                    var pj = path2[j];\n                    if (pj[0] == \"M\") {\n                        x2 = x2m = pj[1];\n                        y2 = y2m = pj[2];\n                    } else {\n                        if (pj[0] == \"C\") {\n                            bez2 = [x2, y2].concat(pj.slice(1));\n                            x2 = bez2[6];\n                            y2 = bez2[7];\n                        } else {\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                            x2 = x2m;\n                            y2 = y2m;\n                        }\n                        var intr = interHelper(bez1, bez2, justCount);\n                        if (justCount) {\n                            res += intr;\n                        } else {\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\n                                intr[k].segment1 = i;\n                                intr[k].segment2 = j;\n                                intr[k].bez1 = bez1;\n                                intr[k].bez2 = bez2;\n                            }\n                            res = res.concat(intr);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function isPointInsidePath(path, x, y) {\n        var bbox = pathBBox(path);\n        return isPointInsideBBox(bbox, x, y) &&\n               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n    }\n    function pathBBox(path) {\n        var pth = paths(path);\n        if (pth.bbox) {\n            return clone(pth.bbox);\n        }\n        if (!path) {\n            return box();\n        }\n        path = path2curve(path);\n        var x = 0, \n            y = 0,\n            X = [],\n            Y = [],\n            p;\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            p = path[i];\n            if (p[0] == \"M\") {\n                x = p[1];\n                y = p[2];\n                X.push(x);\n                Y.push(y);\n            } else {\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                X = X.concat(dim.min.x, dim.max.x);\n                Y = Y.concat(dim.min.y, dim.max.y);\n                x = p[5];\n                y = p[6];\n            }\n        }\n        var xmin = mmin.apply(0, X),\n            ymin = mmin.apply(0, Y),\n            xmax = mmax.apply(0, X),\n            ymax = mmax.apply(0, Y),\n            bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n        pth.bbox = clone(bb);\n        return bb;\n    }\n    function rectPath(x, y, w, h, r) {\n        if (r) {\n            return [\n                [\"M\", +x + (+r), y],\n                [\"l\", w - r * 2, 0],\n                [\"a\", r, r, 0, 0, 1, r, r],\n                [\"l\", 0, h - r * 2],\n                [\"a\", r, r, 0, 0, 1, -r, r],\n                [\"l\", r * 2 - w, 0],\n                [\"a\", r, r, 0, 0, 1, -r, -r],\n                [\"l\", 0, r * 2 - h],\n                [\"a\", r, r, 0, 0, 1, r, -r],\n                [\"z\"]\n            ];\n        }\n        var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n        res.toString = toString;\n        return res;\n    }\n    function ellipsePath(x, y, rx, ry, a) {\n        if (a == null && ry == null) {\n            ry = rx;\n        }\n        x = +x;\n        y = +y;\n        rx = +rx;\n        ry = +ry;\n        if (a != null) {\n            var rad = Math.PI / 180,\n                x1 = x + rx * Math.cos(-ry * rad),\n                x2 = x + rx * Math.cos(-a * rad),\n                y1 = y + rx * Math.sin(-ry * rad),\n                y2 = y + rx * Math.sin(-a * rad),\n                res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n        } else {\n            res = [\n                [\"M\", x, y],\n                [\"m\", 0, -ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry],\n                [\"z\"]\n            ];\n        }\n        res.toString = toString;\n        return res;\n    }\n    var unit2px = Snap._unit2px,\n        getPath = {\n        path: function (el) {\n            return el.attr(\"path\");\n        },\n        circle: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx, attr.cy, attr.r);\n        },\n        ellipse: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n        },\n        rect: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n        },\n        image: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n        },\n        line: function (el) {\n            return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n        },\n        polyline: function (el) {\n            return \"M\" + el.attr(\"points\");\n        },\n        polygon: function (el) {\n            return \"M\" + el.attr(\"points\") + \"z\";\n        },\n        deflt: function (el) {\n            var bbox = el.node.getBBox();\n            return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n        }\n    };\n    function pathToRelative(pathArray) {\n        var pth = paths(pathArray),\n            lowerCase = String.prototype.toLowerCase;\n        if (pth.rel) {\n            return pathClone(pth.rel);\n        }\n        if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0;\n        if (pathArray[0][0] == \"M\") {\n            x = pathArray[0][1];\n            y = pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res.push([\"M\", x, y]);\n        }\n        for (var i = start, ii = pathArray.length; i < ii; i++) {\n            var r = res[i] = [],\n                pa = pathArray[i];\n            if (pa[0] != lowerCase.call(pa[0])) {\n                r[0] = lowerCase.call(pa[0]);\n                switch (r[0]) {\n                    case \"a\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +(pa[6] - x).toFixed(3);\n                        r[7] = +(pa[7] - y).toFixed(3);\n                        break;\n                    case \"v\":\n                        r[1] = +(pa[1] - y).toFixed(3);\n                        break;\n                    case \"m\":\n                        mx = pa[1];\n                        my = pa[2];\n                    default:\n                        for (var j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +(pa[j] - ((j % 2) ? x : y)).toFixed(3);\n                        }\n                }\n            } else {\n                r = res[i] = [];\n                if (pa[0] == \"m\") {\n                    mx = pa[1] + x;\n                    my = pa[2] + y;\n                }\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    res[i][k] = pa[k];\n                }\n            }\n            var len = res[i].length;\n            switch (res[i][0]) {\n                case \"z\":\n                    x = mx;\n                    y = my;\n                    break;\n                case \"h\":\n                    x += +res[i][len - 1];\n                    break;\n                case \"v\":\n                    y += +res[i][len - 1];\n                    break;\n                default:\n                    x += +res[i][len - 2];\n                    y += +res[i][len - 1];\n            }\n        }\n        res.toString = toString;\n        pth.rel = pathClone(res);\n        return res;\n    }\n    function pathToAbsolute(pathArray) {\n        var pth = paths(pathArray);\n        if (pth.abs) {\n            return pathClone(pth.abs);\n        }\n        if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) { // rough assumption\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        if (!pathArray || !pathArray.length) {\n            return [[\"M\", 0, 0]];\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0,\n            pa0;\n        if (pathArray[0][0] == \"M\") {\n            x = +pathArray[0][1];\n            y = +pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res[0] = [\"M\", x, y];\n        }\n        var crz = pathArray.length == 3 &&\n            pathArray[0][0] == \"M\" &&\n            pathArray[1][0].toUpperCase() == \"R\" &&\n            pathArray[2][0].toUpperCase() == \"Z\";\n        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n            res.push(r = []);\n            pa = pathArray[i];\n            pa0 = pa[0];\n            if (pa0 != pa0.toUpperCase()) {\n                r[0] = pa0.toUpperCase();\n                switch (r[0]) {\n                    case \"A\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +pa[6] + x;\n                        r[7] = +pa[7] + y;\n                        break;\n                    case \"V\":\n                        r[1] = +pa[1] + y;\n                        break;\n                    case \"H\":\n                        r[1] = +pa[1] + x;\n                        break;\n                    case \"R\":\n                        var dots = [x, y].concat(pa.slice(1));\n                        for (var j = 2, jj = dots.length; j < jj; j++) {\n                            dots[j] = +dots[j] + x;\n                            dots[++j] = +dots[j] + y;\n                        }\n                        res.pop();\n                        res = res.concat(catmullRom2bezier(dots, crz));\n                        break;\n                    case \"O\":\n                        res.pop();\n                        dots = ellipsePath(x, y, pa[1], pa[2]);\n                        dots.push(dots[0]);\n                        res = res.concat(dots);\n                        break;\n                    case \"U\":\n                        res.pop();\n                        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                        r = [\"U\"].concat(res[res.length - 1].slice(-2));\n                        break;\n                    case \"M\":\n                        mx = +pa[1] + x;\n                        my = +pa[2] + y;\n                    default:\n                        for (j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +pa[j] + ((j % 2) ? x : y);\n                        }\n                }\n            } else if (pa0 == \"R\") {\n                dots = [x, y].concat(pa.slice(1));\n                res.pop();\n                res = res.concat(catmullRom2bezier(dots, crz));\n                r = [\"R\"].concat(pa.slice(-2));\n            } else if (pa0 == \"O\") {\n                res.pop();\n                dots = ellipsePath(x, y, pa[1], pa[2]);\n                dots.push(dots[0]);\n                res = res.concat(dots);\n            } else if (pa0 == \"U\") {\n                res.pop();\n                res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                r = [\"U\"].concat(res[res.length - 1].slice(-2));\n            } else {\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    r[k] = pa[k];\n                }\n            }\n            pa0 = pa0.toUpperCase();\n            if (pa0 != \"O\") {\n                switch (r[0]) {\n                    case \"Z\":\n                        x = +mx;\n                        y = +my;\n                        break;\n                    case \"H\":\n                        x = r[1];\n                        break;\n                    case \"V\":\n                        y = r[1];\n                        break;\n                    case \"M\":\n                        mx = r[r.length - 2];\n                        my = r[r.length - 1];\n                    default:\n                        x = r[r.length - 2];\n                        y = r[r.length - 1];\n                }\n            }\n        }\n        res.toString = toString;\n        pth.abs = pathClone(res);\n        return res;\n    }\n    function l2c(x1, y1, x2, y2) {\n        return [x1, y1, x2, y2, x2, y2];\n    }\n    function q2c(x1, y1, ax, ay, x2, y2) {\n        var _13 = 1 / 3,\n            _23 = 2 / 3;\n        return [\n                _13 * x1 + _23 * ax,\n                _13 * y1 + _23 * ay,\n                _13 * x2 + _23 * ax,\n                _13 * y2 + _23 * ay,\n                x2,\n                y2\n            ];\n    }\n    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n        // for more information of where this math came from visit:\n        // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n        var _120 = PI * 120 / 180,\n            rad = PI / 180 * (+angle || 0),\n            res = [],\n            xy,\n            rotate = Snap._.cacher(function (x, y, rad) {\n                var X = x * math.cos(rad) - y * math.sin(rad),\n                    Y = x * math.sin(rad) + y * math.cos(rad);\n                return {x: X, y: Y};\n            });\n        if (!recursive) {\n            xy = rotate(x1, y1, -rad);\n            x1 = xy.x;\n            y1 = xy.y;\n            xy = rotate(x2, y2, -rad);\n            x2 = xy.x;\n            y2 = xy.y;\n            var cos = math.cos(PI / 180 * angle),\n                sin = math.sin(PI / 180 * angle),\n                x = (x1 - x2) / 2,\n                y = (y1 - y2) / 2;\n            var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\n            if (h > 1) {\n                h = math.sqrt(h);\n                rx = h * rx;\n                ry = h * ry;\n            }\n            var rx2 = rx * rx,\n                ry2 = ry * ry,\n                k = (large_arc_flag == sweep_flag ? -1 : 1) *\n                    math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n                cx = k * rx * y / ry + (x1 + x2) / 2,\n                cy = k * -ry * x / rx + (y1 + y2) / 2,\n                f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n                f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n            f1 = x1 < cx ? PI - f1 : f1;\n            f2 = x2 < cx ? PI - f2 : f2;\n            f1 < 0 && (f1 = PI * 2 + f1);\n            f2 < 0 && (f2 = PI * 2 + f2);\n            if (sweep_flag && f1 > f2) {\n                f1 = f1 - PI * 2;\n            }\n            if (!sweep_flag && f2 > f1) {\n                f2 = f2 - PI * 2;\n            }\n        } else {\n            f1 = recursive[0];\n            f2 = recursive[1];\n            cx = recursive[2];\n            cy = recursive[3];\n        }\n        var df = f2 - f1;\n        if (abs(df) > _120) {\n            var f2old = f2,\n                x2old = x2,\n                y2old = y2;\n            f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n            x2 = cx + rx * math.cos(f2);\n            y2 = cy + ry * math.sin(f2);\n            res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n        }\n        df = f2 - f1;\n        var c1 = math.cos(f1),\n            s1 = math.sin(f1),\n            c2 = math.cos(f2),\n            s2 = math.sin(f2),\n            t = math.tan(df / 4),\n            hx = 4 / 3 * rx * t,\n            hy = 4 / 3 * ry * t,\n            m1 = [x1, y1],\n            m2 = [x1 + hx * s1, y1 - hy * c1],\n            m3 = [x2 + hx * s2, y2 - hy * c2],\n            m4 = [x2, y2];\n        m2[0] = 2 * m1[0] - m2[0];\n        m2[1] = 2 * m1[1] - m2[1];\n        if (recursive) {\n            return [m2, m3, m4].concat(res);\n        } else {\n            res = [m2, m3, m4].concat(res).join().split(\",\");\n            var newres = [];\n            for (var i = 0, ii = res.length; i < ii; i++) {\n                newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n            }\n            return newres;\n        }\n    }\n    function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t;\n        return {\n            x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n            y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n        };\n    }\n    \n    // Returns bounding box of cubic bezier curve.\n    // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // Original version: NISHIO Hirokazu\n    // Modifications: https://github.com/timo22345\n    function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n        var tvalues = [],\n            bounds = [[], []],\n            a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n        for (var i = 0; i < 2; ++i) {\n            if (i == 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n            } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n            }\n            if (abs(a) < 1e-12) {\n                if (abs(b) < 1e-12) {\n                    continue;\n                }\n                t = -c / b;\n                if (0 < t && t < 1) {\n                    tvalues.push(t);\n                }\n                continue;\n            }\n            b2ac = b * b - 4 * c * a;\n            sqrtb2ac = math.sqrt(b2ac);\n            if (b2ac < 0) {\n                continue;\n            }\n            t1 = (-b + sqrtb2ac) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n            }\n            t2 = (-b - sqrtb2ac) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n            }\n        }\n\n        var x, y, j = tvalues.length,\n            jlen = j,\n            mt;\n        while (j--) {\n            t = tvalues[j];\n            mt = 1 - t;\n            bounds[0][j] = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n            bounds[1][j] = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n        }\n\n        bounds[0][jlen] = x0;\n        bounds[1][jlen] = y0;\n        bounds[0][jlen + 1] = x3;\n        bounds[1][jlen + 1] = y3;\n        bounds[0].length = bounds[1].length = jlen + 2;\n\n\n        return {\n          min: {x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1])},\n          max: {x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1])}\n        };\n    }\n\n    function path2curve(path, path2) {\n        var pth = !path2 && paths(path);\n        if (!path2 && pth.curve) {\n            return pathClone(pth.curve);\n        }\n        var p = pathToAbsolute(path),\n            p2 = path2 && pathToAbsolute(path2),\n            attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            processPath = function (path, d, pcom) {\n                var nx, ny;\n                if (!path) {\n                    return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n                }\n                !(path[0] in {T: 1, Q: 1}) && (d.qx = d.qy = null);\n                switch (path[0]) {\n                    case \"M\":\n                        d.X = path[1];\n                        d.Y = path[2];\n                        break;\n                    case \"A\":\n                        path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n                        break;\n                    case \"S\":\n                        if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n                            nx = d.x * 2 - d.bx;          // And reflect the previous\n                            ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n                        }\n                        else {                            // or some else or nothing\n                            nx = d.x;\n                            ny = d.y;\n                        }\n                        path = [\"C\", nx, ny].concat(path.slice(1));\n                        break;\n                    case \"T\":\n                        if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n                            d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n                            d.qy = d.y * 2 - d.qy;        // to case \"S\".\n                        }\n                        else {                            // or something else or nothing\n                            d.qx = d.x;\n                            d.qy = d.y;\n                        }\n                        path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                        break;\n                    case \"Q\":\n                        d.qx = path[1];\n                        d.qy = path[2];\n                        path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                        break;\n                    case \"L\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n                        break;\n                    case \"H\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n                        break;\n                    case \"V\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n                        break;\n                    case \"Z\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n                        break;\n                }\n                return path;\n            },\n            fixArc = function (pp, i) {\n                if (pp[i].length > 7) {\n                    pp[i].shift();\n                    var pi = pp[i];\n                    while (pi.length) {\n                        pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n                        p2 && (pcoms2[i] = \"A\"); // the same as above\n                        pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n                    }\n                    pp.splice(i, 1);\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            fixM = function (path1, path2, a1, a2, i) {\n                if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n                    path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n                    a1.bx = 0;\n                    a1.by = 0;\n                    a1.x = path1[i][1];\n                    a1.y = path1[i][2];\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            pcoms1 = [], // path commands of original path p\n            pcoms2 = [], // path commands of original path p2\n            pfirst = \"\", // temporary holder for original path command\n            pcom = \"\"; // holder for previous path command of original path\n        for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n            p[i] && (pfirst = p[i][0]); // save current path command\n\n            if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n            {\n                pcoms1[i] = pfirst; // Save current path command\n                i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n            }\n            p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n            if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n            // which may produce multiple C:s\n            // so we have to make sure that C is also C in original path\n\n            fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n            if (p2) { // the same procedures is done to p2\n                p2[i] && (pfirst = p2[i][0]);\n                if (pfirst != \"C\") {\n                    pcoms2[i] = pfirst;\n                    i && (pcom = pcoms2[i - 1]);\n                }\n                p2[i] = processPath(p2[i], attrs2, pcom);\n\n                if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n                    pcoms2[i] = \"C\";\n                }\n\n                fixArc(p2, i);\n            }\n            fixM(p, p2, attrs, attrs2, i);\n            fixM(p2, p, attrs2, attrs, i);\n            var seg = p[i],\n                seg2 = p2 && p2[i],\n                seglen = seg.length,\n                seg2len = p2 && seg2.length;\n            attrs.x = seg[seglen - 2];\n            attrs.y = seg[seglen - 1];\n            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n            attrs2.x = p2 && seg2[seg2len - 2];\n            attrs2.y = p2 && seg2[seg2len - 1];\n        }\n        if (!p2) {\n            pth.curve = pathClone(p);\n        }\n        return p2 ? [p, p2] : p;\n    }\n    function mapPath(path, matrix) {\n        if (!matrix) {\n            return path;\n        }\n        var x, y, i, j, ii, jj, pathi;\n        path = path2curve(path);\n        for (i = 0, ii = path.length; i < ii; i++) {\n            pathi = path[i];\n            for (j = 1, jj = pathi.length; j < jj; j += 2) {\n                x = matrix.x(pathi[j], pathi[j + 1]);\n                y = matrix.y(pathi[j], pathi[j + 1]);\n                pathi[j] = x;\n                pathi[j + 1] = y;\n            }\n        }\n        return path;\n    }\n\n    // http://schepers.cc/getting-to-the-point\n    function catmullRom2bezier(crp, z) {\n        var d = [];\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n            var p = [\n                        {x: +crp[i - 2], y: +crp[i - 1]},\n                        {x: +crp[i],     y: +crp[i + 1]},\n                        {x: +crp[i + 2], y: +crp[i + 3]},\n                        {x: +crp[i + 4], y: +crp[i + 5]}\n                    ];\n            if (z) {\n                if (!i) {\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n                } else if (iLen - 4 == i) {\n                    p[3] = {x: +crp[0], y: +crp[1]};\n                } else if (iLen - 2 == i) {\n                    p[2] = {x: +crp[0], y: +crp[1]};\n                    p[3] = {x: +crp[2], y: +crp[3]};\n                }\n            } else {\n                if (iLen - 4 == i) {\n                    p[3] = p[2];\n                } else if (!i) {\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n                }\n            }\n            d.push([\"C\",\n                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n                  p[2].x,\n                  p[2].y\n            ]);\n        }\n\n        return d;\n    }\n\n    // export\n    Snap.path = paths;\n\n    /*\\\n     * Snap.path.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the given path in pixels\n     **\n     - path (string) SVG path string\n     **\n     = (number) length\n    \\*/\n    Snap.path.getTotalLength = getTotalLength;\n    /*\\\n     * Snap.path.getPointAtLength\n     [ method ]\n     **\n     * Returns the coordinates of the point located at the given length along the given path\n     **\n     - path (string) SVG path string\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    Snap.path.getPointAtLength = getPointAtLength;\n    /*\\\n     * Snap.path.getSubpath\n     [ method ]\n     **\n     * Returns the subpath of a given path between given start and end lengths\n     **\n     - path (string) SVG path string\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    Snap.path.getSubpath = function (path, from, to) {\n        if (this.getTotalLength(path) - to < 1e-6) {\n            return getSubpathsAtLength(path, from).end;\n        }\n        var a = getSubpathsAtLength(path, to, 1);\n        return from ? getSubpathsAtLength(a, from).end : a;\n    };\n    /*\\\n     * Element.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the path in pixels (only works for `path` elements)\n     = (number) length\n    \\*/\n    elproto.getTotalLength = function () {\n        if (this.node.getTotalLength) {\n            return this.node.getTotalLength();\n        }\n    };\n    // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n    /*\\\n     * Element.getPointAtLength\n     [ method ]\n     **\n     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n     **\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    elproto.getPointAtLength = function (length) {\n        return getPointAtLength(this.attr(\"d\"), length);\n    };\n    // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n    /*\\\n     * Element.getSubpath\n     [ method ]\n     **\n     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n     **\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    elproto.getSubpath = function (from, to) {\n        return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n    };\n    Snap._.box = box;\n    /*\\\n     * Snap.path.findDotsAtSegment\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds dot coordinates on the given cubic beziér curve at the given t\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     - t (number) position on the curve (0..1)\n     = (object) point information in format:\n     o {\n     o     x: (number) x coordinate of the point,\n     o     y: (number) y coordinate of the point,\n     o     m: {\n     o         x: (number) x coordinate of the left anchor,\n     o         y: (number) y coordinate of the left anchor\n     o     },\n     o     n: {\n     o         x: (number) x coordinate of the right anchor,\n     o         y: (number) y coordinate of the right anchor\n     o     },\n     o     start: {\n     o         x: (number) x coordinate of the start of the curve,\n     o         y: (number) y coordinate of the start of the curve\n     o     },\n     o     end: {\n     o         x: (number) x coordinate of the end of the curve,\n     o         y: (number) y coordinate of the end of the curve\n     o     },\n     o     alpha: (number) angle of the curve derivative at the point\n     o }\n    \\*/\n    Snap.path.findDotsAtSegment = findDotsAtSegment;\n    /*\\\n     * Snap.path.bezierBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given cubic beziér curve\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     * or\n     - bez (array) array of six points for beziér curve\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.bezierBBox = bezierBBox;\n    /*\\\n     * Snap.path.isPointInsideBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside bounding box\n     - bbox (string) bounding box\n     - x (string) x coordinate of the point\n     - y (string) y coordinate of the point\n     = (boolean) `true` if point is inside\n    \\*/\n    Snap.path.isPointInsideBBox = isPointInsideBBox;\n    Snap.closest = function (x, y, X, Y) {\n        var r = 100,\n            b = box(x - r / 2, y - r / 2, r, r),\n            inside = [],\n            getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n                return {\n                    x: X[i].x,\n                    y: X[i].y\n                };\n            } : function (i) {\n                return {\n                    x: X[i],\n                    y: Y[i]\n                };\n            },\n            found = 0;\n        while (r <= 1e6 && !found) {\n            for (var i = 0, ii = X.length; i < ii; i++) {\n                var xy = getter(i);\n                if (isPointInsideBBox(b, xy.x, xy.y)) {\n                    found++;\n                    inside.push(xy);\n                    break;\n                }\n            }\n            if (!found) {\n                r *= 2;\n                b = box(x - r / 2, y - r / 2, r, r)\n            }\n        }\n        if (r == 1e6) {\n            return;\n        }\n        var len = Infinity,\n            res;\n        for (i = 0, ii = inside.length; i < ii; i++) {\n            var l = Snap.len(x, y, inside[i].x, inside[i].y);\n            if (len > l) {\n                len = l;\n                inside[i].len = l;\n                res = inside[i];\n            }\n        }\n        return res;\n    };\n    /*\\\n     * Snap.path.isBBoxIntersect\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if two bounding boxes intersect\n     - bbox1 (string) first bounding box\n     - bbox2 (string) second bounding box\n     = (boolean) `true` if bounding boxes intersect\n    \\*/\n    Snap.path.isBBoxIntersect = isBBoxIntersect;\n    /*\\\n     * Snap.path.intersection\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds intersections of two paths\n     - path1 (string) path string\n     - path2 (string) path string\n     = (array) dots of intersection\n     o [\n     o     {\n     o         x: (number) x coordinate of the point,\n     o         y: (number) y coordinate of the point,\n     o         t1: (number) t value for segment of path1,\n     o         t2: (number) t value for segment of path2,\n     o         segment1: (number) order number for segment of path1,\n     o         segment2: (number) order number for segment of path2,\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n     o     }\n     o ]\n    \\*/\n    Snap.path.intersection = pathIntersection;\n    Snap.path.intersectionNumber = pathIntersectionNumber;\n    /*\\\n     * Snap.path.isPointInside\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside a given closed path.\n     *\n     * Note: fill mode doesn’t affect the result of this method.\n     - path (string) path string\n     - x (number) x of the point\n     - y (number) y of the point\n     = (boolean) `true` if point is inside the path\n    \\*/\n    Snap.path.isPointInside = isPointInsidePath;\n    /*\\\n     * Snap.path.getBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given path\n     - path (string) path string\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.getBBox = pathBBox;\n    Snap.path.get = getPath;\n    /*\\\n     * Snap.path.toRelative\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into relative values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toRelative = pathToRelative;\n    /*\\\n     * Snap.path.toAbsolute\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into absolute values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toAbsolute = pathToAbsolute;\n    /*\\\n     * Snap.path.toCubic\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to a new path where all segments are cubic beziér curves\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments\n    \\*/\n    Snap.path.toCubic = path2curve;\n    /*\\\n     * Snap.path.map\n     [ method ]\n     **\n     * Transform the path string with the given matrix\n     - path (string) path string\n     - matrix (object) see @Matrix\n     = (string) transformed path string\n    \\*/\n    Snap.path.map = mapPath;\n    Snap.path.toString = toString;\n    Snap.path.clone = pathClone;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var mmax = Math.max,\n        mmin = Math.min;\n\n    // Set\n    var Set = function (items) {\n        this.items = [];\n\tthis.bindings = {};\n        this.length = 0;\n        this.type = \"set\";\n        if (items) {\n            for (var i = 0, ii = items.length; i < ii; i++) {\n                if (items[i]) {\n                    this[this.items.length] = this.items[this.items.length] = items[i];\n                    this.length++;\n                }\n            }\n        }\n    },\n    setproto = Set.prototype;\n    /*\\\n     * Set.push\n     [ method ]\n     **\n     * Adds each argument to the current set\n     = (object) original element\n    \\*/\n    setproto.push = function () {\n        var item,\n            len;\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\n            item = arguments[i];\n            if (item) {\n                len = this.items.length;\n                this[len] = this.items[len] = item;\n                this.length++;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.pop\n     [ method ]\n     **\n     * Removes last element and returns it\n     = (object) element\n    \\*/\n    setproto.pop = function () {\n        this.length && delete this[this.length--];\n        return this.items.pop();\n    };\n    /*\\\n     * Set.forEach\n     [ method ]\n     **\n     * Executes given function for each element in the set\n     *\n     * If the function returns `false`, the loop stops running.\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Set object\n    \\*/\n    setproto.forEach = function (callback, thisArg) {\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            if (callback.call(thisArg, this.items[i], i) === false) {\n                return this;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.animate\n     [ method ]\n     **\n     * Animates each element in set in sync.\n     *\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     * or\n     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n     > Usage\n     | // animate all elements in set to radius 10\n     | set.animate({r: 10}, 500, mina.easein);\n     | // or\n     | // animate first element to radius 10, but second to radius 20 and in different time\n     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n     = (Element) the current element\n    \\*/\n    setproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Snap._.Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = easing.dur;\n            attrs = attrs.attr;\n        }\n        var args = arguments;\n        if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n            var each = true;\n        }\n        var begin,\n            handler = function () {\n                if (begin) {\n                    this.b = begin;\n                } else {\n                    begin = this.b;\n                }\n            },\n            cb = 0,\n            set = this,\n            callbacker = callback && function () {\n                if (++cb == set.length) {\n                    callback.call(this);\n                }\n            };\n        return this.forEach(function (el, i) {\n            eve.once(\"snap.animcreated.\" + el.id, handler);\n            if (each) {\n                args[i] && el.animate.apply(el, args[i]);\n            } else {\n                el.animate(attrs, ms, easing, callbacker);\n            }\n        });\n    };\n    setproto.remove = function () {\n        while (this.length) {\n            this.pop().remove();\n        }\n        return this;\n    };\n    /*\\\n     * Set.bind\n     [ method ]\n     **\n     * Specifies how to handle a specific attribute when applied\n     * to a set.\n     *\n     **\n     - attr (string) attribute name\n     - callback (function) function to run\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     - eattr (string) attribute on the element to bind the attribute to\n     = (object) Set object\n    \\*/\n    setproto.bind = function (attr, a, b) {\n        var data = {};\n        if (typeof a == \"function\") {\n            this.bindings[attr] = a;\n        } else {\n            var aname = b || attr;\n            this.bindings[attr] = function (v) {\n                data[aname] = v;\n                a.attr(data);\n            };\n        }\n        return this;\n    };\n    setproto.attr = function (value) {\n        var unbound = {};\n        for (var k in value) {\n            if (this.bindings[k]) {\n                this.bindings[k](value[k]);\n            } else {\n                unbound[k] = value[k];\n            }\n        }\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            this.items[i].attr(unbound);\n        }\n        return this;\n    };\n    /*\\\n     * Set.clear\n     [ method ]\n     **\n     * Removes all elements from the set\n    \\*/\n    setproto.clear = function () {\n        while (this.length) {\n            this.pop();\n        }\n    };\n    /*\\\n     * Set.splice\n     [ method ]\n     **\n     * Removes range of elements from the set\n     **\n     - index (number) position of the deletion\n     - count (number) number of element to remove\n     - insertion… (object) #optional elements to insert\n     = (object) set elements that were deleted\n    \\*/\n    setproto.splice = function (index, count, insertion) {\n        index = index < 0 ? mmax(this.length + index, 0) : index;\n        count = mmax(0, mmin(this.length - index, count));\n        var tail = [],\n            todel = [],\n            args = [],\n            i;\n        for (i = 2; i < arguments.length; i++) {\n            args.push(arguments[i]);\n        }\n        for (i = 0; i < count; i++) {\n            todel.push(this[index + i]);\n        }\n        for (; i < this.length - index; i++) {\n            tail.push(this[index + i]);\n        }\n        var arglen = args.length;\n        for (i = 0; i < arglen + tail.length; i++) {\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n        }\n        i = this.items.length = this.length -= count - arglen;\n        while (this[i]) {\n            delete this[i++];\n        }\n        return new Set(todel);\n    };\n    /*\\\n     * Set.exclude\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     - element (object) element to remove\n     = (boolean) `true` if object was found and removed from the set\n    \\*/\n    setproto.exclude = function (el) {\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n            this.splice(i, 1);\n            return true;\n        }\n        return false;\n    };\n    setproto.insertAfter = function (el) {\n        var i = this.items.length;\n        while (i--) {\n            this.items[i].insertAfter(el);\n        }\n        return this;\n    };\n    setproto.getBBox = function () {\n        var x = [],\n            y = [],\n            x2 = [],\n            y2 = [];\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n            var box = this.items[i].getBBox();\n            x.push(box.x);\n            y.push(box.y);\n            x2.push(box.x + box.width);\n            y2.push(box.y + box.height);\n        }\n        x = mmin.apply(0, x);\n        y = mmin.apply(0, y);\n        x2 = mmax.apply(0, x2);\n        y2 = mmax.apply(0, y2);\n        return {\n            x: x,\n            y: y,\n            x2: x2,\n            y2: y2,\n            width: x2 - x,\n            height: y2 - y,\n            cx: x + (x2 - x) / 2,\n            cy: y + (y2 - y) / 2\n        };\n    };\n    setproto.clone = function (s) {\n        s = new Set;\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            s.push(this.items[i].clone());\n        }\n        return s;\n    };\n    setproto.toString = function () {\n        return \"Snap\\u2018s set\";\n    };\n    setproto.type = \"set\";\n    // export\n    Snap.Set = Set;\n    Snap.set = function () {\n        var set = new Set;\n        if (arguments.length) {\n            set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n        }\n        return set;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var names = {},\n        reUnit = /[a-z]+$/i,\n        Str = String;\n    names.stroke = names.fill = \"colour\";\n    function getEmpty(item) {\n        var l = item[0];\n        switch (l.toLowerCase()) {\n            case \"t\": return [l, 0, 0];\n            case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n            case \"r\": if (item.length == 4) {\n                return [l, 0, item[2], item[3]];\n            } else {\n                return [l, 0];\n            }\n            case \"s\": if (item.length == 5) {\n                return [l, 1, 1, item[3], item[4]];\n            } else if (item.length == 3) {\n                return [l, 1, 1];\n            } else {\n                return [l, 1];\n            }\n        }\n    }\n    function equaliseTransform(t1, t2, getBBox) {\n        t2 = Str(t2).replace(/\\.{3}|\\u2026/g, t1);\n        t1 = Snap.parseTransformString(t1) || [];\n        t2 = Snap.parseTransformString(t2) || [];\n        var maxlength = Math.max(t1.length, t2.length),\n            from = [],\n            to = [],\n            i = 0, j, jj,\n            tt1, tt2;\n        for (; i < maxlength; i++) {\n            tt1 = t1[i] || getEmpty(t2[i]);\n            tt2 = t2[i] || getEmpty(tt1);\n            if ((tt1[0] != tt2[0]) ||\n                (tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3])) ||\n                (tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4]))\n                ) {\n                    t1 = Snap._.transform2matrix(t1, getBBox());\n                    t2 = Snap._.transform2matrix(t2, getBBox());\n                    from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n                    to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n                    break;\n            }\n            from[i] = [];\n            to[i] = [];\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n                j in tt1 && (from[i][j] = tt1[j]);\n                j in tt2 && (to[i][j] = tt2[j]);\n            }\n        }\n        return {\n            from: path2array(from),\n            to: path2array(to),\n            f: getPath(from)\n        };\n    }\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    function getViewBox(val) {\n        return val.join(\" \");\n    }\n    function getColour(clr) {\n        return Snap.rgb(clr[0], clr[1], clr[2]);\n    }\n    function getPath(path) {\n        var k = 0, i, ii, j, jj, out, a, b = [];\n        for (i = 0, ii = path.length; i < ii; i++) {\n            out = \"[\";\n            a = ['\"' + path[i][0] + '\"'];\n            for (j = 1, jj = path[i].length; j < jj; j++) {\n                a[j] = \"val[\" + (k++) + \"]\";\n            }\n            out += a + \"]\";\n            b[i] = out;\n        }\n        return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n    }\n    function path2array(path) {\n        var out = [];\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            for (var j = 1, jj = path[i].length; j < jj; j++) {\n                out.push(path[i][j]);\n            }\n        }\n        return out;\n    }\n    function isNumeric(obj) {\n        return isFinite(parseFloat(obj));\n    }\n    function arrayEqual(arr1, arr2) {\n        if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n            return false;\n        }\n        return arr1.toString() == arr2.toString();\n    }\n    Element.prototype.equal = function (name, b) {\n        return eve(\"snap.util.equal\", this, name, b).firstDefined();\n    };\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this;\n        if (isNumeric(a) && isNumeric(b)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getNumber\n            };\n        }\n        if (names[name] == \"colour\") {\n            A = Snap.color(a);\n            B = Snap.color(b);\n            return {\n                from: [A.r, A.g, A.b, A.opacity],\n                to: [B.r, B.g, B.b, B.opacity],\n                f: getColour\n            };\n        }\n        if (name == \"viewBox\") {\n            A = this.attr(name).vb.split(\" \").map(Number);\n            B = b.split(\" \").map(Number);\n            return {\n                from: A,\n                to: B,\n                f: getViewBox\n            };\n        }\n        if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n            if (b instanceof Snap.Matrix) {\n                b = b.toTransformString();\n            }\n            if (!Snap._.rgTransform.test(b)) {\n                b = Snap._.svgTransform2string(b);\n            }\n            return equaliseTransform(a, b, function () {\n                return el.getBBox(1);\n            });\n        }\n        if (name == \"d\" || name == \"path\") {\n            A = Snap.path.toCubic(a, b);\n            return {\n                from: path2array(A[0]),\n                to: path2array(A[1]),\n                f: getPath(A[0])\n            };\n        }\n        if (name == \"points\") {\n            A = Str(a).split(Snap._.separator);\n            B = Str(b).split(Snap._.separator);\n            return {\n                from: A,\n                to: B,\n                f: function (val) { return val; }\n            };\n        }\n        var aUnit = a.match(reUnit),\n            bUnit = Str(b).match(reUnit);\n        if (aUnit && arrayEqual(aUnit, bUnit)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getUnit(aUnit)\n            };\n        } else {\n            return {\n                from: this.asPX(name),\n                to: this.asPX(name, b),\n                f: getNumber\n            };\n        }\n    });\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n    has = \"hasOwnProperty\",\n    supportsTouch = \"createTouch\" in glob.doc,\n    events = [\n        \"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\",\n        \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\",\n        \"touchcancel\"\n    ],\n    touchMap = {\n        mousedown: \"touchstart\",\n        mousemove: \"touchmove\",\n        mouseup: \"touchend\"\n    },\n    getScroll = function (xy, el) {\n        var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n            doc = el && el.node ? el.node.ownerDocument : glob.doc;\n        return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n    },\n    preventDefault = function () {\n        this.returnValue = false;\n    },\n    preventTouch = function () {\n        return this.originalEvent.preventDefault();\n    },\n    stopPropagation = function () {\n        this.cancelBubble = true;\n    },\n    stopTouch = function () {\n        return this.originalEvent.stopPropagation();\n    },\n    addEvent = function (obj, type, fn, element) {\n        var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n            f = function (e) {\n                var scrollY = getScroll(\"y\", element),\n                    scrollX = getScroll(\"x\", element);\n                if (supportsTouch && touchMap[has](type)) {\n                    for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n                        if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n                            var olde = e;\n                            e = e.targetTouches[i];\n                            e.originalEvent = olde;\n                            e.preventDefault = preventTouch;\n                            e.stopPropagation = stopTouch;\n                            break;\n                        }\n                    }\n                }\n                var x = e.clientX + scrollX,\n                    y = e.clientY + scrollY;\n                return fn.call(element, e, x, y);\n            };\n\n        if (type !== realName) {\n            obj.addEventListener(type, f, false);\n        }\n\n        obj.addEventListener(realName, f, false);\n\n        return function () {\n            if (type !== realName) {\n                obj.removeEventListener(type, f, false);\n            }\n\n            obj.removeEventListener(realName, f, false);\n            return true;\n        };\n    },\n    drag = [],\n    dragMove = function (e) {\n        var x = e.clientX,\n            y = e.clientY,\n            scrollY = getScroll(\"y\"),\n            scrollX = getScroll(\"x\"),\n            dragi,\n            j = drag.length;\n        while (j--) {\n            dragi = drag[j];\n            if (supportsTouch) {\n                var i = e.touches && e.touches.length,\n                    touch;\n                while (i--) {\n                    touch = e.touches[i];\n                    if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n                        x = touch.clientX;\n                        y = touch.clientY;\n                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n                        break;\n                    }\n                }\n            } else {\n                e.preventDefault();\n            }\n            var node = dragi.el.node,\n                o,\n                next = node.nextSibling,\n                parent = node.parentNode,\n                display = node.style.display;\n            // glob.win.opera && parent.removeChild(node);\n            // node.style.display = \"none\";\n            // o = dragi.el.paper.getElementByPoint(x, y);\n            // node.style.display = display;\n            // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n            // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n            x += scrollX;\n            y += scrollY;\n            eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n        }\n    },\n    dragUp = function (e) {\n        Snap.unmousemove(dragMove).unmouseup(dragUp);\n        var i = drag.length,\n            dragi;\n        while (i--) {\n            dragi = drag[i];\n            dragi.el._drag = {};\n            eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n            eve.off(\"snap.drag.*.\" + dragi.el.id);\n        }\n        drag = [];\n    };\n    /*\\\n     * Element.click\n     [ method ]\n     **\n     * Adds a click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unclick\n     [ method ]\n     **\n     * Removes a click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.dblclick\n     [ method ]\n     **\n     * Adds a double click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.undblclick\n     [ method ]\n     **\n     * Removes a double click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousedown\n     [ method ]\n     **\n     * Adds a mousedown event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousedown\n     [ method ]\n     **\n     * Removes a mousedown event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousemove\n     [ method ]\n     **\n     * Adds a mousemove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousemove\n     [ method ]\n     **\n     * Removes a mousemove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseout\n     [ method ]\n     **\n     * Adds a mouseout event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseout\n     [ method ]\n     **\n     * Removes a mouseout event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseover\n     [ method ]\n     **\n     * Adds a mouseover event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseover\n     [ method ]\n     **\n     * Removes a mouseover event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseup\n     [ method ]\n     **\n     * Adds a mouseup event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseup\n     [ method ]\n     **\n     * Removes a mouseup event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchstart\n     [ method ]\n     **\n     * Adds a touchstart event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchstart\n     [ method ]\n     **\n     * Removes a touchstart event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchmove\n     [ method ]\n     **\n     * Adds a touchmove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchmove\n     [ method ]\n     **\n     * Removes a touchmove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchend\n     [ method ]\n     **\n     * Adds a touchend event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchend\n     [ method ]\n     **\n     * Removes a touchend event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchcancel\n     [ method ]\n     **\n     * Adds a touchcancel event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchcancel\n     [ method ]\n     **\n     * Removes a touchcancel event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    for (var i = events.length; i--;) {\n        (function (eventName) {\n            Snap[eventName] = elproto[eventName] = function (fn, scope) {\n                if (Snap.is(fn, \"function\")) {\n                    this.events = this.events || [];\n                    this.events.push({\n                        name: eventName,\n                        f: fn,\n                        unbind: addEvent(this.node || document, eventName, fn, scope || this)\n                    });\n                } else {\n                    for (var i = 0, ii = this.events.length; i < ii; i++) if (this.events[i].name == eventName) {\n                        try {\n                            this.events[i].f.call(this);\n                        } catch (e) {}\n                    }\n                }\n                return this;\n            };\n            Snap[\"un\" + eventName] =\n            elproto[\"un\" + eventName] = function (fn) {\n                var events = this.events || [],\n                    l = events.length;\n                while (l--) if (events[l].name == eventName &&\n                               (events[l].f == fn || !fn)) {\n                    events[l].unbind();\n                    events.splice(l, 1);\n                    !events.length && delete this.events;\n                    return this;\n                }\n                return this;\n            };\n        })(events[i]);\n    }\n    /*\\\n     * Element.hover\n     [ method ]\n     **\n     * Adds hover event handlers to the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     - icontext (object) #optional context for hover in handler\n     - ocontext (object) #optional context for hover out handler\n     = (object) @Element\n    \\*/\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n    };\n    /*\\\n     * Element.unhover\n     [ method ]\n     **\n     * Removes hover event handlers from the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     = (object) @Element\n    \\*/\n    elproto.unhover = function (f_in, f_out) {\n        return this.unmouseover(f_in).unmouseout(f_out);\n    };\n    var draggable = [];\n    // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n    // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n    // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n    // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n    /*\\\n     * Element.drag\n     [ method ]\n     **\n     * Adds event handlers for an element's drag gesture\n     **\n     - onmove (function) handler for moving\n     - onstart (function) handler for drag start\n     - onend (function) handler for drag end\n     - mcontext (object) #optional context for moving handler\n     - scontext (object) #optional context for drag start handler\n     - econtext (object) #optional context for drag end handler\n     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, \n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element \n     * `drag.over.<id>` fires as well.\n     *\n     * Start event and start handler are called in specified context or in context of the element with following parameters:\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * Move event and move handler are called in specified context or in context of the element with following parameters:\n     o dx (number) shift by x from the start point\n     o dy (number) shift by y from the start point\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * End event and end handler are called in specified context or in context of the element with following parameters:\n     o event (object) DOM event object\n     = (object) @Element\n    \\*/\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n        var el = this;\n        if (!arguments.length) {\n            var origTransform;\n            return el.drag(function (dx, dy) {\n                this.attr({\n                    transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n                });\n            }, function () {\n                origTransform = this.transform().local;\n            });\n        }\n        function start(e, x, y) {\n            (e.originalEvent || e).preventDefault();\n            el._drag.x = x;\n            el._drag.y = y;\n            el._drag.id = e.identifier;\n            !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n            drag.push({el: el, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n            onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n            onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n            onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n            eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n        }\n        function init(e, x, y) {\n            eve(\"snap.draginit.\" + el.id, el, e, x, y);\n        }\n        eve.on(\"snap.draginit.\" + el.id, start);\n        el._drag = {};\n        draggable.push({el: el, start: start, init: init});\n        el.mousedown(init);\n        return el;\n    };\n    /*\n     * Element.onDragOver\n     [ method ]\n     **\n     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n     - f (function) handler for event, first argument would be the element you are dragging over\n    \\*/\n    // elproto.onDragOver = function (f) {\n    //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n    // };\n    /*\\\n     * Element.undrag\n     [ method ]\n     **\n     * Removes all drag event handlers from the given element\n    \\*/\n    elproto.undrag = function () {\n        var i = draggable.length;\n        while (i--) if (draggable[i].el == this) {\n            this.unmousedown(draggable[i].init);\n            draggable.splice(i, 1);\n            eve.unbind(\"snap.drag.*.\" + this.id);\n            eve.unbind(\"snap.draginit.\" + this.id);\n        }\n        !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        pproto = Paper.prototype,\n        rgurl = /^\\s*url\\((.+)\\)/,\n        Str = String,\n        $ = Snap._.$;\n    Snap.filter = {};\n    /*\\\n     * Paper.filter\n     [ method ]\n     **\n     * Creates a `<filter>` element\n     **\n     - filstr (string) SVG fragment of filter provided as a string\n     = (object) @Element\n     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n     > Usage\n     | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    pproto.filter = function (filstr) {\n        var paper = this;\n        if (paper.type != \"svg\") {\n            paper = paper.paper;\n        }\n        var f = Snap.parse(Str(filstr)),\n            id = Snap._.id(),\n            width = paper.node.offsetWidth,\n            height = paper.node.offsetHeight,\n            filter = $(\"filter\");\n        $(filter, {\n            id: id,\n            filterUnits: \"userSpaceOnUse\"\n        });\n        filter.appendChild(f.node);\n        paper.defs.appendChild(filter);\n        return new Element(filter);\n    };\n    \n    eve.on(\"snap.util.getattr.filter\", function () {\n        eve.stop();\n        var p = $(this.node, \"filter\");\n        if (p) {\n            var match = Str(p).match(rgurl);\n            return match && Snap.select(match[1]);\n        }\n    });\n    eve.on(\"snap.util.attr.filter\", function (value) {\n        if (value instanceof Element && value.type == \"filter\") {\n            eve.stop();\n            var id = value.node.id;\n            if (!id) {\n                $(value.node, {id: value.id});\n                id = value.id;\n            }\n            $(this.node, {\n                filter: Snap.url(id)\n            });\n        }\n        if (!value || value == \"none\") {\n            eve.stop();\n            this.node.removeAttribute(\"filter\");\n        }\n    });\n    /*\\\n     * Snap.filter.blur\n     [ method ]\n     **\n     * Returns an SVG markup string for the blur filter\n     **\n     - x (number) amount of horizontal blur, in pixels\n     - y (number) #optional amount of vertical blur, in pixels\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.blur(5, 10)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.blur = function (x, y) {\n        if (x == null) {\n            x = 2;\n        }\n        var def = y == null ? x : [x, y];\n        return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n            def: def\n        });\n    };\n    Snap.filter.blur.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.shadow\n     [ method ]\n     **\n     * Returns an SVG markup string for the shadow filter\n     **\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - blur (number) #optional amount of blur\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * which makes blur default to `4`. Or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - opacity (number) #optional `0..1` opacity of the shadow\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.shadow(0, 2, 3)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n        if (typeof blur == \"string\") {\n            color = blur;\n            opacity = color;\n            blur = 4;\n        }\n        if (typeof color != \"string\") {\n            opacity = color;\n            color = \"#000\";\n        }\n        color = color || \"#000\";\n        if (blur == null) {\n            blur = 4;\n        }\n        if (opacity == null) {\n            opacity = 1;\n        }\n        if (dx == null) {\n            dx = 0;\n            dy = 2;\n        }\n        if (dy == null) {\n            dy = dx;\n        }\n        color = Snap.color(color);\n        return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n            color: color,\n            dx: dx,\n            dy: dy,\n            blur: blur,\n            opacity: opacity\n        });\n    };\n    Snap.filter.shadow.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.grayscale\n     [ method ]\n     **\n     * Returns an SVG markup string for the grayscale filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.grayscale = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n            a: 0.2126 + 0.7874 * (1 - amount),\n            b: 0.7152 - 0.7152 * (1 - amount),\n            c: 0.0722 - 0.0722 * (1 - amount),\n            d: 0.2126 - 0.2126 * (1 - amount),\n            e: 0.7152 + 0.2848 * (1 - amount),\n            f: 0.0722 - 0.0722 * (1 - amount),\n            g: 0.2126 - 0.2126 * (1 - amount),\n            h: 0.0722 + 0.9278 * (1 - amount)\n        });\n    };\n    Snap.filter.grayscale.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.sepia\n     [ method ]\n     **\n     * Returns an SVG markup string for the sepia filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.sepia = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n            a: 0.393 + 0.607 * (1 - amount),\n            b: 0.769 - 0.769 * (1 - amount),\n            c: 0.189 - 0.189 * (1 - amount),\n            d: 0.349 - 0.349 * (1 - amount),\n            e: 0.686 + 0.314 * (1 - amount),\n            f: 0.168 - 0.168 * (1 - amount),\n            g: 0.272 - 0.272 * (1 - amount),\n            h: 0.534 - 0.534 * (1 - amount),\n            i: 0.131 + 0.869 * (1 - amount)\n        });\n    };\n    Snap.filter.sepia.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.saturate\n     [ method ]\n     **\n     * Returns an SVG markup string for the saturate filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.saturate = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n            amount: 1 - amount\n        });\n    };\n    Snap.filter.saturate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.hueRotate\n     [ method ]\n     **\n     * Returns an SVG markup string for the hue-rotate filter\n     **\n     - angle (number) angle of rotation\n     = (string) filter representation\n    \\*/\n    Snap.filter.hueRotate = function (angle) {\n        angle = angle || 0;\n        return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n            angle: angle\n        });\n    };\n    Snap.filter.hueRotate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.invert\n     [ method ]\n     **\n     * Returns an SVG markup string for the invert filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.invert = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n//        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n        return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: 1 - amount\n        });\n    };\n    Snap.filter.invert.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.brightness\n     [ method ]\n     **\n     * Returns an SVG markup string for the brightness filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.brightness = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n            amount: amount\n        });\n    };\n    Snap.filter.brightness.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.contrast\n     [ method ]\n     **\n     * Returns an SVG markup string for the contrast filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.contrast = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: .5 - amount / 2\n        });\n    };\n    Snap.filter.contrast.toString = function () {\n        return this();\n    };\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var box = Snap._.box,\n        is = Snap.is,\n        firstLetter = /^[^a-z]*([tbmlrc])/i,\n        toString = function () {\n            return \"T\" + this.dx + \",\" + this.dy;\n        };\n    /*\\\n     * Element.getAlign\n     [ method ]\n     **\n     * Returns shift needed to align the element relatively to given element.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n     > Usage\n     | el.transform(el.getAlign(el2, \"top\"));\n     * or\n     | var dy = el.getAlign(el2, \"top\").dy;\n    \\*/\n    Element.prototype.getAlign = function (el, way) {\n        if (way == null && is(el, \"string\")) {\n            way = el;\n            el = null;\n        }\n        el = el || this.paper;\n        var bx = el.getBBox ? el.getBBox() : box(el),\n            bb = this.getBBox(),\n            out = {};\n        way = way && way.match(firstLetter);\n        way = way ? way[1].toLowerCase() : \"c\";\n        switch (way) {\n            case \"t\":\n                out.dx = 0;\n                out.dy = bx.y - bb.y;\n            break;\n            case \"b\":\n                out.dx = 0;\n                out.dy = bx.y2 - bb.y2;\n            break;\n            case \"m\":\n                out.dx = 0;\n                out.dy = bx.cy - bb.cy;\n            break;\n            case \"l\":\n                out.dx = bx.x - bb.x;\n                out.dy = 0;\n            break;\n            case \"r\":\n                out.dx = bx.x2 - bb.x2;\n                out.dy = 0;\n            break;\n            default:\n                out.dx = bx.cx - bb.cx;\n                out.dy = 0;\n            break;\n        }\n        out.toString = toString;\n        return out;\n    };\n    /*\\\n     * Element.align\n     [ method ]\n     **\n     * Aligns the element relatively to given one via transformation.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object) this element\n     > Usage\n     | el.align(el2, \"top\");\n     * or\n     | el.align(\"middle\");\n    \\*/\n    Element.prototype.align = function (el, way) {\n        return this.transform(\"...\" + this.getAlign(el, way));\n    };\n});\n\nreturn Snap;\n}));"]},"metadata":{},"sourceType":"script"}