'use strict';

exports.__esModule = true;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _IconMenu = require('material-ui/IconMenu');

var _IconMenu2 = _interopRequireDefault(_IconMenu);

var _MenuItem = require('material-ui/MenuItem');

var _MenuItem2 = _interopRequireDefault(_MenuItem);

var _IconButton = require('material-ui/IconButton/IconButton');

var _IconButton2 = _interopRequireDefault(_IconButton);

var _moreVert = require('material-ui/svg-icons/navigation/more-vert');

var _moreVert2 = _interopRequireDefault(_moreVert);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ListMenu = function (_Component) {
  _inherits(ListMenu, _Component);

  function ListMenu() {
    _classCallCheck(this, ListMenu);

    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
  }

  ListMenu.prototype.render = function render() {
    var _props = this.props,
        items = _props.items,
        iconMenuColor = _props.iconMenuColor;


    return _react2.default.createElement(
      _IconMenu2.default,
      {
        iconButtonElement: _react2.default.createElement(
          _IconButton2.default,
          null,
          _react2.default.createElement(_moreVert2.default, { color: iconMenuColor !== undefined ? iconMenuColor : undefined })
        ) },
      items.map(function (item, i) {
        return _react2.default.createElement(_MenuItem2.default, {
          key: i,
          disabled: item.disabled,
          primaryText: item.text,
          onClick: item.onClick
        });
      })
    );
  };

  return ListMenu;
}(_react.Component);

;

ListMenu.propTypes = process.env.NODE_ENV !== "production" ? {
  items: _propTypes2.default.array.isRequired,
  iconMenuColor: _propTypes2.default.string
} : {};

exports.default = ListMenu;
module.exports = exports['default'];